<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.0">
    <HostPackage>
        <Host autoClearCommandLineAfterSend="no" disableAutoCompletion="no" printCommand="yes" USE_IRE_DRIVER_BUGFIX="yes" mUSE_FORCE_LF_AFTER_PROMPT="no" mUSE_UNIX_EOL="no" mNoAntiAlias="no" mRawStreamDump="yes" mAlertOnNewData="yes" mFORCE_NO_COMPRESSION="no" mFORCE_GA_OFF="no" mFORCE_SAVE_ON_EXIT="no" mEnableGMCP="no" mEnableMSDP="no" mMapStrongHighlight="no" mLogStatus="no" mEnableSpellCheck="yes" mShowInfo="yes" mAcceptServerGUI="yes" mMapperUseAntiAlias="no" mFORCE_MXP_NEGOTIATION_OFF="no" mRoomSize="0.5" mLineSize="5" mBubbleMode="yes" mShowRoomIDs="yes" mShowPanel="yes" mHaveMapperScript="no" mDoubleClickIgnore="&quot;'">
            <name>DurisMUD</name>
            <mInstalledPackages>
                <string>deleteOldProfiles</string>
                <string>echo</string>
                <string>run-lua-code-v4</string>
                <string>DarkwardMudlet</string>
                <string>DurisMudDechoClassList</string>
            </mInstalledPackages>
            <url>durismud.com</url>
            <serverPackageName>nothing</serverPackageName>
            <serverPackageVersion>-1</serverPackageVersion>
            <port>7777</port>
            <borderTopHeight>46</borderTopHeight>
            <borderBottomHeight>61</borderBottomHeight>
            <borderLeftWidth>384</borderLeftWidth>
            <borderRightWidth>480</borderRightWidth>
            <wrapAt>160</wrapAt>
            <wrapIndentCount>0</wrapIndentCount>
            <commandSeperator>;</commandSeperator>
            <mFgColor>#c0c0c0</mFgColor>
            <mBgColor>#000000</mBgColor>
            <mCommandFgColor>#717100</mCommandFgColor>
            <mCommandBgColor>#000000</mCommandBgColor>
            <mCommandLineFgColor>#808080</mCommandLineFgColor>
            <mCommandLineBgColor>#000000</mCommandLineBgColor>
            <mBlack>#000000</mBlack>
            <mLightBlack>#808080</mLightBlack>
            <mRed>#800000</mRed>
            <mLightRed>#ff0000</mLightRed>
            <mBlue>#00aaff</mBlue>
            <mLightBlue>#55aaff</mLightBlue>
            <mGreen>#00b300</mGreen>
            <mLightGreen>#00ff00</mLightGreen>
            <mYellow>#808000</mYellow>
            <mLightYellow>#ffff00</mLightYellow>
            <mCyan>#008080</mCyan>
            <mLightCyan>#00ffff</mLightCyan>
            <mMagenta>#800080</mMagenta>
            <mLightMagenta>#ff00ff</mLightMagenta>
            <mWhite>#c0c0c0</mWhite>
            <mLightWhite>#ffffff</mLightWhite>
            <mDisplayFont>Bitstream Vera Sans Mono,13,-1,5,2,0,0,0,1,0</mDisplayFont>
            <mCommandLineFont>Bitstream Vera Sans Mono,10,-1,5,2,0,0,0,0,0</mCommandLineFont>
            <mCommandSeparator>;</mCommandSeparator>
            <commandLineMinimumHeight>30</commandLineMinimumHeight>
            <mFgColor2>#c0c0c0</mFgColor2>
            <mBgColor2>#000000</mBgColor2>
            <mBlack2>#242424</mBlack2>
            <mLightBlack2>#808080</mLightBlack2>
            <mRed2>#800000</mRed2>
            <mLightRed2>#ff0000</mLightRed2>
            <mBlue2>#000080</mBlue2>
            <mLightBlue2>#0000ff</mLightBlue2>
            <mGreen2>#00b300</mGreen2>
            <mLightGreen2>#00ff00</mLightGreen2>
            <mYellow2>#808000</mYellow2>
            <mLightYellow2>#ffff00</mLightYellow2>
            <mCyan2>#008080</mCyan2>
            <mLightCyan2>#00ffff</mLightCyan2>
            <mMagenta2>#800080</mMagenta2>
            <mLightMagenta2>#ff00ff</mLightMagenta2>
            <mWhite2>#c0c0c0</mWhite2>
            <mLightWhite2>#ffffff</mLightWhite2>
            <mSpellDic>en_US</mSpellDic>
            <mLineSize>5</mLineSize>
            <mRoomSize>0.5</mRoomSize>
        </Host>
    </HostPackage>
    <TriggerPackage>
        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>DarkwardMudlet</name>
            <script></script>
            <triggerType>0</triggerType>
            <conditonLineDelta>0</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName>DarkwardMudlet</packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList/>
            <regexCodePropertyList/>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>DurisTriggers</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>AutoQuest</name>
                    <script>myQuestMob = matches[2]
myQuestZone = matches[3]
myQuestMonth = matches[4]</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Go ask (.*) in (.*) about the (.*).</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>KillQuest</name>
                        <script>QuestTarget = matches[2]</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Go kill (\d+)\s(.*) \(\d+ left\) in (.*)!</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>AutoFish</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Caught Fish</name>
                        <script>send(&quot;put all bp;get all.pole bp;fish&quot;)
--Fish and Prac
--Uncomment below for BARD
--send(&quot;play &quot; ..mySong)
--Uncomment below for MONK
--send(&quot;chant regen;chant calm;chant hero&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You reel in (.*) on your fishing pole!</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Restart Fish</name>
                        <script>send(&quot;fish&quot;)
--send(&quot;play &quot; ..mySong)
--Fish and Prac
--Uncomment below for BARD
--send(&quot;play &quot; ..mySong)
--Uncomment below for MONK
--send(&quot;chant regen;chant calm;chant hero&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You didn't catch a thing..</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>CombatStats</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Stats</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Count Dodged</name>
                            <script>CombatDodge = CombatDodge+1</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>dodges your futile attack.$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>CountHits</name>
                            <script>CombatHit=CombatHit+1</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^\[Damage:</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>CountMisses</name>
                            <script>CombatMiss = CombatMiss+1</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^You miss</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CombatGeneral</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Fumble</name>
                            <script>send(&quot;get &quot;..myWeapon)
send(&quot;wield &quot;..myWeapon)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>You swing at your foe _really_ badly, sending your</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>2</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>BashWatch</name>
                            <script>cecho(&quot;&lt;cyan&gt;&lt;========== STANDING: &quot;..matches[2])</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(.*) clambers to (\w+) feet</string>
                                <string>(.*) rises to (\w+) feet</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>whoTank</name>
                            <script>RescueTarget = matches[3]
cecho(&quot;&lt;cyan&gt;&lt;===== &quot;..RescueTarget..&quot;&lt;cyan&gt; [F12]&quot;)
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^(.*) attacks (\w+).*(\d+) hits</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Target on Me</name>
                            <script>Target = matches[2]
cecho(&quot;&lt;DodgerBlue&gt;&lt;==================== Target set to: &lt;khaki&gt;&quot; ..Target)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(\w+) suddenly attacks YOU!$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                </TriggerGroup>
                <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>XPBOT</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>WSPark</name>
                        <script>if myCombatStatus then
	doCombat()
else
	send(&quot;kill &quot;..matches[2])
end
disableTrigger(&quot;XPBOT&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>(snapping|bee|box|duck|hummingbird|wasp)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Rogue</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Flee Backstab</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>FleeBac</name>
                            <script>return_Dir = flee_Dir[matches[2]]
cecho(&quot;&lt;cyan&gt;&lt;===== Return direction set to: &quot;..return_Dir)
send(&quot;save;&quot;..return_Dir..&quot;;backstab &quot;..Target)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^You flee (\w+)ward!</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>PromptTriggerGroup</name>
                    <script>
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Combat Prompt</name>
                        <script>if myCombatStatus==false then
	myCombatStatus = true
	cecho(&quot;\n&lt;cyan&gt;&lt;===== COMBAT STATUS ON =====&gt;&quot;)
end


if myTank ~= matches[2] then
	myTank=matches[2]
	cecho(&quot;\n&lt;cyan&gt;&lt;================================================================================ &quot;..myTank..&quot;&lt;cyan&gt; is TANKING&quot;)
end

myTank=matches[2]
myTankPos=matches[3]
myTankCond=matches[4]
myEnemy=matches[5]
myEnemyPos=matches[6]
myEnemyCond=matches[7]
--[[
darkward.BottomStatus1:echo(myTank)
darkward.BottomStatus2:echo(myTankPos)
darkward.BottomStatus3:echo(myTankCond)
darkward.BottomStatus4:echo(myEnemy)
darkward.BottomStatus5:echo(myEnemyPos)
darkward.BottomStatus6:echo(myEnemyCond)
]]--

disableTrigger(&quot;Container Content&quot;)
disableTrigger(&quot;CaptureEquipmentWorn&quot;)
disableTrigger(&quot;Item Value on Inventory&quot;)
</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^\&lt; T: (.*) TP: (.*) TC: (.*) E: (.*) EP: (.*) EC: (.*)\&gt; </string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>ManaPromptCapture</name>
                        <script>HEALTH(tonumber(matches[2]), tonumber(matches[3]))
MANA(tonumber(matches[4]), tonumber(matches[5]))
MOVES(tonumber(matches[6]), tonumber(matches[7]))
--ACTIONS(tonumber(matches[4]), tonumber(matches[5]))
--deleteLine() 
if myCombatStatus==true then
	myCombatStatus = false
	cecho(&quot;&lt;cyan&gt;&lt;===== COMBAT STATUS OFF =====&gt;&lt;/cyan&gt;&quot;)
end</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^\&lt; (-{0,1}\d*\.{0,1}\d+)h\/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)m\/(\d+)M\s(-{0,1}\d*\.{0,1}\d+)v\/(\d+)V\sPos: (.*) &gt;</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>PromptCapture</name>
                        <script>-- regex old: ^\&lt; (-{0,1}\d*\.{0,1}\d+)h/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)v/(\d+)V\sPos: (.*) &gt;$
HEALTH(tonumber(matches[2]), tonumber(matches[3]))
MOVES(tonumber(matches[4]), tonumber(matches[5]))




disableTrigger(&quot;Container Content&quot;)
disableTrigger(&quot;CaptureEquipmentWorn&quot;)
disableTrigger(&quot;Item Value on Inventory&quot;)
</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^\&lt; (\d+)h/(\d+)H (\d+)v/(\d+)V Pos: (standing|kneeling|sitting|on your ass)&gt; $</string>
                            <string>^\&lt; (-{0,1}\d*\.{0,1}\d+)h/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)v/(\d+)V\sPos: (.*) &gt;$</string>
                            <string>^\&lt; (-{0,1}\d*\.{0,1}\d+)h\/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)m\/(\d+)M\s(-{0,1}\d*\.{0,1}\d+)v\/(\d+)V\sPos: (.*) &gt;</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>DeleteMSP Prompt</name>
                        <script>deleteLine() </script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>&lt;prompt&gt;</string>
                            <string>&lt;/prompt&gt;</string>
                            <string>&lt;map&gt;</string>
                            <string>&lt;/map&gt;</string>
                            <string>&lt;automap&gt;</string>
                            <string>&lt;/automap&gt;</string>
                            <string>&lt;group&gt;</string>
                            <string>&lt;/group&gt;</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>2</integer>
                            <integer>2</integer>
                            <integer>2</integer>
                            <integer>2</integer>
                            <integer>2</integer>
                            <integer>2</integer>
                            <integer>2</integer>
                            <integer>2</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>PK</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>EvilEnters</name>
                        <script>t = matches[2]:split(&quot; &quot;)
Target = t[1]
echo (&quot;====================================Target set to: &quot; .. Target .. &quot;\n&quot;)
-- send(&quot;kill &quot; .. Target)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^[A|An] (Drow Elf|Troll|Minotaur|Githyanki|Lich|Orc|Ogre|Duergar|Shadow Beast|Vampire|Death Knight|Goblin|Thri-kreen|Illithid) [enters|exits|sneaks|lands|trots|floats|flies|snaps|searches|rides]</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Misc</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>SetSpringTrue</name>
                        <script>checkSpring = true
cecho(&quot;&lt;cyan&gt;&lt;===== CheckSpring set to TRUE =====&gt;&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>A spring shoots up from the ground</string>
                            <string>A tiny spring bubbles here from the ground</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>SetSpringFalse</name>
                        <script>checkSpring = false
cecho(&quot;&lt;cyan&gt;&lt;===== CheckSpring set to FALSE =====&gt;&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>A tiny bubbling spring rapidly shrinks in size until finally it disappears entirely</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>EXP_Tracker</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>ExpTrackerOld</name>
                        <script>myPrevExp = myCurExp
myCurExp = tonumber(matches[2])

cecho(&quot;\n&lt;magenta&gt;Experience gained since last check: &quot;..myPrevExp-myCurExp)

myExpText = myCurExp..&quot;, (&quot;..myPrevExp-myCurExp..&quot;)&quot;

EXPTEXT(myExpText)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Experience till level: (\d+)$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>ExpTracker</name>
                        <script>if matches[1] == &quot;You have just begun the trek to your next level!&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 0%&quot;)
	EXP(0)
elseif  matches[1] == &quot;You are still a very long way from your next level.&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 10%&quot;)
	EXP(10)
elseif  matches[1] == &quot;You have gained some progress, but still have a ways to go yet towards your next level.&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 20%&quot;)
	EXP(20)
elseif  matches[1] == &quot;You have gained some progress, and are nearing the half-way point in the trek to your next level.&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 30%&quot;)
	EXP(30)
elseif  matches[1] == &quot;You are close to the half-way point in the journey towards your next level.&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 40%&quot;)
	EXP(40)
elseif  matches[1] == &quot;You are at the half-way point towards this next level!&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 50%&quot;)
	EXP(50)
elseif  matches[1] == &quot;You have just passed the half-way point on the way towards your next level.&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 60%&quot;)
	EXP(60)
elseif  matches[1] == &quot;You are well on your way towards your next level.&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 70%&quot;)
	EXP(70)
elseif  matches[1] == &quot;You are three quarters the way to your next level.&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 75%&quot;)
	EXP(75)
elseif  matches[1] == &quot;You are almost ready to attain your next level!&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 80%&quot;)
	EXP(80)
elseif  matches[1] == &quot;You should level anytime now!&quot; then
	cecho(&quot;\n&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 90%&quot;)
	EXP(90)
end</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You have just begun the trek to your next level!</string>
                            <string>You are still a very long way from your next level.</string>
                            <string>You have gained some progress, but still have a ways to go yet towards your next level.</string>
                            <string>You have gained some progress, and are nearing the half-way point in the trek to your next level.</string>
                            <string>You are close to the half-way point in the journey towards your next level.</string>
                            <string>You are at the half-way point towards this next level!</string>
                            <string>You have just passed the half-way point on the way towards your next level.</string>
                            <string>You are well on your way towards your next level.</string>
                            <string>You are almost ready to attain your next level!</string>
                            <string>You should level anytime now!</string>
                            <string>You are three quarters the way to your next level.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                            <integer>3</integer>
                            <integer>3</integer>
                            <integer>3</integer>
                            <integer>3</integer>
                            <integer>3</integer>
                            <integer>3</integer>
                            <integer>3</integer>
                            <integer>3</integer>
                            <integer>3</integer>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Captures</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CaptureCharacterInfo</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>getName</name>
                            <script>myName = matches[2]</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>Character attributes for (\w+)</string>
                                <string>Score information for (\w+)</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>ScoreCapture</name>
                            <script>clearUserWindow(&quot;GUI.Box4Mini&quot;)
myName = matches[2]
selectCurrentLine()
copy()
appendBuffer(&quot;GUI.Box4Mini&quot;)
--demonnic.chat:append(&quot;Score&quot;) 
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>99</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>Score information for (.*)</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>LevelRaceClassCapture</name>
                                <script>selectCurrentLine()
copy()
appendBuffer(&quot;GUI.Box4Mini&quot;)
myLevel= tonumber(matches[2])
myClass= matches[4]
myRace= matches[5]


if myClass ~= ActiveClass then
	for k,v in ipairs(DurisClassList) do
		disableAlias(v)
	end
	ActiveClass = myClass
	enableAlias(myClass)
else
	echo(&quot;\n&quot;..ActiveClass..&quot; Class Aliases are ACTIVE&quot;)
end</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>^Level:\s+(\d+)\s+Race:\s+(\w+)\s+Class:\s+(\w+)</string>
                                    <string>^Level:\s+(\d+)\s+Race:\s+(\w+ \w+)\s+Class:\s+(\w+)</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>captureBuffs</name>
                                <script>--clearUserWindow(&quot;GUI.Box7&quot;)
selectCurrentLine()
copy()
appendBuffer(&quot;GUI.Box4Mini&quot;)
--demonnic.chat:append(&quot;Score&quot;) </script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>^Detecting:\s(.*)$</string>
                                    <string>^Paladin auras:\s(.*)$</string>
                                    <string>^Protected from:\s(.*)$</string>
                                    <string>^Enchantments:\s(.*)$</string>
                                    <string>^Songs:\s(.*)$</string>
                                    <string>^Protected by:\s(.*)$</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>ActiveSpells</name>
                                <script>echo(&quot;GUI.Box4Mini&quot;, &quot;\nACTIVE SPELLS\n&quot;)
myActiveSpells={}

</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>1</conditonLineDelta>
                                <mStayOpen>99</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>Active Spells:</string>
                                    <string>--------------</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>2</integer>
                                    <integer>2</integer>
                                </regexCodePropertyList>
                                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                    <name>CapActiveSpells</name>
                                    <script>local x = 0


if tonumber(matches[3])==nil then x=1
	else x=matches[3]
end
myActiveSpells[matches[2]]=tonumber(x)
selectCurrentLine()
copy()
--appendBuffer(&quot;Left3&quot;)
replace(matches[2]..&quot; (&quot;..x..&quot;)&quot;)

--demonnic.chat:append(&quot;Score&quot;) 
appendBuffer(&quot;GUI.Box4Mini&quot;)
</script>
                                    <triggerType>0</triggerType>
                                    <conditonLineDelta>0</conditonLineDelta>
                                    <mStayOpen>0</mStayOpen>
                                    <mCommand></mCommand>
                                    <packageName></packageName>
                                    <mFgColor>#ff0000</mFgColor>
                                    <mBgColor>#ffff00</mBgColor>
                                    <mSoundFile></mSoundFile>
                                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                    <regexCodeList>
                                        <string>^(.*)\s\((\d+|less than a minute remaining)</string>
                                    </regexCodeList>
                                    <regexCodePropertyList>
                                        <integer>1</integer>
                                    </regexCodePropertyList>
                                </Trigger>
                                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                    <name>ToggleActiveSpells</name>
                                    <script>--spairs_print(myActiveSpells)
setTriggerStayOpen(&quot;ActiveSpells&quot;, 0)
setTriggerStayOpen(&quot;ScoreCapture&quot;, 0)</script>
                                    <triggerType>0</triggerType>
                                    <conditonLineDelta>0</conditonLineDelta>
                                    <mStayOpen>0</mStayOpen>
                                    <mCommand></mCommand>
                                    <packageName></packageName>
                                    <mFgColor>#ff0000</mFgColor>
                                    <mBgColor>#ffff00</mBgColor>
                                    <mSoundFile></mSoundFile>
                                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                    <regexCodeList>
                                        <string>^\n$</string>
                                    </regexCodeList>
                                    <regexCodePropertyList>
                                        <integer>1</integer>
                                    </regexCodePropertyList>
                                </Trigger>
                            </TriggerGroup>
                        </TriggerGroup>
                    </TriggerGroup>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CaptureComms</name>
                        <script>--  &quot;All&quot;,
--  &quot;RaceWar&quot;,
--  &quot;Guild&quot;,
--  &quot;Tells&quot;,
--  &quot;Says&quot;,
--  &quot;Misc&quot;,</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>captureGuild</name>
                            <script>demonnic.chat:append(&quot;Guild&quot;) </script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>tells your guild</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>0</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>captureRacewar</name>
                            <script>demonnic.chat:append(&quot;RaceWar&quot;) </script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>tells your racewar:</string>
                                <string>tells your guild</string>
                                <string>^(\w+) tells you (.*)</string>
                                <string>^You tell</string>
                                <string>group-says</string>
                                <string>^You say</string>
                                <string>tells your alliance</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>0</integer>
                                <integer>0</integer>
                                <integer>1</integer>
                                <integer>1</integer>
                                <integer>0</integer>
                                <integer>1</integer>
                                <integer>0</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>captureTells</name>
                            <script>demonnic.chat:append(&quot;Tells&quot;) </script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^(\w+) tells you (.*)</string>
                                <string>^You tell</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>captureSays</name>
                            <script>demonnic.chat:append(&quot;Says&quot;) </script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>group-says</string>
                                <string>^You say</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>0</integer>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Skill Gain</name>
                            <script>demonnic.chat:append(&quot;Skills&quot;) </script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>You feel your skill</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>2</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CaptureGroupInfo</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Group Disband</name>
                            <script>clearUserWindow(&quot;GUI.Box3Mini&quot;)
myGroup = { }
GroupCount = 0
testGroup = { }</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>Your group has been disbanded.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>AutoGroup</name>
                            <script>clearUserWindow(&quot;GUI.Box3Mini&quot;)
GUI.Box3Mini:cecho(&quot;&lt;DodgerBlue&gt;GROUP INFO\n&quot;)
GUI.Box3Mini:cecho(&quot;&lt;DodgerBlue&gt;Name \t&lt;khaki&gt;HP PCT\n&quot;)
GUI.Box3Mini:cecho(&quot;&lt;gray&gt;====================\n&quot;)
myGroup = { }
--deleteLine()
GroupCount = 0
testGroup = {}</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>50</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^Your group consists of</string>
                                <string>&lt;group&gt;</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                                <integer>2</integer>
                            </regexCodePropertyList>
                            <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>Group to Window</name>
                                <script>selectCurrentLine()
copy()
appendBuffer(&quot;GUI.Box7Mini&quot;)
</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>20</conditonLineDelta>
                                <mStayOpen>99</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>^(.*)$</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>Get Name MSP</name>
                                <script>local y = string.trim(matches[3])
local ycolor = &quot;\n&lt;DodgerBlue&gt;&quot;..y..&quot;:  &quot;
local leny = (18-string.len(y))
local spacer = string.rep(&quot; &quot;,leny)
local str = (ycolor..spacer)
--GUI.Box2Mini:cecho(str)
deleteLine()
groupMate = y
GroupCount = GroupCount +1</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>(Head|Front|Back)\)\s(.*)$</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>Get Stats MSP</name>
                                <script>--selectCurrentLine()
--copy()
--appendBuffer(&quot;GUI.Box2Mini&quot;)
local v=tonumber(matches[4])
local w=tonumber(matches[5])
local x=tonumber(matches[2])
local y=tonumber(matches[3])
local z=math.floor((x/y)*100)
local lenz=3-string.len(z)
local zstr=string.rep(&quot; &quot;,lenz)
local diff = (x-y)
local lendiff=5-string.len(diff)
local diffstr=string.rep(&quot; &quot;,lendiff)
local str = &quot;&lt;khaki&gt;&quot;..zstr..z..&quot;%   &lt;red&gt;&quot;..diffstr..diff
--GUI.Box2Mini:cecho(str)
deleteLine()
myGroup[groupMate] = z
testGroup[GroupCount] = {Name = groupMate, HP = x, MAXHP = y, PCT = z, MV = v, MAXMV = w }
</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string> &lt;(\d+)h/(\d+)H&gt; &lt;(\d+)m/(\d+)M&gt;</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                            <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>AddGroup</name>
                                <script>local hpCheck = (tonumber(matches[2])/tonumber(matches[3])*100)
local gMate = matches[6]

myGroup[gMate] = hpCheck
cecho(&quot;&lt;magenta&gt; added&quot;)
echo(&quot;hp: &quot;..matches[2]..&quot;   maxhp: &quot;..matches[3]..&quot;    &quot;..matches[6])</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>99</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>(\d+)\/(\d+)\s+hit,\s+(\d+)\/(\d+)\s+move.*\s+(\w+)$</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>ToggleAutoGroup</name>
                                <script>setTriggerStayOpen(&quot;AutoGroup&quot;, 0)
--spairs_var(myGroup)
i=1

for k,v in pairs(testGroup) do
	GUI.Box3Mini:cecho(&quot;&lt;khaki&gt;&quot;..testGroup[k].Name..&quot;\t &lt;DodgerBlue&gt;&quot;..testGroup[k].PCT..&quot;\n&quot;)

	GUI[&quot;Group&quot;..i]:setValue(testGroup[k].PCT,100)
	GUI[&quot;Group&quot;..i].front:cecho(&quot;&lt;black&gt;&quot;..string.sub(testGroup[k].Name,1,12))
		if (testGroup[k].PCT &gt;= 100) then
    		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#00FF00&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (testGroup[k].PCT &gt;= 90) then
    		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#009900&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (testGroup[k].PCT &gt;= 80) then
    		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#FFFF00&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (testGroup[k].PCT &gt;= 70) then
    		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#999900&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (testGroup[k].PCT &gt;= 60) then
   	 		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#FF00FF&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (testGroup[k].PCT &gt;= 50) then
    		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#990099&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (testGroup[k].PCT &gt;= 40) then
    		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#FF0000&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (testGroup[k].PCT &gt;= 30) then
    		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#FF0000&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (testGroup[k].PCT &gt;= 20) then
    		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#990000&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		else
    		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#990000&quot;)
			GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		end
	GUI[&quot;Group&quot;..i].front:setClickCallback(&quot;heal_bot&quot;, testGroup[k].Name)
	i = i+1
end


for z=i,25 do
GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;black&quot;)
GUI[&quot;Group&quot;..z].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI[&quot;Group&quot;..z]:setValue(100,100)
GUI[&quot;Group&quot;..z].front:echo([[&lt;span style = &quot;color: black&quot;&gt;___&lt;/span&gt;]])
end</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>&lt;/group&gt;</string>
                                    <string>^$</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>2</integer>
                                    <integer>0</integer>
                                </regexCodePropertyList>
                            </Trigger>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>ClearBlank Lines</name>
                                <script>deleteLine()</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>^$</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                        </TriggerGroup>
                    </TriggerGroup>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CaptureRoomInfo</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>RoomCapture</name>
                            <script>myInRoom={}
listInRoom={}
clearUserWindow(&quot;GUI.Box5Mini&quot;)
selectCurrentLine()
copy()
appendBuffer(&quot;GUI.Box5Mini&quot;)


</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>99</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>Obvious exits:</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>2</integer>
                            </regexCodePropertyList>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>InRoom</name>
                                <script>if matches[2]~=&quot;Obvious exits:&quot; then
	local x = matches[2]
	table.insert(listInRoom, x)
	--local str = &quot;&lt;cyan&gt;&quot;..x..&quot;\n&quot;
	--GUI.Box3Mini:cecho(str)
	selectCurrentLine()
	copy()
	appendBuffer(&quot;GUI.Box5Mini&quot;)
end</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>^(.*)$</string>
                                    <string>^(A |An )(Drow|Drow Elf|Troll|Minotaur|Githyanki|Lich|Orc|Ogre|Duergar|Shadow Beast|Shadow|Vampire|Death Knight|Death|Goblin|Thri-Kreen|Illithid)(.*)\((tiny|small|medium|large|giant|gigantic|huge)</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>ToggleRoomCapture</name>
                                <script>setTriggerStayOpen(&quot;RoomCapture&quot;, 0)</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>\&lt; (-{0,1}\d*\.{0,1}\d+)h/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)v/(\d+)V\sPos: (.*) &gt;</string>
                                    <string>\&lt; (-{0,1}\d*\.{0,1}\d+)h/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)m/(\d+)M\s(-{0,1}\d*\.{0,1}\d+)v/(\d+)V\sPos: (.*) &gt;</string>
                                    <string>^\&lt; T: (.*) TP: (.*) TC: (.*) E: (.*) EP: (.*) EC: (.*)\&gt; </string>
                                    <string>^\&lt; (\d+)h/(\d+)H (\d+)v/(\d+)V Pos: (standing|kneeling|sitting|on your ass)&gt; $</string>
                                    <string>^$</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                        </TriggerGroup>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>MapCapture</name>
                            <script>clearUserWindow(&quot;GUI.Box7Mini&quot;)
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>99</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>&lt;automap&gt;</string>
                                <string>&lt;map&gt;</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>0</integer>
                                <integer>0</integer>
                            </regexCodePropertyList>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>MapLines</name>
                                <script>selectCurrentLine()
copy()
appendBuffer(&quot;GUI.Box7Mini&quot;)
--deleteline()
</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>\s{1}(.*)</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                                <name>ToggleMapCapture</name>
                                <script>setTriggerStayOpen(&quot;MapCapture&quot;, 0)</script>
                                <triggerType>0</triggerType>
                                <conditonLineDelta>0</conditonLineDelta>
                                <mStayOpen>0</mStayOpen>
                                <mCommand></mCommand>
                                <packageName></packageName>
                                <mFgColor>#ff0000</mFgColor>
                                <mBgColor>#ffff00</mBgColor>
                                <mSoundFile></mSoundFile>
                                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                                <regexCodeList>
                                    <string>&lt;/automap&gt;</string>
                                    <string>&lt;/map&gt;</string>
                                </regexCodeList>
                                <regexCodePropertyList>
                                    <integer>1</integer>
                                    <integer>1</integer>
                                </regexCodePropertyList>
                            </Trigger>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CurrentSpells</name>
                        <script>clearUserWindow(&quot;Left1&quot;)
cecho(&quot;Left1&quot;, &quot;&lt;Yellow&gt;Spell Slots Available:\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>99</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^You have memorized the following spells:$</string>
                            <string>You currently have the following spell slots available:</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>3</integer>
                        </regexCodePropertyList>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>CaptureSpells</name>
                            <script>--tMySpells[matches[3]] = tonumber(matches[2])
selectCurrentLine()
copy()
appendBuffer(&quot;Left1&quot;)
--deleteline()</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>\s+(\d)\s-\s(.*)$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>ToggleCurrentSpells</name>
                            <script>for k,v in pairs(tMySpells) do echo(&quot;\n&quot;..tostring(k)..&quot;  &quot;..tostring(v)) end
setTriggerStayOpen(&quot;CurrentSpells&quot;, 0)
echo(&quot;\nMySpells Table contains: &quot; .. table.size(tMySpells) .. &quot; entries.&quot;)
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^You can memorize</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Container Content</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Echo Container to Window</name>
                            <script>selectCurrentLine()
copy()
appendBuffer(&quot;GUI.Box5Mini&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(.*)</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Empty Container</name>
                            <script>disableTrigger(&quot;Container Content&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>Nothing.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Skill Capture</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>99</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Skill$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>SkillPattern</name>
                            <script>local x = tonumber(matches[3])


if x &gt; tonumber(mySkills[matches[2]]) then
	Cecho(&quot;&lt;cyan&gt; Gained &quot; ..x - tonumber(matches[2]))
	--mySkills[matches[2]]=tonumber(matches[3])
else
	echo(&quot;No Skill gains...&quot;)
end
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(.*)\s(\d+)</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Skill Capture Toggle</name>
                            <script>setTriggerStayOpen(&quot;Skill Capture&quot;, 0)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CaptureEquipmentWorn</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>99</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You are using:</string>
                            <string>Your available eq slots are:</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                            <integer>3</integer>
                        </regexCodePropertyList>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Equipment to Window</name>
                            <script>if matches[3] ~= &quot;&quot; then
	selectCaptureGroup(3)
	copy()
	appendBuffer(&quot;GUI.Box5Mini&quot;)
end

</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(\w+)&gt;\s*(.*)</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>ToggleCaptureEquipmentWorn</name>
                            <script>--disableTrigger(&quot;CaptureEquipmentWorn&quot;)
setTriggerStayOpen(&quot;CaptureEquipmentWorn&quot;, 0)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CaptureWhoList</name>
                        <script>myWhoList = myWhoList or {}
myWhoCount = 0</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>99</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Listing of the Mortals!</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                        </regexCodePropertyList>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>[26 Bard            ] Idor (Halfling)[Commoner]</name>
                            <script>--myWhoList = {}
xlevel = matches[2]
xclass = matches[3]
xname = matches[4]
myWhoCount = myWhoCount+1

--Add to Who List
myWhoList[xname] = {Level = xlevel, Class = xclass}
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>\[([0-9 ]+)(.*)\] ([a-zA-Z]+)</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>ToggleCaptureWhoList</name>
                            <script>setTriggerStayOpen(&quot;CaptureWhoList&quot;, 0)
cecho(&quot;&lt;khaki&gt; &lt;============ Who List Capture Complete&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>There are (.*) mortal</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CaptureRecipes</name>
                        <script>myRecipes = myRecipes or {}</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>99</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You know the following recipes:</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>ToggleCaptureRecipes</name>
                            <script>setTriggerStayOpen(&quot;CaptureRecipes&quot;, 0)
cecho(calign(&quot;Recipes Captured&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[TradeSkill]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;DodgerBlue&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;khaki&gt;&quot;}))</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>   99539                 a tiny amethyst earring</name>
                            <script>xnum = matches[2]
xname = matches[3]
myRecipes[xnum] = {Name = xname}</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(\d+)\s*(.*)</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CaptureRecipeMaterial</name>
                        <script>myRecipeMaterial = myRecipeMaterial or {}</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>3</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You open your tome of craftsmanship and examine the item.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>To craft this item, you will need 1 of an anti-matter nebula and 2 of some star dust.</name>
                            <script>--xnum = matches[2]
--xname = matches[3]
--myRecipes[xnum] = xname

if matches[4] ~= nil then
	myRecipeMaterial[myRecipeNum] = {Comp1 = matches[3], Qty1 = matches[2], Comp2 = matches[5], Qty2 = matches[4]}
else
	myRecipeMaterial[myRecipeNum] = {Comp1 = matches[3], Qty1 = matches[2]}
end</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^To craft this item, you will need (\d+) of \s*(.*) and (\d+) of \s*(.*).$</string>
                                <string>^To craft this item, you will need (\d+) of \s*(.*).$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>ToggleRecipeMaterial</name>
                            <script>setTriggerStayOpen(&quot;CaptureRecipeMaterial&quot;, 0)
cecho(calign(&quot;Materials Captured&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[TradeSkill]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;DodgerBlue&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;khaki&gt;&quot;}))</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                </TriggerGroup>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>WaterRoom</name>
                    <script>expandAlias(&quot;gb&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>You need a boat to go there.</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>3</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>AutoLoot</name>
                    <script>--AutoLoot
if lootOn == true then
	send(&quot;get &quot;..lootVar..&quot; corpse&quot;)
end

if myCombatStatus==true then
	myCombatStatus = false
	cecho(&quot;\n&lt;cyan&gt;&lt;===== COMBAT STATUS OFF =====&gt;&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>You receive your share of experience.</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>3</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>MissingCircle</name>
                    <script>mySpellCount[tonumber(matches[2])]= tonumber(matches[4])

local x = matches[5] - matches[4]
if x &gt; 0 then 
	cecho(&quot;&lt;cyan&gt; &lt; slots missing:&quot;..x)
	spellsMissing = true
	else
	cecho(&quot;&lt;magenta&gt; &lt; Full&quot;)
	spellsMissing = false
end
selectCurrentLine()
copy()
appendBuffer(&quot;Left1&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>(\d+)(st|nd|rd|th) circle:\s+(\d+)\s+of\s+(\d+)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>SpellCompletion</name>
                    <script>cecho(&quot;\n&lt;cyan&gt;&lt;================================================== SPELL COMPLETION\n&quot;)

if matches[1] == &quot;You finish your song.&quot; then send(&quot;play &quot; ..mySong) end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>You complete your spell...</string>
                        <string>You finish your song.</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>3</integer>
                        <integer>3</integer>
                    </regexCodePropertyList>
                </Trigger>
                <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Skill Training</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>NecroTrainingSir</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>MinorCreateDagger</name>
                            <script>send(&quot;cast 'minor creation' dagger&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>A steel dagger suddenly appears.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>NeedMem</name>
                            <script>send(&quot;rest;mem;med&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>You don't have that spell memorized.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>MemComplete</name>
                            <script>send(&quot;stand&quot;)
send(&quot;cast 'vitalize undead' self&quot;)
send(&quot;cast 'heal undead' self&quot;)
send(&quot;cast 'heal undead' self&quot;)
send(&quot;cast 'heal undead' self&quot;)
send(&quot;cast 'heal undead' self&quot;)
send(&quot;cast 'minor creation' dagger&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>Your studies are complete.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Summoner</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>MemComplete</name>
                            <script>send(&quot;stand&quot;)
send(&quot;cast 'minor cr' barrel&quot;)
send(&quot;cast 'identify' earring&quot;)
send(&quot;cast 'identify' earring&quot;)
send(&quot;cast 'identify' earring&quot;)
send(&quot;cast 'identify' earring&quot;)
send(&quot;cast 'identify' earring&quot;)
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>Your studies are complete.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>NeedMem</name>
                            <script>send(&quot;rest;mem;med&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>You don't have that spell memorized.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>0</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                    <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>BardTrain</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Millipede</name>
                            <script>send(&quot;bac millipede&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>A smelly millipede is lying here, incapacitated.</string>
                                <string>A smelly millipede stands, apparently asleep.</string>
                                <string>A smelly millipede falls sleep.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                                <integer>3</integer>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Spiders</name>
                            <script>send(&quot;bac spider&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>A green spider stands, apparently asleep.</string>
                                <string>A jumping spider is lying here, incapacitated.</string>
                                <string>A jumping spider stands, apparently asleep.</string>
                                <string>A jumping spider falls sleep.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                                <integer>3</integer>
                                <integer>3</integer>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Centipede</name>
                            <script>send(&quot;bac centipede&quot;)

</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>A huge centipede is lying here, incapacitated.</string>
                                <string>A huge centipede stands, apparently asleep.</string>
                                <string>A huge centipede falls sleep.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                                <integer>3</integer>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Change Direction</name>
                            <script>if AFK_DIR == &quot;U&quot; then
	AFK_DIR = &quot;D&quot;
	else
	AFK_DIR = &quot;U&quot;
end

echo(&quot;Direction changed to: &quot;..AFK_DIR)
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>Alas, you cannot go that way</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>2</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Move on Sing</name>
                            <script>send(AFK_DIR)
-- send(&quot;riff prot&quot;)
-- send(&quot;put all satchel&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>You are already playing that song</string>
                                <string>You start playing your</string>
                                <string>You are unable to find any trace.</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>2</integer>
                                <integer>2</integer>
                                <integer>0</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>AutoHide</name>
                            <script>send(&quot;hide&quot;)
send(&quot;glance Idorr&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>You appear to be (.*) and is in </string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>SongCompletion</name>
                            <script>send(&quot;appraise satchel&quot;)
send(&quot;play &quot;..mySong)
send(&quot;riff disc&quot;)
send(&quot;glance Rhal&quot;)
send(&quot;look&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>You finish your song.</string>
                                <string>Uh oh.. how did the song go, anyway?</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>3</integer>
                                <integer>3</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Enemy Scanner</name>
                    <script>echo(&quot;\n&quot;)
cecho(calign(&quot;Scanning Area&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[scan]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;DodgerBlue&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;khaki&gt;&quot;}))
echo(&quot;\n\n&quot;)

Scan_Targets = {}
Evil_Report = &quot;&quot;</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>99</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>You quickly scan the area.</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>0</integer>
                    </regexCodePropertyList>
                    <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Scan for Goodies</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                    </TriggerGroup>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Scan for Evils</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Scan_Evils</name>
                            <script>--(Drow Elf|Troll|Minotaur|Githyanki|Lich|Orc|Ogre|Duergar|Shadow Beast|Vampire|Death Knight|Goblin|Thri-kreen|Illithid)

echo(matches[3])
echo(&quot;\n&quot;)
echo(matches[6])

table.insert( Scan_Targets, matches[3] )</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^(A |An )(Drow Elf|Troll|Minotaur|Githyanki|Lich|Orc|Ogre|Duergar|Shadow Beast|Vampire|Death Knight|Goblin|Thri-kreen|Illithid)(.*)who is(.*)to your (north.|south.|east.|west|above.|below.)$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Report Scan</name>
                            <script>if #Scan_Targets&gt;0 then
cecho(calign(&quot;Warning&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[scan]&quot;, mirror = false, spacer = &quot;-&quot;, inside = false, capColor = &quot;&lt;yellow:red&gt;&quot;, spacerColor = &quot;&lt;yellow:red&gt;&quot;, textColor = &quot;&lt;yellow:red&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(table.concat(Scan_Targets, &quot;, &quot;), {width = &quot;80&quot;, alignment = &quot;center&quot;, mirror = false, spacer = &quot; &quot;, inside = false}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Warning&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[scan]&quot;, mirror = false, spacer = &quot;-&quot;, inside = false, capColor = &quot;&lt;yellow:red&gt;&quot;, spacerColor = &quot;&lt;yellow:red&gt;&quot;, textColor = &quot;&lt;yellow:red&gt;&quot;}))
echo(&quot;\n&quot;)
else
cecho(calign(&quot;Clear Scan&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[scan]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;DodgerBlue&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;khaki&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Clear Scan&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[scan]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;DodgerBlue&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;khaki&gt;&quot;}))
echo(&quot;\n\n&quot;)
end
setTriggerStayOpen(&quot;Enemy Scanner&quot;, 0)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Stand</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Stand_1</name>
                        <script>send(&quot;stand&quot;)
</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^A tentacle of solified mist coils itself around you tossing you to the ground.$</string>
                            <string>avoids your bash, you topple over and fall to the ground.$</string>
                            <string> ^Bashing creatures of this minute size is hopeless at best.$</string>
                            <string>^In your haste to slam people around, you slip and fall!$</string>
                            <string>^Maybe you should get on your feet first?$</string>
                            <string>^Maybe you should get up off your knees first?$</string>
                            <string>^Spring-leap at who?$</string>
                            <string>^Such skills take patience!$</string>
                            <string>^The blast knocks you off your feet!$</string>
                            <string>grabs your leg and yanks you down to the ground!$</string>
                            <string>^You abandon your praying.$</string>
                            <string>^You almost drown in your attempt to</string>
                            <string>^You are flung to the ground by</string>
                            <string>^You are knocked to the ground</string>
                            <string>^You can move again.$</string>
                            <string>^You collapse in a heap on the ground.$</string>
                            <string>^You collapse in agony as pure fire envelops your spine!$</string>
                            <string>^You crash to the ground with a bone crunching thud!$</string>
                            <string>^You fall and injure yourself!$</string>
                            <string>^You fly head first directly into what might as well be a brick wall.$</string>
                            <string>^You fly head first through (.*), landing on your ass.$</string>
                            <string>^You fly right over your target and land on your head!$</string>
                            <string>^You lose your footing and fall to your knees!$</string>
                            <string>^You make a futile attempt to bash</string>
                            <string>^You make a futile attempt to springleap</string>
                            <string>^You manage to, with complete incompetence, throw yourself,</string>
                            <string>^You may as well try and bodyslam a speck of dust! Too small..</string>
                            <string>^You need sturdy ground from which to leap from!$</string>
                            <string>^You stagger about, then fall sprawling!$</string>
                            <string>^You stagger and fall to your knees!$</string>
                            <string>^You trip over (.*) while pointlessly slamming at someone already down.$</string>
                            <string>^Your attempt to bash</string>
                            <string>^Your attempt to bodyslam</string>
                            <string>^You're not quite the right size to springleap them.$</string>
                            <string>boulder hit's dead on knocking you to the ground!$</string>
                            <string>crashes wildly into you!$</string>
                            <string>dances an acrobatic maneuver in battle, tripping you.$</string>
                            <string>fails as it blows you on your ass!$</string>
                            <string>ferociously MAULS YOU!$</string>
                            <string>is too hefty to bash!$</string>
                            <string>is too huge for you to bash!$</string>
                            <string>is too huge for you to bodyslam!$</string>
                            <string>leap knocks into you, sending you slightly off balance...$</string>
                            <string>makes you lose your balance and fall on the ground!$</string>
                            <string>mighty kick sends you crashing into the wall!$</string>
                            <string>mighty kick sends you flying out of the room!$</string>
                            <string>picks you up and tosses you against the wall!$</string>
                            <string>sends you crashing to the ground!$</string>
                            <string>suddenly looks a bit dumb, and madly slams _YOU_!$</string>
                            <string>mass slams into you, knocking you to the ground!$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Stand_2</name>
                        <script>send(&quot;stand&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>swing reached you!$</string>
                            <string>tackles you square in the chest knocking the wind out of you!$</string>
                            <string>^You fall to your knees as uncontrollable pain engulfs your entire brain!$</string>
                            <string>^The wave slams into you, knocking you off your feet!$</string>
                            <string>nimble kick crashes into your groin .. OUCH!!! .. and down you go!$</string>
                            <string>Nah... You feel too relaxed to do that...</string>
                            <string>^You topple over yourself as you try to bash</string>
                            <string>You land on your ass with a stunning force!</string>
                            <string>withstands your bash, you bounce back and fall to the ground.</string>
                            <string>You manage with complete incompetence to throw yourself head first into the ground!</string>
                            <string>mighty kick sends you crashing onto the ground!</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>3</integer>
                            <integer>1</integer>
                            <integer>3</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Ship Set</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Disembark</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;Disengaged&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Ship Keys]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Disengaged&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Ship Keys]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n&quot;)
disableKey(&quot;ShipKeys&quot;)
enableKey(&quot;WalkKeys&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You disembark this ship.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Ship Ready</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;Engaged&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Ship Keys]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Engaged&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Ship Keys]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n&quot;)
disableKey(&quot;WalkKeys&quot;)
enableKey(&quot;ShipKeys&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>The first officer reports everything is in order and the ship is ready to go.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Track Contacts</name>
                        <script>SID=matches[2]
SName=matches[3]
XCord=tonumber(matches[4])
YCord=tonumber(matches[5])
Range=tonumber(matches[6])
Bearing=tonumber(matches[7])
Heading=tonumber(matches[8])
</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>\[(.*)]\s+(.*)X:(\d+)\s+Y:(\d+)\s+R:(.*)\s+B:(\d+)\s+H:(\d+)\s+S:(\d+)\s+\|(.*)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Consider Output</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Chicken</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt;&lt;= -10 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Now where did that chicken go\?$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Needle</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt;&lt;= -5 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^You could do it with a needle!$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Easy</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= -2 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Easy.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Fairly Easy</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= -1 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Fairly easy.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Perfect Match</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 0 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^The perfect match!$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Some Luck</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 1 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^You would need some luck.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Lot of Luck</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 2 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^You would need a lot of luck!$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Luck and Equip</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 3 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^You would need a lot of luck and great equipment!$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Lucky Punk</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 10 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Do you feel lucky, punk?$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Are you mad</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 10 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Are you mad!?$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>You ARE</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 15 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^You ARE mad!$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Lie Down</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 20 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Why don't you just lie down and pretend you're dead instead?$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Epitaph</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 25 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^What do you want your epitaph to say\?!\?$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Not EVEN Funny</name>
                        <script>cecho(&quot;     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &gt; +25 &lt;DodgerBlue&gt;levels&quot;)
disableTrigger(&quot;Consider Output&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^This thing will kill you so fast, it's not EVEN funny!$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Spell Messages</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>StoneskinOut</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;Stone Skin&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Expired]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Stone Skin&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Expired]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You feel your skin soften and return to normal.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>StoneSkinOn</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;Stone Skin&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spells]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;DodgerBlue&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Stone Skin&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spells]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;DodgerBlue&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You feel your skin harden to stone.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>ElementalAffinityOut</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;Elemental Affinity&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Expired]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Elemental Affinity&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Expired]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>A slight chill runs through you as you feel nature's essence leave your body.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>HasteOut</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;Haste&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Expired]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Haste&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Expired]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>The world speeds up around you.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Vampiric Trance Out</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;Vampiric Trance&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Expired]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Vampiric Trance&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Expired]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Color fades slowly into your face.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>AfterLogin</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CharacterLoggedIn</name>
                        <script>send(&quot;tog term&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>        Welcome to Duris Dikumud</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Highlights</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>ShamanMemComplete</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;COMPLETE&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Memorize]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;COMPLETE&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Memorize]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You snap out of your meditative trance, memorization complete.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>EpicPoint</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;GAINED&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Epic Point]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;GAINED&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Epic Point]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>As your body absorbs the experience, you seem to feel a bit more epic!</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>HorseThrown</name>
                        <script>echo(&quot;\n&quot;)
msgOut(&quot;right&quot;, &quot;Dismounted!!!&quot;, &quot;Mounted Combat&quot;, &quot;red&quot;)
echo(&quot;\n&quot;)
msgOut(&quot;right&quot;, &quot;Dismounted!!!&quot;, &quot;Mounted Combat&quot;, &quot;red&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>As a magnificent heavy warhorse bucks madly you shoot up in the air!</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Phantom Armor Out</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;EXPIRED&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Phantom Armor]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;EXPIRED&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Phantom Armor]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You become less hazy.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Bark Skin Out</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;EXPIRED&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Bark Skin]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;EXPIRED&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Bark Skin]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Your skin loses its barklike texture.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>BloodLust Timer Gauge</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Refresh Timer for BloodLust</name>
                        <script>demonnic.anitimer:new(&quot;BloodLust&quot;, {x=&quot;2%&quot;, y=&quot;15%&quot;, height = &quot;70%&quot;, width = &quot;96%&quot;, color=&quot;red&quot;}, 600, {container = GUI.BloodLustIcon, showTime = true, cssFront = fg_red1, cssBack = bg_clearTube2})</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>infusing you with power!$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Blood Command Trigger Gate</name>
                        <script>--Bloodlust - Damage Bonus(vs mob only)
--Current lust: 0%
--You have 0:00 left.</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>2</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Bloodlust - Damage Bonus(vs mob only)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>BloodLust Time Remaining</name>
                            <script>BloodlustTimeMinutes = matches[2]
BloodlustTimeSeconds = matches[3]

BloodLustNewTimer = (BloodlustTimeMinutes*60)+BloodlustTimeSeconds

demonnic.anitimer:new(&quot;BloodLust&quot;, {x=&quot;2%&quot;, y=&quot;15%&quot;, height = &quot;70%&quot;, width = &quot;96%&quot;, color=&quot;red&quot;}, BloodLustNewTimer, {container = GUI.BloodLustIcon, showTime = true, cssFront = fg_red1, cssBack = bg_clearTube2})</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^You have ([0-1]?[0-9]|[2][0-3]):([0-5][0-9]) left.$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>ZoneMap</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CheckMap from Area Command</name>
                        <script>MyZoneName = string.trim(matches[2])

if ZoneLinks[MyZoneName] then 
   echoLink(&quot;Click for Zone Map&quot;, [[openUrl(ZoneLinks[MyZoneName])]], &quot;Opens default browser to display zone map&quot;)
end</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>1</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Zone Name: (.*)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>CheckMap from MSP Tag</name>
                        <script>MyZoneName = string.trim(matches[2])

if ZoneLinks[MyZoneName] then 
   echoLink(&quot;Click for Zone Map&quot;, [[openUrl(ZoneLinks[MyZoneName])]], &quot;Opens default browser to display zone map&quot;)
end</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Zone: (.*)\.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Loot Group</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Society Deposit</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^There were: </string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Soc Gold</name>
                            <script>send(&quot;soc dep &quot;..matches[2]&quot; g&quot;)
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(\d+) gold coin</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Soc Silver</name>
                            <script>send(&quot;soc dep &quot;..matches[2]&quot; s&quot;)
</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(\d+) silver coin</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Soc Copper</name>
                            <script>send(&quot;soc dep &quot;..matches[2]&quot; c&quot;)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(\d+) copper coin</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Mount Triggers</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Mount Exhausted</name>
                        <script>if Dismount_Flag &gt; 0 then
	send(&quot;dismount&quot;)
	Dismount_Flag = 0
end
</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Your mount is too exhausted.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>You Dismount</name>
                        <script>Dismount_Flag = 1</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^You dismount</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>You climb up and ride</name>
                        <script>Dismount_Flag = 1</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^You climb up and ride</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Addicted to Blood</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>3</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>Addicted to Blood - EXP and Plat Bonus</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>3</integer>
                    </regexCodePropertyList>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Addicted Completion</name>
                        <script>--
--Kill 30 mobs within 30 minutes
--You are 80% complete.
--You have 11:42 left.
--
AddictedStatus = matches[2]


-- Header Icon 4
echo(&quot;GUI.Icon4&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;red&quot;&gt;Addicted&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;]]..AddictedStatus..[[%&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )

</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>You are (\d+)% complete.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Addicted Timer</name>
                        <script>--
--Kill 30 mobs within 30 minutes
--You are 80% complete.
--You have 11:42 left.
--
AddictedTimeMinutes = matches[2]
AddictedTimeSeconds = matches[3]

-- Header Icon 3
echo(&quot;GUI.Icon3&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;red&quot;&gt;Addict Timer&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;]]..AddictedTimeMinutes..[[:]]..AddictedTimeSeconds..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^You have ([0-1]?[0-9]|[2][0-3]):([0-5][0-9]) left.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Track Followers</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Follower Gate</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>10</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Followers:</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Capture Follower Keyword</name>
                            <script>tempFollower = matches[2]

myPets = myPets or {}


</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^   the (\w+) of .*$</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Follower Gate Closure</name>
                            <script>setTriggerStayOpen(&quot;Follower Gate&quot;, 0)</script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>0</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>^Status:</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>1</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>CraftMaterialGather</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Seeking</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#000000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>some star dust</string>
                            <string>some interplanetary dust</string>
                            <string>some intergalactic dust</string>
                            <string>a clump of cosmic plasma</string>
                            <string>an anti-matter nebula</string>
                            <string>a strip of raw leather</string>
                            <string>some rolled-up raw leather</string>
                            <string>a fine piece of thick raw leather</string>
                            <string>some extremely-thick raw leather</string>
                            <string>an enchanted strip of raw leather</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Time</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>5PM</name>
                        <script>echo(&quot;5:00pm&quot;)
echo(&quot;\n&quot;)
cecho(calign(&quot;5:00PM&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Nightfall]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)
</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Shadows stretch across the land as the sun limps towards the horizon.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>2PM</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;2:00PM&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Getting Late]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>The sun hangs low on the southern sky.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>6PM</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;6:00PM&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[The Dark]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>The sun vanishes behind the southern horizon.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>9AM</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;9:00AM&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Turn Two]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;green&gt;&quot;}))
echo(&quot;\n\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>The day has begun.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>8AM</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;8:00AM&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Sunrise]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;green&gt;&quot;}))
echo(&quot;\n\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>The sun rises over the northern horizon.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>4AM</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;4:00AM&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Soon...]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>The first hint of daylight can be seen on the northern horizon.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>5AM</name>
                        <script>echo(&quot;\n&quot;)
cecho(calign(&quot;5:00AM&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Daybreak]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;green&gt;&quot;}))
echo(&quot;\n\n&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>The first rays of sunlight signal that day is approaching.</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>3</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>EQ Database Set</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Stat Item on Get</name>
                    <script>local mydb = db:get_database(&quot;durisdata&quot;)

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[2]))

for _, row in ipairs(results) do
  row.STATS = row.STATS or &quot;N/A&quot;	
  cecho(&quot;\n &lt;DodgerBlue&gt;Item:  &lt;khaki&gt;&quot; .. row.NAME ..&quot;\n &lt;DodgerBlue&gt;Stats: &lt;khaki&gt;&quot; .. row.STATS .. &quot;\n &lt;DodgerBlue&gt;Zone:  &lt;khaki&gt;&quot; .. row.LOCATION ..&quot;\n &lt;DodgerBlue&gt;Slot:  &lt;khaki&gt;&quot; .. row.SLOT ..&quot;\n &lt;DodgerBlue&gt;IVal: &lt;khaki&gt;&quot; .. row.ITEMVALUE)
end

--display(results)

if table.contains(Proc_Items, matches[2]) then 
   cecho(&quot;\n&lt;khaki&gt;Item has a &lt;DodgerBlue&gt;PROC&lt;khaki&gt;!\n&quot;)
end

--send (&quot;say &quot;..results[1].NAME..&quot; Stats: &quot;..results[1].STATS)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^You get (.*) \[.*] from</string>
                        <string>^Your enhancement is a success! You now have (.*) \[</string>
                        <string>^You stop using (.*) \[</string>
                        <string>^You get (.*) from</string>
                        <string>^Your enhancement is a success! You now have (.*)!$</string>
                        <string>^You stop using (.*).$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>testvalue</name>
                    <script>--{stats={&quot;Vnum&quot;, &quot;TYPE&quot;, &quot;SLOT&quot;, &quot;NAME&quot;, &quot;LOCATION&quot;, &quot;STATS&quot;, &quot;iLVL&quot;}})--

cecho(&quot;&lt;DodgerBlue&gt;  Item Value = &lt;khaki&gt;&quot; ..matches[3])
cecho(&quot;&lt;DodgerBlue&gt;  Item = &lt;khaki&gt;&quot; ..matches[2])
itemValue=tonumber(matches[3])
itemName= matches[2]

mydb = db:get_database(&quot;durisdata&quot;)

res = db:fetch(mydb.stats,{db:eq(mydb.stats.LOCATIONLOWERCASE, zoneName), db:like(mydb.stats.NAME, itemName)})
--display(res)

for _, row in ipairs(res) do
  cecho(&quot;\n &lt;DodgerBlue&gt;Item:  &lt;khaki&gt;&quot; .. row.NAME ..&quot;\n &lt;DodgerBlue&gt;Type:  &lt;khaki&gt;&quot; .. row.TYPE ..&quot;\n &lt;DodgerBlue&gt;Slots: &lt;khaki&gt;&quot; .. row.SLOT ..&quot;\n &lt;DodgerBlue&gt;Stats: &lt;khaki&gt;&quot; .. row.STATS .. &quot;\n &lt;DodgerBlue&gt;Zone:  &lt;khaki&gt;&quot; .. row.LOCATION ..&quot;\n&quot;)
  if iLVL then cecho(&quot;\n &lt;DodgerBlue&gt;Item: &lt;khaki&gt;&quot; .. row.iLVL)
  end
end

res[1].ITEMVALUE = itemValue
cecho(&quot;\n&lt;DodgerBlue&gt;  Item Value set to: &lt;khaki&gt;&quot; ..itemValue)
db:update(mydb.stats, res[1])
cecho(&quot;\n&lt;DodgerBlue&gt;  Duris Database: &lt;khaki&gt;saved&quot;)

if table.contains(Proc_Items, itemName) then 
   cecho(&quot;&lt;khaki&gt;Item has a &lt;DodgerBlue&gt;PROC&lt;khaki&gt;!\n&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(.*) \[.*] has an item value of (\d+).$</string>
                        <string>^(.*) has an item value of (\d+).$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>testZone</name>
                    <script>cecho(&quot;&lt;DodgerBlue&gt;  Zone Name = &quot; ..matches[2])
zoneName = string.lower(matches[2])</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^This item is from the zone: (.*).$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Item Value on Inventory</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>99</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^You are carrying: </string>
                        <string>currently contains</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Echo Item Value</name>
                        <script>local mydb = db:get_database(&quot;durisdata&quot;)

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[2]))

for _, row in ipairs(results) do
  cecho(&quot;&lt;DodgerBlue&gt;     Item Value:  &lt;khaki&gt;&quot; ..  row.ITEMVALUE)
end</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>(.*) \[</string>
                            <string>^(.*) (\(magic\))</string>
                            <string>^(.*) (\(glowing\))</string>
                            <string>^(.*) (\(illuminating\))</string>
                            <string>^(.*)$</string>
                            <string>^\[*\d*]*\s*([^\(]+)</string>
                            <string>^(.*) (\(humming\))</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>YATCO-23(2)</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName>YATCO-23(2)</packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Demonnic</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>39</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>Tabbed Chat</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList/>
                        <regexCodePropertyList/>
                        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                            <name>Org</name>
                            <script></script>
                            <triggerType>0</triggerType>
                            <conditonLineDelta>39</conditonLineDelta>
                            <mStayOpen>0</mStayOpen>
                            <mCommand></mCommand>
                            <packageName></packageName>
                            <mFgColor>#ff0000</mFgColor>
                            <mBgColor>#ffff00</mBgColor>
                            <mSoundFile></mSoundFile>
                            <colorTriggerFgColor>#000000</colorTriggerFgColor>
                            <colorTriggerBgColor>#000000</colorTriggerBgColor>
                            <regexCodeList>
                                <string>(Glomdoring):</string>
                            </regexCodeList>
                            <regexCodePropertyList>
                                <integer>2</integer>
                            </regexCodePropertyList>
                        </Trigger>
                    </TriggerGroup>
                </TriggerGroup>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Stat Roller</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>ReRoll Version 2.0</name>
                    <script>-- Duris Character Roller for Mudlet
-- version 2.0
-- Designed to roll characters with the intent of utilizing the stat swap capability
-- Author: Drevarr@gmail.com


-- Desired Roll Table
-- excellent = 8
-- Very good = 7
-- good = 6
-- above average = 5
-- average = 4
-- below average = 3
-- poor = 2
-- lame = 1
-- end of Desired Roll Table comment

-- Set DesiredRoll to the level of acceptable stats based on the table above
DesiredRoll = 8

-- Desired Number of Rolls = Minimum number of rolls matching the DesiredRoll required across all stats (excluding Unused **not swapable) before roller stops
DesiredNumberOfRolls = 3

--Counter
NumberOfMatchingRolls = 0


--testing echos
-- cecho(&quot;\n&lt;khaki&gt;Str:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledStr]..&quot;     &lt;khaki&gt;Pow: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledPow])
-- cecho(&quot;\n&lt;khaki&gt;Dex:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledDex]..&quot;     &lt;khaki&gt;Int: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledInt])
-- cecho(&quot;\n&lt;khaki&gt;Agi:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledAgi]..&quot;     &lt;khaki&gt;Wis: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledWis])
-- cecho(&quot;\n&lt;khaki&gt;Con:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledCon]..&quot;     &lt;khaki&gt;Cha: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledCha])
-- cecho(&quot;\n&lt;khaki&gt;Luc:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledLuc]..&quot;     &lt;khaki&gt;Unu: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledUnu])

--Add echo to the Mini7Box
GUI.Box7Mini:clear()
GUI.Box7Mini:cecho(&quot;\n&lt;khaki&gt;Str:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledStr]..&quot;     &lt;khaki&gt;Pow: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledPow])
GUI.Box7Mini:cecho(&quot;\n&lt;khaki&gt;Dex:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledDex]..&quot;     &lt;khaki&gt;Int: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledInt])
GUI.Box7Mini:cecho(&quot;\n&lt;khaki&gt;Agi:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledAgi]..&quot;     &lt;khaki&gt;Wis: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledWis])
GUI.Box7Mini:cecho(&quot;\n&lt;khaki&gt;Con:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledCon]..&quot;     &lt;khaki&gt;Cha: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledCha])
GUI.Box7Mini:cecho(&quot;\n&lt;khaki&gt;Luc:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledLuc]..&quot;     &lt;khaki&gt;Unu: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledUnu])

--avgStat = (scoreLookup[RolledStr]+scoreLookup[RolledDex]+scoreLookup[RolledAgi]+scoreLookup[RolledCon]+scoreLookup[RolledPow]+scoreLookup[RolledInt]+scoreLookup[RolledWis]+scoreLookup[RolledCha]+scoreLookup[RolledLuc]+scoreLookup[RolledUnu])/10

-- save all rolls to a table for data analysis when we are feeling geeky

Stats = scoreLookup[RolledStr]..&quot;,&quot;..scoreLookup[RolledDex]..&quot;,&quot;..scoreLookup[RolledAgi]..&quot;,&quot;..scoreLookup[RolledCon]..&quot;,&quot;..scoreLookup[RolledPow]..&quot;,&quot;..scoreLookup[RolledInt]..&quot;,&quot;..scoreLookup[RolledWis]..&quot;,&quot;..scoreLookup[RolledCha]..&quot;,&quot;..scoreLookup[RolledLuc]..&quot;,&quot;..scoreLookup[RolledUnu]
table.insert(myRolls, Stats)

if scoreLookup[RolledStr] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledDex] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledAgi] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledCon] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledPow] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledInt] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledWis] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledCha] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledLuc] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if NumberOfMatchingRolls &gt;= DesiredNumberOfRolls then
	-- replace wav file with appropriate full path for a sound alert on successful roll
	-- playSoundFile([[C:\Users\John\Documents\darkward\Sound\Creature\HighInquisitorWhitemane\HighInquisitorWhitemaneRes01.wav]])
else
	NumberOfMatchingRolls = 0
	RolledStr=&quot;&quot;
	RolledPow=&quot;&quot;
	RolledDex=&quot;&quot;
	RolledInt=&quot;&quot;
	RolledAgi=&quot;&quot;
	RolledWis=&quot;&quot;
	RolledCon=&quot;&quot;
	RolledCha=&quot;&quot;
	RolledLuc=&quot;&quot;
	RolledUnu=&quot;&quot;
	send(&quot;y&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>Do you want to reroll this char</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>0</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>ReRoll Version 1.0</name>
                    <script>DesiredStr = 6
DesiredDex = 6
DesiredAgi = 6
DesiredCon = 6
DesiredPow = 3
DesiredInt = 3
DesiredWis = 6
DesiredCha = 5
DesiredLuc = 5
DesiredUnu = 3


cecho(&quot;\n&lt;khaki&gt;Str:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledStr]..&quot;     &lt;khaki&gt;Pow: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledPow])
cecho(&quot;\n&lt;khaki&gt;Dex:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledDex]..&quot;     &lt;khaki&gt;Int: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledInt])
cecho(&quot;\n&lt;khaki&gt;Agi:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledAgi]..&quot;     &lt;khaki&gt;Wis: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledWis])
cecho(&quot;\n&lt;khaki&gt;Con:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledCon]..&quot;     &lt;khaki&gt;Cha: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledCha])
cecho(&quot;\n&lt;khaki&gt;Luc:&lt;DodgerBlue&gt; &quot;..scoreLookup[RolledLuc]..&quot;     &lt;khaki&gt;Unu: &lt;DodgerBlue&gt;&quot;..scoreLookup[RolledUnu])
--avgStat = (scoreLookup[RolledStr]+scoreLookup[RolledDex]+scoreLookup[RolledAgi]+scoreLookup[RolledCon]+scoreLookup[RolledPow]+scoreLookup[RolledInt]+scoreLookup[RolledWis]+scoreLookup[RolledCha]+scoreLookup[RolledLuc]+scoreLookup[RolledUnu])/10
Stats = scoreLookup[RolledStr]..&quot;,&quot;..scoreLookup[RolledDex]..&quot;,&quot;..scoreLookup[RolledAgi]..&quot;,&quot;..scoreLookup[RolledCon]..&quot;,&quot;..scoreLookup[RolledPow]..&quot;,&quot;..scoreLookup[RolledInt]..&quot;,&quot;..scoreLookup[RolledWis]..&quot;,&quot;..scoreLookup[RolledCha]..&quot;,&quot;..scoreLookup[RolledLuc]..&quot;,&quot;..scoreLookup[RolledUnu]
table.insert(myRolls, Stats)

if scoreLookup[RolledStr] &gt;= DesiredStr and scoreLookup[RolledDex] &gt;= DesiredDex and scoreLookup[RolledAgi] &gt;= DesiredAgi and scoreLookup[RolledCon] &gt;= DesiredCon and scoreLookup[RolledPow] &gt;= DesiredPow and scoreLookup[RolledInt] &gt;= DesiredInt and scoreLookup[RolledWis] &gt;= DesiredWis and scoreLookup[RolledCha] &gt;= DesiredCha and scoreLookup[RolledLuc] &gt;= DesiredLuc and scoreLookup[RolledUnu] &gt;= DesiredUnu then 
	playSoundFile([[C:\Users\John\Documents\darkward\Sound\Creature\HighInquisitorWhitemane\HighInquisitorWhitemaneRes01.wav]])
else
	RolledStr=&quot;&quot;
	RolledPow=&quot;&quot;
	RolledDex=&quot;&quot;
	RolledInt=&quot;&quot;
	RolledAgi=&quot;&quot;
	RolledWis=&quot;&quot;
	RolledCon=&quot;&quot;
	RolledCha=&quot;&quot;
	RolledLuc=&quot;&quot;
	RolledUnu=&quot;&quot;
	send(&quot;y&quot;)
end
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>Do you want to reroll this char</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>0</integer>
                    </regexCodePropertyList>
                </Trigger>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Attributes</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>StrengthPower</name>
                        <script>RolledStr=matches[2]
RolledPow=matches[3]</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Strength:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Power:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>DexterityIntelligence</name>
                        <script>RolledDex=matches[2]
RolledInt=matches[3]</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Dexterity:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Intelligence:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>AgilityWisdom</name>
                        <script>RolledAgi=matches[2]
RolledWis=matches[3]</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Agility:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Wisdom:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>ConstitutionCharisma</name>
                        <script>RolledCon=matches[2]
RolledCha=matches[3]</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Constitution:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Charisma:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>LuckUnused</name>
                        <script>RolledLuc=matches[2]
RolledUnu=matches[3]</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Luck:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Unused:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
            </TriggerGroup>
            <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="yes" isColorTriggerBg="yes">
                <name>test triggers</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#ff0000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>SetLinkTest</name>
                    <script>local mydb = db:get_database(&quot;duris&quot;)
local results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[3]))

--selectString(matches[2], 1)
selectCaptureGroup(2)

local str = &quot;&quot;
for _, row in ipairs(results) do
	row.STATS = row.STATS or &quot;NONE&quot;
	str = str .. &quot;\n Item: &quot; .. row.NAME ..&quot;\nStats: &quot; .. row.STATS .. &quot;\nZone: &quot; .. row.LOCATION ..&quot;\nSlot: &quot; .. row.SLOT ..&quot;\nIVal: &quot; .. row.ITEMVALUE
end
setLink([[]], str)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>\&lt;worn (on eyes|in ear)\&gt;\s+(.*)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>eqstats_me</name>
                    <script>--\&lt;worn around neck&gt;\s(.*)(\(glowing|magic\))

local mydb = db:get_database(&quot;duris&quot;)

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[2]))

for _, row in ipairs(results) do
  cecho(&quot;\n &lt;DodgerBlue&gt;Item: &lt;khaki&gt;&quot; .. row.NAME ..&quot;\n &lt;DodgerBlue&gt;Stats &lt;khaki&gt;&quot; .. row.STATS .. &quot;\n &lt;DodgerBlue&gt;Zone: &lt;khaki&gt;&quot; .. row.LOCATION ..&quot;\n&quot;)
  if iLVL then cecho(&quot;\n &lt;DodgerBlue&gt;Item: &lt;khaki&gt;&quot; .. row.iLVL)
  end
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>\&lt;worn as a badge&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn on head&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn on eyes&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn in ear&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn on face&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn around neck&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn on body&gt;\s+(.*)</string>
                        <string>\&lt;worn about body&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn as quiver&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn about waist&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn around wrist&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn on hands&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn on finger&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;primary weapon&gt;\s+(.*)( | \(glowing| \(magic\))</string>
                        <string>\&lt;worn on feet&gt;\s+(.*)</string>
                        <string>\&lt;worn on finger&gt;\s+(.*)</string>
                        <string>\&lt;worn around wrist&gt;\s+(.*)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="yes" isColorTriggerBg="yes">
                    <name>test color</name>
                    <script>echo(&quot;Test: &quot;..matches[2])</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>FG15BG2</string>
                        <string>^(?!((\w+) speaks from the (\w+): '(.*)'))(.*)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>6</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>AutoIdBot</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Identify_Bot</name>
                    <script>local myRequestor = matches[2]
local myItem = matches[4]

local mydb = db:get_database(&quot;durisdata&quot;)

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, myItem))
local test = results.NAME
if test ~=&quot;&quot; then
	for _, row in ipairs(results) do
	  send(&quot;tell &quot;.. myRequestor.. &quot; ITEM: &quot;.. row.NAME ..&quot; STATS: &quot; .. row.STATS .. &quot; ZONE: &quot; .. row.LOCATION ..&quot; IVALUE: &quot; .. row.ITEMVALUE)
	end
end


</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(\w+) tells you in (\w+) '(.*)'$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Auction House</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>CaptureAuctionList</name>
                    <script>myAuctionList = {}
xindex = 1</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>999</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>Auctions closing soon:</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>3</integer>
                    </regexCodePropertyList>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>ToggleCaptureAuctionList</name>
                        <script>setTriggerStayOpen(&quot;CaptureAuctionList&quot;, 0)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>102513)  1 the helm of the Pit                           [42h] Bid: 250p</name>
                        <script>xnum = matches[2]
xname = matches[3]
myAuctionList[xindex] = xnum
xindex = xindex + 1
</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>(\d+)\)  \d (.*)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Get Log Name</name>
                    <script>echo(&quot;LOG FILE =  &quot;..matches[2])</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>System Message: Logging has been stopped. Log file is (.*)html</string>
                        <string>System Message: Logging has been stopped. Log file is (.*)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
        </TriggerGroup>
    </TriggerPackage>
    <TimerPackage>
        <TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
            <name>DarkwardMudlet</name>
            <script></script>
            <command></command>
            <packageName>DarkwardMudlet</packageName>
            <time></time>
            <TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
                <name>animatedtimers-30</name>
                <script></script>
                <command></command>
                <packageName>animatedtimers-30</packageName>
                <time>00:00:00.000</time>
                <TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
                    <name>Animated Timers</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <time>00:00:00.000</time>
                    <Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
                        <name>Animate</name>
                        <script>demonnic.anitimer:animate()</script>
                        <command></command>
                        <packageName></packageName>
                        <time>00:00:00.005</time>
                    </Timer>
                </TimerGroup>
            </TimerGroup>
        </TimerGroup>
        <TimerGroup isActive="no" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
            <name>Bard AFK</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <time>00:00:00.000</time>
            <Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
                <name>BardPractice</name>
                <script></script>
                <command>ps</command>
                <packageName></packageName>
                <time>00:01:30.000</time>
            </Timer>
        </TimerGroup>
        <TimerGroup isActive="no" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
            <name>Rouge AFK</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <time>00:00:00.000</time>
            <Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
                <name>Rogue Practice</name>
                <script>send(&quot;hide&quot;)
send(&quot;appraise satchel&quot;)
send(&quot;sneak on&quot;)
send(&quot;track spider&quot;)</script>
                <command></command>
                <packageName></packageName>
                <time>00:00:30.000</time>
            </Timer>
        </TimerGroup>
    </TimerPackage>
    <AliasPackage>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>deleteOldProfiles</name>
            <script></script>
            <command></command>
            <packageName>deleteOldProfiles</packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>delete old profiles</name>
                <script>deleteOldProfiles(matches[3], matches[2]==&quot;maps&quot;)

--Syntax examples: &quot;delete old profiles&quot;  -&gt; deletes profiles older than 31 days
--					&quot;delete old maps 10&quot;	-&gt; deletes maps older than 10 days</script>
                <command></command>
                <packageName></packageName>
                <regex>^delete old (profiles|maps)(?: (\d+))?$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="no" isFolder="yes">
            <name>echo</name>
            <script></script>
            <command></command>
            <packageName>echo</packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>`echo</name>
                <script>local s = matches[2]

s = string.gsub(s, &quot;%$&quot;, &quot;\n&quot;)
feedTriggers(&quot;\n&quot; .. s .. &quot;\n&quot;)
echo(&quot;\n&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>`echo (.+)</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>run-lua-code-v4</name>
            <script></script>
            <command></command>
            <packageName>run-lua-code-v4</packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>run lua code</name>
                <script>local f,e = loadstring(&quot;return &quot;..matches[2])
if not f then
	f,e = assert(loadstring(matches[2]))
end

local r = f()
if r ~= nil then display(r) end</script>
                <command></command>
                <packageName></packageName>
                <regex>^lua (.*)$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>DarkwardMudlet</name>
            <script></script>
            <command></command>
            <packageName>DarkwardMudlet</packageName>
            <regex></regex>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Duris Alias Set</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>DurisAliases</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>BagWork</name>
                        <script></script>
                        <command></command>
                        <packageName></packageName>
                        <regex></regex>
                        <Alias isActive="yes" isFolder="no">
                            <name>Get Item from Bag</name>
                            <script>send(&quot;get &quot;..matches[2]..&quot; &quot;..myBag)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^gib(?: (.+))?$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Look in Bag</name>
                            <script>send(&quot;look in &quot;..myBag)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^lib(?: (.+))?$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Put Item in Bag</name>
                            <script>send(&quot;put &quot;..matches[2]..&quot; &quot;..myBag)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^pib(?: (.+))?$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>BP2Chest</name>
                            <script>send (&quot;get &quot; .. matches[2] ..&quot; bp;put &quot; .. matches[2] .. &quot; chest&quot;)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^pp(\s([\w\.]+))?$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>BagCoins</name>
                            <script>send(&quot;rem &quot;..myBag..&quot;;put all.coins &quot;..myBag..&quot;;wear &quot;..myBag)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^bagit$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Put All Get Book</name>
                            <script>bag1 = &quot;satchel&quot;
send(&quot;rem &quot;..bag1..&quot;;put all &quot;..bag1..&quot;;get all.book &quot;..bag1..&quot;;wear &quot;..bag1)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^bagb$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Set Bag</name>
                            <script>myBag = matches[2]</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^setbag(?: (.+))?$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Put Boat</name>
                            <script>send(&quot;rem satchel&quot;)
send(&quot;put raft satchel&quot;)
send(&quot;put boat satchel&quot;)
send(&quot;wear satchel&quot;)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^pb$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Get Boat</name>
                            <script>send(&quot;rem satchel&quot;)
send(&quot;get raft satchel&quot;)
send(&quot;get boat satchel&quot;)
send(&quot;wear satchel&quot;)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^gb$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>get satchel</name>
                            <script>send(&quot;rem &quot;..myBag..&quot;;get &quot;..matches[2]..&quot; &quot;..myBag)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^gs(?: (.+))?$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>put satchel</name>
                            <script>send(&quot;rem &quot;..myBag)
send(&quot;put &quot;..matches[2]..&quot; &quot;..myBag)
send(&quot;wear &quot;..myBag)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^ps(?: (.+))?$</regex>
                        </Alias>
                    </AliasGroup>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>CharacterClass</name>
                        <script></script>
                        <command></command>
                        <packageName></packageName>
                        <regex></regex>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>GenericClassAliases</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <Alias isActive="yes" isFolder="no">
                                <name>Lore</name>
                                <script>send(&quot;lore &quot; ..matches[2])
send(&quot;exam &quot; ..matches[2])</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^lore (.*)$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>sendQuest</name>
                                <script>for word in myQuestMob:gmatch(&quot;%w+&quot;) do send (&quot;ask &quot;..word..&quot; &quot;..myQuestMonth) end</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^mq$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Combat Stats</name>
                                <script>local x = CombatMiss+CombatDodge+CombatHit
local y = (CombatHit/x)*100
echo(&quot;Miss:&quot;..CombatMiss..&quot;  Dodged:&quot;..CombatDodge..&quot;  Hits:&quot;..CombatHit..&quot;  Total:&quot;..x..&quot;  % of Total:&quot;..y)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^cStat$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>SetLootVar</name>
                                <script>if LootVar == &quot;coins&quot; then
	LootVar = &quot;all&quot;
elseif LootVar == &quot;all&quot; then
	LootVar = &quot;coins&quot;
end
cecho(&quot;&lt;cyan&gt;Lootvar set to: &quot;..LootVar)
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^SetLootVar$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>DepositCoins</name>
                                <script>if myPlatinum&gt;0 then send(&quot;dep &quot; .. myPlatinum .. &quot; p&quot;) end
if myGold&gt;0 then send(&quot;dep &quot; .. myGold .. &quot; g&quot;) end
if mySilver&gt;0 then send(&quot;dep &quot; .. mySilver .. &quot; s&quot;) end
if myCopper&gt;0 then send(&quot;dep &quot; .. myCopper .. &quot; c&quot;) end
echo(&quot;Autodeposit complete!&quot;)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^bankit$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Target</name>
                                <script>t = matches[2]:split(&quot; &quot;)
Target = t[1]
echo (&quot;Target set to: &quot; .. Target .. &quot;\n&quot;)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^tar (.*)$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Wield Weapon</name>
                                <script>myWeapon = matches[2]
cecho(&quot;&lt;cyan&gt;&lt;=================================== weapon set to: &quot;..myWeapon..&quot;\n&quot;)
send(&quot;wield &quot;..myWeapon)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^we(?: (.+))?$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Follow And Consent</name>
                                <script>send (&quot;follow &quot; .. matches[2])
send (&quot;consent &quot; .. matches[2])</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^fc(\s([\w\.]+))?$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Loot Corpse</name>
                                <script>if matches[2] then 
	for count=1, tonumber(matches[2]) do
	send(&quot;get &quot; ..LootVar.. &quot; &quot; .. count..&quot;.corpse&quot;)
	end
else
	send(&quot;get &quot; ..LootVar.. &quot; corpse&quot;)
end</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^ll(\s([\w\.]+))?$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Look In Container</name>
                                <script>clearUserWindow(&quot;GUI.Box5Mini&quot;)
enableTrigger(&quot;Container Content&quot;)
send(&quot;look in &quot; ..matches[2])
GUI.Box5Mini:cecho(&quot;&lt;DodgerBlue&gt;Contents of &lt;khaki&gt;&quot;..matches[2])
GUI.Box5Mini:cecho(&quot;\n&lt;DodgerBlue&gt;===============================&quot;)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^l in(?: (.+))?$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Consider</name>
                                <script>enableTrigger(&quot;Consider Output&quot;)
send(&quot;consider &quot;..matches[2])</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^con(?: (.+))?$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Equipment</name>
                                <script>clearUserWindow(&quot;GUI.Box5Mini&quot;)
enableTrigger(&quot;CaptureEquipmentWorn&quot;)
send(&quot;equipment list&quot;)
GUI.Box5Mini:cecho(&quot;&lt;DodgerBlue&gt;You are using:&quot;)
GUI.Box5Mini:cecho(&quot;\n&lt;khaki&gt;===============================\n&quot;)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^eq$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Inventory</name>
                                <script>enableTrigger(&quot;Item Value on Inventory&quot;)
send(&quot;Inventory&quot;)
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^i$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Exam</name>
                                <script>enableTrigger(&quot;Item Value on Inventory&quot;)
send(&quot;Exam &quot; ..matches[2])</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^ex (.*)$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>emote object</name>
                                <script>emotes = {
&quot;lag&quot;,
&quot;land&quot;,
&quot;laugh&quot;,
&quot;layhand&quot;,
&quot;lean&quot;,
&quot;lick&quot;,
&quot;lifetap&quot;,
&quot;lightning&quot;,
&quot;list&quot;,
&quot;listen&quot;,
&quot;lock&quot;,
&quot;look&quot;,
&quot;lookup&quot;,
&quot;loot&quot;,
&quot;lore&quot;,
&quot;lost&quot;,
&quot;love&quot;,
&quot;lucky&quot;,
&quot;ignore&quot;,
&quot;imitate&quot;,
&quot;impale&quot;,
&quot;insult&quot;,
&quot;introduce&quot;,
&quot;inventory&quot;,
&quot;nap&quot;,
&quot;nibble&quot;,
&quot;nod&quot;,
&quot;nog&quot;,
&quot;nokill&quot;,
&quot;noogie&quot;,
&quot;nose&quot;,
&quot;nudge&quot;,
&quot;nuke&quot;,
&quot;nuzzle&quot;,
&quot;embrace&quot;,
&quot;emit&quot;,
&quot;emote2&quot;,
&quot;emote&quot;,
&quot;empathy&quot;,
&quot;empty&quot;,
&quot;ems&quot;,
&quot;enhance&quot;,
&quot;enter&quot;,
&quot;envy&quot;,
&quot;eqlist&quot;,
&quot;equalibrium&quot;,
&quot;examine&quot;,
&quot;expand&quot;,
&quot;eyebrow&quot;,
&quot;raise&quot;,
&quot;reject&quot;,
&quot;release&quot;,
&quot;rift&quot;,
&quot;rlist&quot;,
&quot;rub&quot;,
&quot;ruffle&quot;,
&quot;rules&quot;,
&quot;tango&quot;,
&quot;tap&quot;,
&quot;tarzan&quot;,
&quot;taunt&quot;,
&quot;tease&quot;,
&quot;tip&quot;,
&quot;tiptoe&quot;,
&quot;tithe&quot;,
&quot;title&quot;,
&quot;tongue&quot;,
&quot;toss&quot;,
&quot;touch&quot;,
&quot;tower&quot;,
&quot;trance&quot;,
&quot;tug&quot;,
&quot;tweak&quot;,
&quot;twibble&quot;,
&quot;twiddle&quot;,
&quot;twirl&quot;,
&quot;hand&quot;,
&quot;happy&quot;,
&quot;hello&quot;,
&quot;hero&quot;,
&quot;hi5&quot;,
&quot;hiccup&quot;,
&quot;hickey&quot;,
&quot;hiss&quot;,
&quot;hold&quot;,
&quot;holdon&quot;,
&quot;hop&quot;,
&quot;horde&quot;,
&quot;hose&quot;,
&quot;howl&quot;,
&quot;hug&quot;,
&quot;hum&quot;,
&quot;hunger&quot;,
&quot;undress&quot;,
&quot;gag&quot;,
&quot;gamble&quot;,
&quot;gape&quot;,
&quot;garrote&quot;,
&quot;gasp&quot;,
&quot;gaze&quot;,
&quot;glance&quot;,
&quot;glare&quot;,
&quot;globe&quot;,
&quot;goose&quot;,
&quot;grab&quot;,
&quot;grant&quot;,
&quot;grin&quot;,
&quot;groan&quot;,
&quot;grope&quot;,
&quot;grovel&quot;,
&quot;growl&quot;,
&quot;grumble&quot;,
&quot;grunt&quot;,
&quot;guard&quot;,
&quot;gulp&quot;,
&quot;yawn&quot;,
&quot;yodel&quot;,
&quot;abort&quot;,
&quot;accuse&quot;,
&quot;ack&quot;,
&quot;agree&quot;,
&quot;amaze&quot;,
&quot;amplify&quot;,
&quot;analyze &quot;,
&quot;apologize&quot;,
&quot;applaud&quot;,
&quot;approach&quot;,
&quot;arch&quot;,
&quot;wait&quot;,
&quot;wake&quot;,
&quot;wave&quot;,
&quot;wet&quot;,
&quot;whap&quot;,
&quot;whatever&quot;,
&quot;wheeze&quot;,
&quot;where&quot;,
&quot;which&quot;,
&quot;whimper&quot;,
&quot;whine&quot;,
&quot;whisper&quot;,
&quot;whistle&quot;,
&quot;wiggle&quot;,
&quot;wince&quot;,
&quot;wink&quot;,
&quot;woops&quot;,
&quot;worship&quot;,
}

for k,v in ipairs(emotes) do
	send(v .. &quot; &quot; .. matches[2])
end
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^emo (.*)$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>addTank</name>
                                <script>local x = matches[2]
myTank = myTank or {}

table.insert(myTank, x) 
cecho(&quot;&lt;cyan&gt;&lt;=================================== &quot;..x..&quot; added to TANK table&quot;)
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^atank(?: (.+))?$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Craft Info</name>
                                <script>myRecipeNum = matches[2]
send(&quot;craft info &quot;..myRecipeNum)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^ci(?: (.+))?$</regex>
                            </Alias>
                        </AliasGroup>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>Fighters</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Avenger</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Dreadlord</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Berserker</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Reaver</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Monk</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Dragon Punch</name>
                                    <script>--^b(?: (.+))?$
if matches[2] then send(&quot;Dragon &quot; .. matches[2])
else
	send(&quot;Dragon&quot;)
end</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^dp(?: (.+))?$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>SpringLeap</name>
                                    <script>--^sl(?: (.+))?$
if matches[2] then send(&quot;kneel;springleap &quot;..matches[2])
else
	send(&quot;kneel;springleap&quot;)
end</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^sl(?: (.+))?$</regex>
                                </Alias>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Chants</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Chant Hero</name>
                                        <script>send(&quot;chant hero&quot;)
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ch$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Chant Quivering Palm</name>
                                        <script>--^b(?: (.+))?$
if matches[2] then send(&quot;chant quivering palm &quot;..matches[2])
else
	send(&quot;chant quivering palm&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^qp(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Chant Regen</name>
                                        <script>send(&quot;chant Regen&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^cr$</regex>
                                    </Alias>
                                </AliasGroup>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Anti-Paladin</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Ranger</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Warrior</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Paladin</name>
                                <script>--Paladin skills
--=========================================
--The following is a list of all skills and spells available to the Paladin class:
--
--==Skills==
--; 1st level:   2h bludgeon, 2h slashing, Bandage, Bash, Blindfighting, Carve, Climb, Dodge, Double Attack, First Aid, Fishing, Kick, Meditate, Mine, Mount, Parry, Quick Chant, Rescue, Retreat, Riposte, Swim, Unarmed Damage
--; 10th level:  Mounted Combat, Clerical Spell Knowledge
--; 20th Level:  Guard
--; 36th level:  Cleave
--; 41st level:  Skewer
--; 51st level:  Switch Opponents
--; 56th level:  Triple Attack
--
--==Innate Abilities==
--; 1st level:  Lay Hands, Detect Evil, Detect Good, Aura of Protection
--; 8th level:  Summon Mount
--; 10th level: Aura of Precision
--; 15th level: Aura of Endurance
--; 30th level: Aura of Improved Healing
--; 45th level: Aura of Battle Lust
--
--==Spells==
--; 2nd circle:  Bless
--; 3rd circle:  Armor, Cure Light, Protection from Evil
--; 4th circle:  Cure Blind, Dispel Evil, Remove Poison
--; 5th circle:  Cure Serious, Turn Undead, Invigorate
--; 6th circle:  Cure Critical, Remove Curse
--; 7th circle:  Destroy Undead, Soulshield
--; 8th circle:  Continual Light, Cure Disease, Heal
--; 9th circle:  Holy Word, Dharma
--; 10th circle: Group Heal
--; 11th circle: Accelerated Healing, Judgement, Sanctuary
--; 12th circle: Righteous Aura</script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Spells</name>
                                    <script>--==Spells==
--; 2nd circle:  Bless
--; 3rd circle:  Armor, Cure Light, Protection from Evil
--; 4th circle:  Cure Blind, Dispel Evil, Remove Poison
--; 5th circle:  Cure Serious, Turn Undead, Invigorate
--; 6th circle:  Cure Critical, Remove Curse
--; 7th circle:  Destroy Undead, Soulshield
--; 8th circle:  Continual Light, Cure Disease, Heal
--; 9th circle:  Holy Word, Dharma
--; 10th circle: Group Heal
--; 11th circle: Accelerated Healing, Judgement, Sanctuary
--; 12th circle: Righteous Aura</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>2ndCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Bless</name>
                                            <script>if matches[2] then send(&quot;cast 'bless' &quot; .. matches[2])
else
	send(&quot;cast 'bless' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^bless(?: (.+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>3rdCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Armor</name>
                                            <script>if matches[2] then send(&quot;cast 'armor' &quot; .. matches[2])
else
	send(&quot;cast 'armor' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ca(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Cure Light</name>
                                            <script>if matches[2] then send(&quot;cast 'Cure Light' &quot; .. matches[2])
else
	send(&quot;cast 'Cure Light' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cl(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Protection From Evil</name>
                                            <script>if matches[2] then send(&quot;cast 'protection from evil' &quot; .. matches[2])
else
	send(&quot;cast 'protection from evil' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^prote(?: (.+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>4thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Dispel Evil</name>
                                            <script>if matches[2] then send(&quot;cast 'dispel evil' &quot; .. matches[2])
else
	send(&quot;cast 'dispel evil'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^de(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Cure Blind</name>
                                            <script>if matches[2] then send(&quot;cast 'Cure Blind' &quot; .. matches[2])
else
	send(&quot;cast 'Cure Blind' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cb(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Remove Poison</name>
                                            <script>if matches[2] then send(&quot;cast 'Remove Poison' &quot; .. matches[2])
else
	send(&quot;cast 'Remove Poison' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^rp(?: (.+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>5thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Invigorate</name>
                                            <script>--Invigorate

if matches[2] then send(&quot;cast 'Invigorate' &quot; .. matches[2])
else
	send(&quot;cast 'Invigorate' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^inv(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Turn Undead</name>
                                            <script>--Turn Undead

if matches[2] then send(&quot;cast 'Turn Undead' &quot; .. matches[2])
else
	send(&quot;cast 'Turn Undead'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^tu(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Cure Serious</name>
                                            <script>--Cure Serious

if matches[2] then send(&quot;cast 'Cure Serious' &quot; .. matches[2])
else
	send(&quot;cast 'Cure Serious' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cs(?: (.+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>6thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Cure Critical</name>
                                            <script>--Cure Critical

if matches[2] then send(&quot;cast 'Cure Crit' &quot; .. matches[2])
else
	send(&quot;cast 'Cure Crit' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cc(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Remove Curse</name>
                                            <script>--Remove Curse

if matches[2] then send(&quot;cast 'Remove Curse' &quot; .. matches[2])
else
	send(&quot;cast 'Remove Curse' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^rc(?: (.+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>7thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Destroy Undead</name>
                                            <script>--Destroy Undead

if matches[2] then send(&quot;cast 'Destroy Undead' &quot; .. matches[2])
else
	send(&quot;cast 'Destroy Undead'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^du(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Soulshield</name>
                                            <script>--Soulshield

if matches[2] then send(&quot;cast 'Soulshield' &quot; .. matches[2])
else
	send(&quot;cast 'Soulshield'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ss(?: (.+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>8thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Continual Light</name>
                                            <script>--Continual Light

if matches[2] then send(&quot;cast 'Continual Light' &quot; .. matches[2])
else
	send(&quot;cast 'Continual Light'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^light(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Cure Disease</name>
                                            <script>--Cure Disease

if matches[2] then send(&quot;cast 'Cure Disease' &quot; .. matches[2])
else
	send(&quot;cast 'Cure Disease'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cdis(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Heal</name>
                                            <script>--Heal

if matches[2] then send(&quot;cast 'Heal' &quot; .. matches[2])
else
	send(&quot;cast 'Heal' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ch(?: (.+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>9thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Holy Word</name>
                                            <script>--Holy Word

if matches[2] then send(&quot;cast 'Holy Word' &quot; .. matches[2])
else
	send(&quot;cast 'Holy Word'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^hw(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Dharma</name>
                                            <script>--Dharma

if matches[2] then send(&quot;cast 'Dharma' &quot; .. matches[2])
else
	send(&quot;cast 'Dharma'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^dharma$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>10thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Group Heal</name>
                                            <script>--Group Heal

if matches[2] then send(&quot;cast 'Group Heal' &quot; .. matches[2])
else
	send(&quot;cast 'Group Heal'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^gh(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Holy Sword</name>
                                            <script>
if matches[2] then send(&quot;cast 'Holy Sword' &quot; .. matches[2])
else
	send(&quot;cast 'Holy Sword'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^hsword$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>11thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Accelerated Healing</name>
                                            <script>--Accelerated Healing

if matches[2] then send(&quot;cast 'Accelerated Healing' &quot; .. matches[2])
else
	send(&quot;cast 'Accelerated Healing' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ah(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Judgement</name>
                                            <script>--Judgement

if matches[2] then send(&quot;cast 'Judgement' &quot; .. matches[2])
else
	send(&quot;cast 'Judgement'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ju(?: (.+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Sanctuary</name>
                                            <script>--Sanctuary

if matches[2] then send(&quot;cast 'Sanctuary' &quot; .. matches[2])
else
	send(&quot;cast 'Sanctuary'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sanc(?: (.+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>12thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Righteous Aura</name>
                                            <script>--Righteous Aura

if matches[2] then send(&quot;cast 'Righteous Aura' &quot; .. matches[2])
else
	send(&quot;cast 'Righteous Aura'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ra(?: (.+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Skills</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Bash</name>
                                        <script>--^b(?: (.+))?$
if matches[2] then send(&quot;bash &quot; .. matches[2])
else
	send(&quot;bash&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^b(?: (.+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Innates</name>
                                    <script>--==Innate Abilities==
--; 1st level:  Lay Hands, Detect Evil, Detect Good, Aura of Protection
--; 8th level:  Summon Mount
--; 10th level: Aura of Precision
--; 15th level: Aura of Endurance
--; 30th level: Aura of Improved Healing
--; 45th level: Aura of Battle Lust</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Aura of Protection</name>
                                        <script>send(&quot;innate Aura_of_Protection&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^aoprot$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Aura of Precision</name>
                                        <script>send(&quot;Innate Aura_of_Precision&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^aopre$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Aura of Endurance</name>
                                        <script>send(&quot;innate Aura_of_Endurance&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^aoend$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Aura of Improved Healing</name>
                                        <script>send(&quot;innate Aura_of_Improved_Healing&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^aoheal$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Aura of Battle Lust</name>
                                        <script>send(&quot;innate Aura_of_Battle_Lust&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^aobat$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Lay Hands</name>
                                        <script>send(&quot;innate lay hands&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^lh(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Summon Mount</name>
                                        <script>send(&quot;innate Summon Mount&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^sm$</regex>
                                    </Alias>
                                </AliasGroup>
                                <Alias isActive="yes" isFolder="no">
                                    <name>RestPrayMed</name>
                                    <script>send(&quot;exp&quot;)
send(&quot;rest&quot;)
send(&quot;pray&quot;)
send(&quot;med&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^zz|mem$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Paladin_Spellup</name>
                                    <script>CheckSpells = {&quot;armor&quot;, &quot;bless&quot;, &quot;holy sword&quot;, &quot;soulshield&quot;, &quot;accelerated healing&quot;, &quot;righteous aura&quot;}
CheckSpellsAlias = {&quot;ca&quot;, &quot;bless&quot;, &quot;hs&quot;, &quot;ss&quot;, &quot;ah&quot;, &quot;ra&quot;}

--- Loop through active to find missing spells
cecho(&quot;&lt;cyan&gt;&lt;=================================== Spell Up Activated\n&quot;)

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v..&quot; is active\n&quot;)
	else 
		-- cecho(&quot;&lt;cyan&gt;&lt;===casting &quot;..v&quot;\n&quot;)
		expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)], false)
	end
end

send(&quot;score&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^su$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Trample</name>
                                    <script>if matches[2] then send(&quot;trample &quot;..matches[2])
else
	send(&quot;trample&quot;)
end</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^tt(?: (.+))?$</regex>
                                </Alias>
                            </AliasGroup>
                        </AliasGroup>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>MagicUsers</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Theurgist</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <AliasGroup isActive="no" isFolder="yes">
                                    <name>TheurgistSpells</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>1stCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>LifeBolt</name>
                                            <script>if matches[2] then send(&quot;cast 'life bolt' &quot; .. matches[2])
else
	send(&quot;cast 'life bolt'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^mm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Preserve</name>
                                            <script>send(&quot;cast 'Preserve' &quot; .. matches[2])</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^pres (.*)$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>MinorCreation</name>
                                            <script>send(&quot;cast 'minor cre' &quot; .. matches[2])
send(&quot;get &quot; .. matches[2])</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^mc (.*)$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>DetectMagic</name>
                                            <script>if matches[2] then send(&quot;cast 'Detect Magic' &quot; .. matches[2])
else
	send(&quot;cast 'Detect Magic' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^detm (.*)$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>2ndCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>ChillTouch</name>
                                            <script>if matches[2] then send(&quot;cast 'chill touch' &quot; .. matches[2])
else
	send(&quot;cast 'chill touch'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ct(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Sleep</name>
                                            <script>if matches[2] then send(&quot;cast 'sleep' &quot; .. matches[2])
else
	send(&quot;cast 'sleep'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sleep(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>ProtCold</name>
                                            <script>if matches[2] then send(&quot;cast 'protection from cold' &quot; .. matches[2])
else
	send(&quot;cast 'protection from cold'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^protc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>ProtLiving</name>
                                            <script>if matches[2] then send(&quot;cast 'Protection from Living' &quot; .. matches[2])
else
	send(&quot;cast 'Protection from Living'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^protl(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>VampTouch</name>
                                            <script>send(&quot;Vampiric Touch'&quot;)
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^vt$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>3rdCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>EmbalmCorpse</name>
                                            <script>if matches[2] then send(&quot;cast 'embalm' &quot; .. matches[2])
else
	send(&quot;cast 'embalm' corpse&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^emb(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Sense Follower</name>
                                            <script>send(&quot;cast 'sense follower'&quot;)
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sf$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>DispelMagic</name>
                                            <script>if matches[2] then send(&quot;cast 'dispel magic' &quot; .. matches[2])
else
	send(&quot;cast 'dispel magic'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^dm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>CallArchon</name>
                                            <script>if matches[2] then send(&quot;cast 'call archon' &quot; .. matches[2])
else
	send(&quot;cast 'call archon' corpse&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^archon$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>4thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Wither</name>
                                            <script>if matches[2] then send(&quot;cast 'wither' &quot; .. matches[2])
else
	send(&quot;cast 'wither'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^wi(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Strength</name>
                                            <script>if matches[2] then send(&quot;cast 'strength' &quot; .. matches[2])
else
	send(&quot;cast 'strength'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^str(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>5thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Coldshield</name>
                                            <script>send(&quot;cast 'coldshield'&quot;)</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cs$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Call Asura</name>
                                            <script>if matches[2] then send(&quot;cast 'call asura' &quot; .. matches[2])
else
	send(&quot;cast 'call asura' corpse&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^asura(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>MendSoul</name>
                                            <script>send(&quot;cast 'call asura' &quot; .. matches[2])</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ms(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Feeblemind</name>
                                            <script>if matches[2] then send(&quot;cast 'feeblemind' &quot; .. matches[2])
else
	send(&quot;cast 'feeblemind'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^fee(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Levitate</name>
                                            <script>if matches[2] then send(&quot;cast 'levitate' &quot; .. matches[2])
else
	send(&quot;cast 'levitate'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^lev(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Teleport</name>
                                            <script>send(&quot;cast 'teleport'&quot;)</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^qq$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>6thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>ConeOfCold</name>
                                            <script>if matches[2] then send(&quot;cast 'cone of cold' &quot; .. matches[2])
else
	send(&quot;cast 'cone of cold'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^coc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>MinorGlobe</name>
                                            <script>if matches[2] then send(&quot;cast 'minor globe of invulnerability' &quot; .. matches[2])
else
	send(&quot;cast 'minor globe of invulnerability'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^minorg(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>RestoreSpirit</name>
                                            <script>if matches[2] then send(&quot;cast 'restore spirit' &quot; .. matches[2])
else
	send(&quot;cast 'restore spirit'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^rs(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>VitalizeSoul</name>
                                            <script>if matches[2] then send(&quot;cast 'vitalize soul' &quot; .. matches[2])
else
	send(&quot;cast 'vitalize soul'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^vit(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>7thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>8thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>DeathScribe</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                    </AliasGroup>
                                </AliasGroup>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Alchemist</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="yes" isFolder="yes">
                                <name>Illusionist</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>1st Circle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Magic Missile</name>
                                        <script>if matches[2] then send(&quot;cast 'magic missile' &quot;..matches[2])
else
	send(&quot;cast 'magic missile'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^mm(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Phantom Armor</name>
                                        <script>mySpell =&quot;Phantom Armor&quot;
if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot;..matches[2])
else
	send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pa(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>MinorCreation</name>
                                        <script>if matches[2] then send(&quot;cast 'minor creation' &quot; .. matches[2])
else
	send(&quot;cast 'minor creation'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^mc(\s([\w\.]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>2nd Circle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Burning Hands</name>
                                        <script>mySpell =&quot;Burning Hands&quot;
if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot;..matches[2])
else
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^bh(\s([\w\.]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>3rd Circle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Shadow Monster</name>
                                        <script>mySpell =&quot;Shadow Monster&quot;
if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot;..matches[2])
else
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^sm(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Blindness</name>
                                        <script>mySpell =&quot;Blindness&quot;
if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot;..matches[2])
else
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^b(\s([\w\.]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>4th Circle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Insects</name>
                                        <script>mySpell =&quot;Insects&quot;
if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot;..matches[2])
else
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ii(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Sleep</name>
                                        <script>mySpell =&quot;Sleep&quot;
if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot;..matches[2])
else
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^sl(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Levitate</name>
                                        <script>mySpell =&quot;Levitate&quot;
if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot;..matches[2])
else
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^lev(\s([\w\.]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>5th Circle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>boulder</name>
                                        <script>mySpell =&quot;Boulder&quot;
if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot;..matches[2])
else
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^bb(\s([\w\.]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Slash Casting</name>
                                    <script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(Illusionist, matches[2], matches[3])</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^\/(\w+)(\s([\w\.]+))?$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Rest Mem Med</name>
                                    <script>send(&quot;exp;rest;mem;med;blood&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^zz$</regex>
                                </Alias>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Conjurer</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Ethermancer</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Necromancer</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Followers</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers</name>
                                        <script>send(&quot;order followers &quot; .. matches[2])
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^of (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Bash</name>
                                        <script>if matches[2] then send(&quot;order followers bash &quot; .. matches[2])
else
	send(&quot;order followers bash&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofb (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Backstab</name>
                                        <script>if matches[2] then 
	send(&quot;order followers bac &quot; .. matches[2])
	Target = matches[2]
	echo (&quot;======================================== Target set to: &quot; .. Target .. &quot;\n&quot;)
else
	send(&quot;order followers bac&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^b (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Get</name>
                                        <script>send(&quot;order followers get &quot; .. matches[2])
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofg (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Fist</name>
                                        <script>--^f(\s([\w\.]+))?$
if matches[2] then send(&quot;order followers cast 'Bigbys Clenched Fist' &quot;.. matches[2])
else
	send(&quot;order followers cast 'Bigbys Clenched Fist' &quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^f(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Kill</name>
                                        <script>if matches[2] then 
	send(&quot;order followers kill &quot; .. matches[2])
	Target = matches[2]
	echo (&quot;======================================== Target set to: &quot; .. Target .. &quot;\n&quot;)
else
	send(&quot;order followers kill&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofk (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Haste</name>
                                        <script>if matches[2] then send(&quot;order followers cast 'Haste' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Haste' self&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofh(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Detect Invis</name>
                                        <script>--^ofdi (.*)$
if matches[2] then send(&quot;order followers cast 'Detect Invis' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Detect Invis' self&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofdi (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Cast</name>
                                        <script>if matches[2] then send(&quot;order followers cast '&quot;..matches[2]..&quot;' Drev&quot;)
else
	send(&quot;order followers cast '&quot;..matches[2]..&quot;' self&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofc(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Power Word Blind</name>
                                        <script>send(&quot;of cast 'power word blind' &quot;..matches[2])</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pwb (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Improved Invis</name>
                                        <script>--^ofdi (.*)$
if matches[2] then send(&quot;order followers cast 'improved Invis' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Improved Invis' &quot;..myName)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofii(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Fireball</name>
                                        <script>--^f(\s([\w\.]+))?$
if matches[2] then send(&quot;order followers cast 'Fireball' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Fireball' &quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fb(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers cast Electrical Execution</name>
                                        <script>--^f(\s([\w\.]+))?$
if matches[2] then send(&quot;order followers cast 'Electrical Execution' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Electrical Execution' &quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ee(\s([\w\.]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Spells</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>1st Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Detect Magic</name>
                                            <script>--^ct(\s([\w\.]+))?$
mySpell = &quot;Detect Magic&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^detm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Minor Creation</name>
                                            <script>if matches[2] then send(&quot;cast 'minor creation' &quot; .. matches[2])
else
	send(&quot;cast 'minor creation'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^mc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Preserve</name>
                                            <script>mySpell = &quot;Preserve&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^pres(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Protection from Undead</name>
                                            <script>--^ct(\s([\w\.]+))?$
mySpell = &quot;Protection from Undead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^protu(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Slashing Darkness</name>
                                            <script>mySpell = &quot;Slashing Darkness&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sd(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>2nd Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Chill Touch</name>
                                            <script>--^ct(\s([\w\.]+))?$
mySpell = &quot;Chill Touch&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ct(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Protection from Living</name>
                                            <script>--^vt(\s([\w\.]+))?$
mySpell = &quot;Protection from Living&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^protl(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Protection from Cold</name>
                                            <script>--^protc(\s([\w\.]+))?$
mySpell = &quot;Protection from Cold&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^protc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Sleep</name>
                                            <script>--^sleep(\s([\w\.]+))?$
mySpell = &quot;Sleep&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sleep(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Vampiric Touch</name>
                                            <script>--^vt(\s([\w\.]+))?$
mySpell = &quot;Vampiric Touch&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^vt(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>3rd Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Animate Dead</name>
                                            <script>--^emb(\s([\w\.]+))?$
mySpell = &quot;Animate Dead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ad(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Dispel Magic</name>
                                            <script>--^dm(\s([\w\.]+))?$
mySpell = &quot;Dispel Magic&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end	</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^dm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Embalm</name>
                                            <script>--^emb(\s([\w\.]+))?$
mySpell = &quot;Embalm&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^emb(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Sense Follower</name>
                                            <script>--^sense(\s([\w\.]+))?$
mySpell = &quot;Sense Follower&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end	</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sense(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>4th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Life Leech</name>
                                            <script>--^ll(\s([\w\.]+))?$
mySpell = &quot;Life Leech&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^li(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Strength</name>
                                            <script>--^str(\s([\w\.]+))?$
mySpell = &quot;Strength&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^str(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Unmaking</name>
                                            <script>--^unmake(\s([\w\.]+))?$
mySpell = &quot;Unmaking&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^unmake(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Wither</name>
                                            <script>--^wi(\s([\w\.]+))?$
mySpell = &quot;Wither&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^wi(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>5th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Coldshield</name>
                                            <script>--^colds(\s([\w\.]+))?$
mySpell = &quot;Coldshield&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cs(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Fireshield</name>
                                            <script>--^fires(\s([\w\.]+))?$
mySpell = &quot;Fireshield&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^fires(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Heal Undead</name>
                                            <script>--^hu(\s([\w\.]+))?$
mySpell = &quot;Heal Undead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^hu(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Levitate</name>
                                            <script>--^lev(\s([\w\.]+))?$
mySpell = &quot;Levitate&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^lev(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Raise Spectre</name>
                                            <script>--^rs(\s([\w\.]+))?$
mySpell = &quot;Raise Spectre&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^rs(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Teleport</name>
                                            <script>--^tel(\s([\w\.]+))?$
mySpell = &quot;Teleport&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^tel(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Concealment</name>
                                            <script>--^conc(\s([\w\.]+))?$
mySpell = &quot;Concealment&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' &quot;..myName)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^conc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>6th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Vitalize Undead</name>
                                            <script>--^vu(\s([\w\.]+))?$
mySpell = &quot;Vitalize Undead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^vu(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Enervation</name>
                                            <script>--^en(\s([\w\.]+))?$
mySpell = &quot;Enervation&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^en(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Cone of Cold</name>
                                            <script>--^ct(\s([\w\.]+))?$
mySpell = &quot;Cone of Cold&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>7th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Knock</name>
                                            <script>--^knock(\s([\w\.]+))?$
mySpell = &quot;Knock&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^knock(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Protect Undead</name>
                                            <script>--^pu(\s([\w\.]+))?$
mySpell = &quot;Protect Undead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^pu(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Raise Wraith</name>
                                            <script>--^rw(\s([\w\.]+))?$
mySpell = &quot;Raise Wraith&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^rw(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>8th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Detect Invisibility</name>
                                            <script>--^di(\s([\w\.]+))?$
mySpell = &quot;Detect Invisibility&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^di(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Improved Invisibility</name>
                                            <script>--^invis(\s([\w\.]+))?$
mySpell = &quot;Improved Invisibility&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^invis(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Negative Concussion Blast</name>
                                            <script>--^ncb(\s([\w\.]+))?$
mySpell = &quot;Negative Concussion Blast&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ncb(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Haste</name>
                                            <script>--^has(\s([\w\.]+))?$
mySpell = &quot;Haste&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^has(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>9thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Energy Drain</name>
                                            <script>--^ncb(\s([\w\.]+))?$
mySpell = &quot;Energy Drain&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ed(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>10thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Raise Lich</name>
                                            <script>--^rw(\s([\w\.]+))?$
mySpell = &quot;Raise Lich&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^rl(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                </AliasGroup>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Slash Casting</name>
                                    <script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(Necromancer, matches[2], matches[3])</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^\/(\w+)(\s([\w\.]+))?$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Necro SpellUp</name>
                                    <script>CheckSpells = {&quot;protection from undead&quot;, &quot;protection from cold&quot;, &quot;protection from living&quot;, &quot;sense follower&quot;, &quot;strength&quot;, &quot;levitate&quot;, &quot;coldshield&quot;, &quot;stone skin&quot;, &quot;detect invisibility&quot;, &quot;haste&quot;, &quot;invisibility&quot;, &quot;vitalize undead&quot;}
CheckSpellsAlias = {&quot;protu&quot;, &quot;protc&quot;, &quot;protl&quot;, &quot;sense&quot;, &quot;str&quot;, &quot;lev&quot;, &quot;cs&quot;, &quot;pu&quot;, &quot;di&quot;, &quot;has&quot;, &quot;invis&quot;, &quot;vu&quot;}


send(&quot;score&quot;)
--- Loop through active to find missing spells
cecho(&quot;\n&lt;cyan&gt;&lt;=================================== Spell Up Activated\n&quot;)

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v..&quot; is active\n&quot;)
	else 
		-- cecho(&quot;&lt;cyan&gt;&lt;===casting &quot;..v&quot;\n&quot;)
		expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)], false)
	end
end

send(&quot;score&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^su$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Memorize</name>
                                    <script>send(&quot;rest;mem;exp;med&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^zz$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Make Book</name>
                                    <script>PracBook = {&quot;chill touch&quot;,
		&quot;cone of cold&quot;,
		&quot;minor creation&quot;,
		&quot;strength&quot;,
		&quot;minor globe of invulnerability&quot;,
		&quot;levitate&quot;,
		&quot;dispel magic&quot;,
		&quot;protection from cold&quot;,
		&quot;coldshield&quot;,
		&quot;protect undead&quot;,
		&quot;protection from undead&quot;,
		&quot;heal undead&quot;,
		&quot;embalm&quot;,
		&quot;wall of bones&quot;,
		&quot;raise wraith&quot;,
		&quot;sense follower&quot;,
		&quot;protection from living&quot;,
		&quot;vitalize undead&quot;,
		&quot;slashing darkness&quot;,
		&quot;life leech&quot;}

for i,v in ipairs(PracBook) do
	send(&quot;prac &quot;..v)
end

</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^MakeBook$</regex>
                                </Alias>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Sorcerer</name>
                                <script>send(&quot;rest;mem;med&quot;)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^zz$</regex>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>SorcSpells</name>
                                    <script>--==Spells==
-- 1st circle:  Detect Magic, Magic Missile, Minor Creation
-- 2nd circle:  Burning Hands, Chill Touch, Sleep, Strength
-- 3rd circle:  Acid Blast, Concealment, Agility, Shocking Grasp
-- 4th circle:  Dispel Magic, Farsee, Infravision, Levitate,
--               Lightning Bolt, Minor Paralysis, Ray of Enfeeblement,
--               Wizard Eye
-- 5th circle:  Coldshield, Cone of Cold, Dimension Door,
--               Minor Globe of Invulnerability, Slowness
-- 6th circle:  Color Spray, Feeblemind, Fireball, Fireshield,
--               Ice Storm, Teleport
-- 7th circle:  Bigbys Clenched Fist, Haste, Improved Invisibility,
--               Power Word Blind, Power Word Stun, Reveal True Name,
--               Detect Invisibility
-- 8th circle:  Dispel Invisible, Fly, Immolate, Power Word Kill,
--               Shadow Shield
-- 9th circle:  Acid Immolate, Incendiary Cloud,
--               Mass Invisibility, Prismatic Ray, Relocate
-- 10th circle: Chain Lightning, Meteorswarm, Bigbys Crushing Hand
-- 11th circle: solbeeps missile barrage, Enlarge, Reduce
-- 12th circle: Deflect, Globe of Invulnerability</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Fireball</name>
                                        <script>if matches[2] then send(&quot;cast 'fireball' &quot; .. matches[2])
else
	send(&quot;cast 'fireball'&quot;)
end
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fb(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Bigbys Clenched Fist</name>
                                        <script>if matches[2] then send(&quot;cast 'bigbys clenched fist' &quot; .. matches[2])
else
	send(&quot;cast 'bigbys clenched fist'&quot;)
end
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^f(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>1st Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Magic Missile</name>
                                            <script>if matches[2] then send(&quot;cast 'magic missile' &quot; .. matches[2])
else
	send(&quot;cast 'magic missile'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^mm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Minor Creation</name>
                                            <script>if matches[2] then send(&quot;cast 'minor creation' &quot; .. matches[2])
else
	send(&quot;cast 'minor creation'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^mc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Detect Magic</name>
                                            <script>if matches[2] then send(&quot;cast 'detect magic' &quot; .. matches[2])
else
	send(&quot;cast 'detect magic' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^dm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>2nd Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Chill Touch</name>
                                            <script>if matches[2] then send(&quot;cast 'chill touch' &quot; .. matches[2])
else
	send(&quot;cast 'chill touch'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ct(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Burning Hands</name>
                                            <script>if matches[2] then send(&quot;cast 'burning' &quot; .. matches[2])
else
	send(&quot;cast 'burning'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^bh(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Strength</name>
                                            <script>if matches[2] then send(&quot;cast 'strength' &quot; .. matches[2])
else
	send(&quot;cast 'strength' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^str(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>3rd Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Acid Blast</name>
                                            <script>if matches[2] then send(&quot;cast 'acid blast' &quot; .. matches[2])
else
	send(&quot;cast 'acid blast'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ab(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Agility</name>
                                            <script>if matches[2] then send(&quot;cast 'agility' &quot; .. matches[2])
else
	send(&quot;cast 'agility' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^agi(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Concealment</name>
                                            <script>if matches[2] then send(&quot;cast 'concealment' &quot; .. matches[2])
else
	send(&quot;cast 'concealment' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^conc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Shocking Grasp</name>
                                            <script>if matches[2] then send(&quot;cast 'shocking grasp' &quot; .. matches[2])
else
	send(&quot;cast 'shocking grasp' &quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sg(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>4th Circle</name>
                                        <script>--[[
4th CIRCLE:
dispel magic               
farsee                     
infravision                
levitate                   
lightning bolt             
minor paralysis            
ray of enfeeblement        
wizard eye  
]]--</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Lightning Bolt</name>
                                            <script>if matches[2] then send(&quot;cast 'lightning bolt' &quot; .. matches[2])
else
	send(&quot;cast 'lightning bolt'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^lb(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Ray Of Enfeeblement</name>
                                            <script>if matches[2] then send(&quot;cast 'ray of enfeeb' &quot; .. matches[2])
else
	send(&quot;cast 'ray of enfeeb'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ray(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Dispel Magic</name>
                                            <script>if matches[2] then send(&quot;cast 'dispel magic' &quot; .. matches[2])
else
	send(&quot;cast 'dispel magic'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^dm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Farsee</name>
                                            <script>if matches[2] then send(&quot;cast 'farsee' &quot; .. matches[2])
else
	send(&quot;cast 'farsee' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^far(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Infravision</name>
                                            <script>if matches[2] then send(&quot;cast 'infravision' &quot; .. matches[2])
else
	send(&quot;cast 'infravision' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^infra(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Levitate</name>
                                            <script>if matches[2] then send(&quot;cast 'levitate' &quot; .. matches[2])
else
	send(&quot;cast 'levitate' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^lev(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Minor Paralysis</name>
                                            <script>if matches[2] then send(&quot;cast 'minor paralysis' &quot; .. matches[2])
else
	send(&quot;cast 'minor paralysis'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^minorp(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Wizard Eye</name>
                                            <script>if matches[2] then send(&quot;cast 'wizard eye' &quot; .. matches[2])
else
	send(&quot;cast 'wizard eye'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^eye(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                </AliasGroup>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Rest Mem</name>
                                    <script>send(&quot;exp;rest;mem;med;blood&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^zz$</regex>
                                </Alias>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Psionicist</name>
                                <script>--1st CIRCLE:
--adrenaline control         
--ego whip                   
--excogitate                 

--2nd CIRCLE:
--ballistic attack           
--enhance agility            
--enhance constitution       
--enhance dexterity          
--enhance strength           

--3rd CIRCLE:
--aura sight                 
--lend health                
--molecular agitation        

--4th CIRCLE:
--ego blast                  
--energy containment         
--flesh armor                

--5th CIRCLE:
--inflict pain               

--6th CIRCLE:
--cell adjustment            
--create sound               
--flight                     
--intellect fortress         

--7th CIRCLE:
--detonate                   
--tower of iron will         

--8th CIRCLE:
--ectoplasmic form           
--molecular control          

--9th CIRCLE:
--ether warp                 
--psychic crush 

--10th CIRCLE:
--death field                
--wormhole                   

--11th CIRCLE:
--biofeedback                

--12th CIRCLE:
--enrage   </script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>PsiSpells</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Energy Containment</name>
                                        <script>send(&quot;will 'energy containment'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ec$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Ego Blast</name>
                                        <script>if matches[2] then send(&quot;will 'ego blast' &quot; .. matches[2])
else
	send(&quot;will 'ego blast'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^eb(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Flesh Armor</name>
                                        <script>send(&quot;will 'flesh armor'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fa(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Adrenaline Control</name>
                                        <script>send(&quot;will 'adrenaline control'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ac$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Enchanced Strength</name>
                                        <script>send(&quot;will 'enhance strength'&quot;)

</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^str$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Enhanced Dexterity</name>
                                        <script>send(&quot;will 'enhance dexterity'&quot;)
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^dex$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>BallisticAttack</name>
                                        <script>if matches[2] then send(&quot;will 'ballistic attack' &quot; .. matches[2])
else
	send(&quot;will 'ballistic attack'&quot;)
end
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ba(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Aura Sight</name>
                                        <script>send(&quot;will 'aura sight'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^as$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Enchanced Constitution</name>
                                        <script>send(&quot;will 'enhance constitution'&quot;)
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^con$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>MolecularAgitation</name>
                                        <script>if matches[2] then send(&quot;will 'molecular agitation' &quot; .. matches[2])
else
	send(&quot;will 'molecular agitation'&quot;)
end
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ma(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Enhanced Agility</name>
                                        <script>send(&quot;will 'enhance agility'&quot;)
--send(&quot;will 'enhance constitution'&quot;)
--send(&quot;will 'enhance dexterity'&quot;)
--send(&quot;will 'enhance strength'&quot;)

--enhance agility            
--enhance constitution       
--enhance dexterity          
--enhance strength </script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^agi$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>EgoWhip</name>
                                        <script>if matches[2] then send(&quot;will 'ego whip' &quot; .. matches[2])
else
	send(&quot;will 'ego whip'&quot;)
end
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ew(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Psychic Crush</name>
                                        <script>if matches[2] then send(&quot;will 'psychic crush' &quot; .. matches[2])
else
	send(&quot;will 'psychic crush'&quot;)
end
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pc(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Enrage</name>
                                        <script>if matches[2] then send(&quot;will 'enrage' &quot; .. matches[2])
else
	send(&quot;will 'enrage'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^enr(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Detonate</name>
                                        <script>if matches[2] then send(&quot;will 'Detonate' &quot; .. matches[2])
else
	send(&quot;will 'Detonate'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^det(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Biofeedback</name>
                                        <script>send(&quot;will 'biofeedback'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^bio(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Tower of Iron Will</name>
                                        <script>--Tower of Iron Will

send(&quot;will 'Tower of Iron Will'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^toiw(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Intellect Fortress</name>
                                        <script>send(&quot;will 'Intellect Fortress'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^if$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Ectoplasmic Form</name>
                                        <script>--ectoplasmic form 
send(&quot;will 'Ectoplasmic Form'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Displacement</name>
                                        <script>send(&quot;will 'Displacement'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^di$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Inertial Barrier</name>
                                        <script>send(&quot;will 'Inertial Barrier'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ib$</regex>
                                    </Alias>
                                </AliasGroup>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Psi Spell Up</name>
                                    <script>CheckSpells = {&quot;adrenaline control&quot;, &quot;enhance strength&quot;, &quot;enhance dexterity&quot;, &quot;enhance constitution&quot;, &quot;enhance agility&quot;, &quot;flesh armor&quot;, &quot;energy containment&quot;, &quot;aura sight&quot;, &quot;biofeedback&quot;, &quot;tower of iron will&quot;, &quot;intellect fortress&quot;, &quot;inertial barrier&quot;, &quot;displacement&quot;}
CheckSpellsAlias = {&quot;ac&quot;, &quot;str&quot;, &quot;dex&quot;, &quot;con&quot;, &quot;agi&quot;, &quot;fa&quot;, &quot;ec&quot;, &quot;as&quot;, &quot;bio&quot;, &quot;toiw&quot;, &quot;if&quot;, &quot;ib&quot;, &quot;di&quot;}

--- Loop through active to find missing spells
cecho(&quot;&lt;cyan&gt;&lt;=================================== Spell Up Activated\n&quot;)

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v..&quot; is active\n&quot;)
	else expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)])
	end
end</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^su$</regex>
                                </Alias>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Summoner</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Followers</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers</name>
                                        <script>send(&quot;order followers &quot; .. matches[2])
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^of (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Bash</name>
                                        <script>if matches[2] then send(&quot;order followers bash &quot; .. matches[2])
else
	send(&quot;order followers bash&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofb (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Backstab</name>
                                        <script>if matches[2] then
	send(&quot;order followers bac &quot; .. matches[2])
	Target = matches[2]
	echo (&quot;======================================== Target set to: &quot; .. Target .. &quot;\n&quot;)
else
	send(&quot;order followers bac&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^b (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Get</name>
                                        <script>send(&quot;order followers get &quot; .. matches[2])
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofg (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Fist</name>
                                        <script>--^f(\s([\w\.]+))?$
if matches[2] then send(&quot;order followers cast 'Bigbys Clenched Fist' &quot;.. matches[2])
else
	send(&quot;order followers cast 'Bigbys Clenched Fist' &quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^f(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Kill</name>
                                        <script>if matches[2] then
	send(&quot;order followers kill &quot; .. matches[2])
	Target = matches[2]
	echo (&quot;======================================== Target set to: &quot; .. Target .. &quot;\n&quot;)
else
	send(&quot;order followers kill&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofk (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Haste</name>
                                        <script>if matches[2] then send(&quot;order followers cast 'Haste' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Haste' self&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofh(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Detect Invis</name>
                                        <script>--^ofdi (.*)$
if matches[2] then send(&quot;order followers cast 'Detect Invis' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Detect Invis' self&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofdi (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Cast</name>
                                        <script>if matches[2] then send(&quot;order followers cast '&quot;..matches[2]..&quot;' Drev&quot;)
else
	send(&quot;order followers cast '&quot;..matches[2]..&quot;' self&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofc(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Power Word Blind</name>
                                        <script>send(&quot;of cast 'power word blind' &quot;..matches[2])</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pwb (.*)$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Improved Invis</name>
                                        <script>--^ofdi (.*)$
if matches[2] then send(&quot;order followers cast 'improved Invis' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Improved Invis' &quot;..myName)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ofii(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers Fireball</name>
                                        <script>--^f(\s([\w\.]+))?$
if matches[2] then send(&quot;order followers cast 'Fireball' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Fireball' &quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fb(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Order Followers cast Electrical Execution</name>
                                        <script>--^f(\s([\w\.]+))?$
if matches[2] then send(&quot;order followers cast 'Electrical Execution' &quot; .. matches[2])
else
	send(&quot;order followers cast 'Electrical Execution' &quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ee(\s([\w\.]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>SummonerSpells</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>1st Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Detect Magic</name>
                                            <script>--^ct(\s([\w\.]+))?$
mySpell = &quot;Detect Magic&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^detm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Minor Creation</name>
                                            <script>if matches[2] then send(&quot;cast 'minor creation' &quot; .. matches[2])
else
	send(&quot;cast 'minor creation'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^mc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Preserve</name>
                                            <script>mySpell = &quot;Preserve&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^pres(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Protection from Undead</name>
                                            <script>--^ct(\s([\w\.]+))?$
mySpell = &quot;Protection from Undead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^protu(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Slashing Darkness</name>
                                            <script>mySpell = &quot;Slashing Darkness&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sd(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>2nd Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Chill Touch</name>
                                            <script>--^ct(\s([\w\.]+))?$
mySpell = &quot;Chill Touch&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ct(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Protection from Living</name>
                                            <script>--^vt(\s([\w\.]+))?$
mySpell = &quot;Protection from Living&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^protl(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Protection from Cold</name>
                                            <script>--^protc(\s([\w\.]+))?$
mySpell = &quot;Protection from Cold&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^protc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Sleep</name>
                                            <script>--^sleep(\s([\w\.]+))?$
mySpell = &quot;Sleep&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sleep(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Vampiric Touch</name>
                                            <script>--^vt(\s([\w\.]+))?$
mySpell = &quot;Vampiric Touch&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^vt(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>3rd Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Animate Dead</name>
                                            <script>--^emb(\s([\w\.]+))?$
mySpell = &quot;Animate Dead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ad(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Dispel Magic</name>
                                            <script>--^dm(\s([\w\.]+))?$
mySpell = &quot;Dispel Magic&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end	</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^dm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Embalm</name>
                                            <script>--^emb(\s([\w\.]+))?$
mySpell = &quot;Embalm&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^emb(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Sense Follower</name>
                                            <script>--^sense(\s([\w\.]+))?$
mySpell = &quot;Sense Follower&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end	</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^sense(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>4th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Life Leech</name>
                                            <script>--^ll(\s([\w\.]+))?$
mySpell = &quot;Life Leech&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^li(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Strength</name>
                                            <script>--^str(\s([\w\.]+))?$
mySpell = &quot;Strength&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^str(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Unmaking</name>
                                            <script>--^unmake(\s([\w\.]+))?$
mySpell = &quot;Unmaking&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^unmake(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Wither</name>
                                            <script>--^wi(\s([\w\.]+))?$
mySpell = &quot;Wither&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^wi(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>5th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Coldshield</name>
                                            <script>--^colds(\s([\w\.]+))?$
mySpell = &quot;Coldshield&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cs(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Fireshield</name>
                                            <script>--^fires(\s([\w\.]+))?$
mySpell = &quot;Fireshield&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^fires(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Heal Undead</name>
                                            <script>--^hu(\s([\w\.]+))?$
mySpell = &quot;Heal Undead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^hu(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Levitate</name>
                                            <script>--^lev(\s([\w\.]+))?$
mySpell = &quot;Levitate&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^lev(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Raise Spectre</name>
                                            <script>--^rs(\s([\w\.]+))?$
mySpell = &quot;Raise Spectre&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^rs(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Teleport</name>
                                            <script>--^tel(\s([\w\.]+))?$
mySpell = &quot;Teleport&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^tel(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Concealment</name>
                                            <script>--^conc(\s([\w\.]+))?$
mySpell = &quot;Concealment&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' &quot;..myName)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^conc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>6th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Vitalize Undead</name>
                                            <script>--^vu(\s([\w\.]+))?$
mySpell = &quot;Vitalize Undead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^vu(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Enervation</name>
                                            <script>--^en(\s([\w\.]+))?$
mySpell = &quot;Enervation&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^en(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Cone of Cold</name>
                                            <script>--^ct(\s([\w\.]+))?$
mySpell = &quot;Cone of Cold&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cc(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>7th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Knock</name>
                                            <script>--^knock(\s([\w\.]+))?$
mySpell = &quot;Knock&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^knock(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Protect Undead</name>
                                            <script>--^pu(\s([\w\.]+))?$
mySpell = &quot;Protect Undead&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^pu(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Raise Wraith</name>
                                            <script>--^rw(\s([\w\.]+))?$
mySpell = &quot;Raise Wraith&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^rw(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>8th Circle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Detect Invisibility</name>
                                            <script>--^di(\s([\w\.]+))?$
mySpell = &quot;Detect Invisibility&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^di(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Improved Invisibility</name>
                                            <script>--^invis(\s([\w\.]+))?$
mySpell = &quot;Improved Invisibility&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^invis(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Negative Concussion Blast</name>
                                            <script>--^ncb(\s([\w\.]+))?$
mySpell = &quot;Negative Concussion Blast&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ncb(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Haste</name>
                                            <script>--^has(\s([\w\.]+))?$
mySpell = &quot;Haste&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^has(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>9thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Energy Drain</name>
                                            <script>--^ncb(\s([\w\.]+))?$
mySpell = &quot;Energy Drain&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ed(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>10thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Raise Lich</name>
                                            <script>--^rw(\s([\w\.]+))?$
mySpell = &quot;Raise Lich&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' corpse&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^rl(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                </AliasGroup>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Slash Casting</name>
                                    <script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(Summoner, matches[2], matches[3])</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^\/(\w+)(\s([\w\.]+))?$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>SpellUp</name>
                                    <script>CheckSpells = {&quot;protection from undead&quot;, &quot;protection from cold&quot;, &quot;protection from living&quot;, &quot;sense follower&quot;, &quot;strength&quot;, &quot;levitate&quot;, &quot;coldshield&quot;, &quot;stone skin&quot;, &quot;detect invisibility&quot;, &quot;haste&quot;, &quot;invisibility&quot;}
CheckSpellsAlias = {&quot;protu&quot;, &quot;protc&quot;, &quot;protl&quot;, &quot;sense&quot;, &quot;str&quot;, &quot;lev&quot;, &quot;cs&quot;, &quot;pu&quot;, &quot;di&quot;, &quot;has&quot;, &quot;invis&quot;}


send(&quot;score&quot;)
--- Loop through active to find missing spells
cecho(&quot;\n&lt;cyan&gt;&lt;=================================== Spell Up Activated\n&quot;)

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v..&quot; is active\n&quot;)
	else
		-- cecho(&quot;&lt;cyan&gt;&lt;===casting &quot;..v&quot;\n&quot;)
		expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)], false)
	end
end

send(&quot;score&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^su$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Rest Mem Med</name>
                                    <script>send(&quot;exp;rest;mem;med;blood&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^zz$</regex>
                                </Alias>
                            </AliasGroup>
                        </AliasGroup>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>Priests</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Druid</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>DruidSpells</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>1stCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Barkskin</name>
                                            <script>if matches[2] then send(&quot;cast 'barkskin' &quot; .. matches[2])
else
	send(&quot;cast 'barkskin' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^bark(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Fortitude</name>
                                            <script>if matches[2] then send(&quot;cast 'fortitude' &quot; .. matches[2])
else
	send(&quot;cast 'fortitude' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^fort(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Pulchritude</name>
                                            <script>if matches[2] then send(&quot;cast 'pulchritude' &quot; .. matches[2])
else
	send(&quot;cast 'pulchritude' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^pul(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Animal Friendship</name>
                                            <script>if matches[2] then send(&quot;cast 'animal friendship' &quot; .. matches[2])
else
	send(&quot;cast 'animal friendship'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^af(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>2ndCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Aid</name>
                                            <script>if matches[2] then send(&quot;cast 'aid' &quot; .. matches[2])
else
	send(&quot;cast 'aid'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^aid(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Disease</name>
                                            <script>if matches[2] then send(&quot;cast 'disease' &quot; .. matches[2])
else
	send(&quot;cast 'disease'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^dis(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Sticks To Snakes</name>
                                            <script>if matches[2] then send(&quot;cast 'sticks to snakes' &quot; .. matches[2])
else
	send(&quot;cast 'sticks to snakes'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ss(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>3rdCircle</name>
                                        <script>send(&quot;cast 'flame blade'&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fblade$</regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>FaerieFire</name>
                                            <script>if matches[2] then send(&quot;cast 'faerie fire' &quot; .. matches[2])
else
	send(&quot;cast 'faerie fire'&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^ff(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Faerie Fog</name>
                                            <script>send(&quot;cast 'faerie fog'&quot;)</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^fog$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Flame Blade</name>
                                            <script>send(&quot;cast 'flame blade'&quot;)</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^blade$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>ProtectionFromAnimals</name>
                                            <script>if matches[2] then send(&quot;cast 'protection from animals' &quot; .. matches[2])
else
	send(&quot;cast 'protection from animals' me&quot;)
end
</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^prota(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>4thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Create Spring</name>
                                            <script>if matches[2] then send(&quot;cast 'create spring' &quot; .. matches[2])
else
	send(&quot;cast 'create spring'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cs(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Lightning Bolt</name>
                                            <script>if matches[2] then send(&quot;cast 'lightning bolt' &quot; .. matches[2])
else
	send(&quot;cast 'lightning bolt'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^lb(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Poison</name>
                                            <script>if matches[2] then send(&quot;cast 'poison' &quot; .. matches[2])
else
	send(&quot;cast 'poison'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^po(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Serendipity</name>
                                            <script>if matches[2] then send(&quot;cast 'serendipity' &quot; .. matches[2])
else
	send(&quot;cast 'serendipity'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^luck$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>5thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Earthquake</name>
                                            <script>if matches[2] then send(&quot;cast 'earthquake' &quot; .. matches[2])
else
	send(&quot;cast 'earthquake'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^qq(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Natures Touch</name>
                                            <script>if matches[2] then send(&quot;cast 'natures touch' &quot; .. matches[2])
else
	send(&quot;cast 'natures touch' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^nt(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Tranquility</name>
                                            <script>if matches[2] then send(&quot;cast 'tranquility' &quot; .. matches[2])
else
	send(&quot;cast 'tranquility'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^tr(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>6thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Earthen Maul</name>
                                            <script>if matches[2] then send(&quot;cast 'earthen maul' &quot;..matches[2])
else
	send(&quot;cast 'earthen maul'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^em(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Endurance</name>
                                            <script>if matches[2] then send(&quot;cast 'endurance' &quot;..matches[2])
else
	send(&quot;cast 'endurance'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^end(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Regeneration</name>
                                            <script>if matches[2] then send(&quot;cast 'regeneration' &quot;..matches[2])
else
	send(&quot;cast 'regeneration' me&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^reg(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>7thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Call Lightning - Storm Druid</name>
                                            <script>if matches[2] then send(&quot;cast 'call lightning' &quot;..matches[2])
else
	send(&quot;cast 'call lightning'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cl(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Cyclone</name>
                                            <script>if matches[2] then send(&quot;cast 'cyclone' &quot; .. matches[2])
else
	send(&quot;cast 'cyclone'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^cy(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Dispel Magic</name>
                                            <script>if matches[2] then send(&quot;cast 'dispel magic' &quot;..matches[2])
else
	send(&quot;cast 'dispel magic'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^dm(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Earth Spike - Storm Druid</name>
                                            <script>if matches[2] then send(&quot;cast 'earth spike' &quot;..matches[2])
else
	send(&quot;cast 'earth spike'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^es(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Mielikki Vitality</name>
                                            <script>if matches[2] then send(&quot;cast 'Mielikki Vitality' &quot; .. matches[2])
else
	send(&quot;cast 'Mielikki Vitality'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^mv(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>8thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Animal Vision</name>
                                            <script>if matches[2] then send(&quot;cast 'animal vision' &quot; .. matches[2])
else
	send(&quot;cast 'animal vision'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^av(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Pass Without Trace</name>
                                            <script>if matches[2] then send(&quot;cast 'pass without trace' &quot; .. matches[2])
else
	send(&quot;cast 'pass without trace'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^pwt(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Acid Stream - Storm Druid</name>
                                            <script>if matches[2] then send(&quot;cast 'acid stream' &quot;..matches[2])
else
	send(&quot;cast 'acid stream'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^as(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>9thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Sunray</name>
                                            <script>if matches[2] then send(&quot;cast 'sunray' &quot; .. matches[2])
else
	send(&quot;cast 'sunray'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^f(\s([\w\.]+))?$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Storm Shield - Storm Druid</name>
                                            <script>if matches[2] then send(&quot;cast 'storm shield' &quot; .. matches[2])
else
	send(&quot;cast 'storm shield'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^storm$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Firestorm - Storm Druid</name>
                                            <script>if matches[2] then send(&quot;cast 'firestorm' &quot; .. matches[2])
else
	send(&quot;cast 'firestorm'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^fs(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>10thCircle</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Moonwell</name>
                                            <script>if matches[2] then send(&quot;cast 'moonwell' &quot; .. matches[2])
else
	send(&quot;cast 'moonwell'&quot;)
end</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^well(\s([\w\.]+))?$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <AliasGroup isActive="yes" isFolder="yes">
                                        <name>SpellUpDruid</name>
                                        <script></script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex></regex>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Druid Spell Up Self</name>
                                            <script>CheckSpells = {&quot;aid&quot;, &quot;barkskin&quot;, &quot;fortitude&quot;, &quot;pulchritude&quot;, &quot;animal vision&quot;, &quot;pass without trace&quot;, &quot;serendipity&quot;, &quot;endurance&quot;, &quot;regeneration&quot;, &quot;protection from animals&quot;, &quot;mielikki vitality&quot;, &quot;storm shield&quot;}
CheckSpellsAlias = {&quot;aid&quot;, &quot;bark&quot;, &quot;fort&quot;, &quot;pul&quot;, &quot;av&quot;, &quot;pwt&quot;, &quot;luck&quot;, &quot;end&quot;, &quot;reg&quot;, &quot;prota&quot;, &quot;mv&quot;, &quot;storm&quot;}

--- Loop through active to find missing spells
cecho(&quot;&lt;cyan&gt;&lt;=================================== Spell Up Activated\n&quot;)

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v..&quot; is active\n&quot;)
	else 
		-- cecho(&quot;&lt;cyan&gt;&lt;===casting &quot;..v&quot;\n&quot;)
		expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)], false)
	end
end

send(&quot;score&quot;)</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^su$</regex>
                                        </Alias>
                                        <Alias isActive="yes" isFolder="no">
                                            <name>Druid Spell Up Others</name>
                                            <script>CheckSpells = {&quot;aid&quot;, &quot;barkskin&quot;, &quot;fortitude&quot;, &quot;pulchritude&quot;, &quot;animal vision&quot;, &quot;pass without trace&quot;, &quot;serendipity&quot;, &quot;endurance&quot;, &quot;regeneration&quot;, &quot;protection from animals&quot;, &quot;mielikki vitality&quot;, &quot;storm shield&quot;}
CheckSpellsAlias = {&quot;aid&quot;, &quot;bark&quot;, &quot;fort&quot;, &quot;pul&quot;, &quot;av&quot;, &quot;pwt&quot;, &quot;luck&quot;, &quot;end&quot;, &quot;reg&quot;, &quot;prota&quot;, &quot;mv&quot;, &quot;storm&quot;}
local spupTarget = matches[2]
--- Loop through active to find missing spells
cecho(&quot;&lt;cyan&gt;&lt;=================================== Spell Up Activated\n&quot;)

for i,v in ipairs(CheckSpells) do
	-- cecho(&quot;&lt;cyan&gt;&lt;===casting &quot;..v&quot;\n&quot;)
	spupSpell = CheckSpellsAlias[table.index_of(CheckSpells, v)]..&quot; &quot;..spupTarget
--	echo(spupSpell..&quot; &quot;..spupTarget..&quot;\n&quot;)
	expandAlias(spupSpell, false)
	--expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)].. spupTarget, false)
end

send(&quot;score&quot;)</script>
                                            <command></command>
                                            <packageName></packageName>
                                            <regex>^spup (\w+)$</regex>
                                        </Alias>
                                    </AliasGroup>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Commune</name>
                                        <script>clearWindow(&quot;Left1&quot;)
send(&quot;commune;exp;blood&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^mem|pray|zz$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Slash Cast - Table Casting</name>
                                        <script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(druid, matches[2], matches[3])</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^\/(\w+)(\s([\w\.]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Cleric</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>1stCircle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Cause Light</name>
                                        <script>if matches[2] then send(&quot;cast 'cause light' &quot; .. matches[2])
else
	send(&quot;cast 'cause light'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^cal(?: (.+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>2ndCircle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Cause Serious</name>
                                        <script>if matches[2] then send(&quot;cast 'cause serious' &quot; .. matches[2])
else
	send(&quot;cast 'cause serious'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^cas(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Blindness</name>
                                        <script>if matches[2] then send(&quot;cast 'blind' &quot; .. matches[2])
else
	send(&quot;cast 'blind'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^cb(?: (.+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>3rdCircle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Cause Critical</name>
                                        <script>if matches[2] then send(&quot;cast 'cause critical' &quot; .. matches[2])
else
	send(&quot;cast 'cause critical'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^cac(?: (.+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="no" isFolder="yes">
                                    <name>4thCircle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                </AliasGroup>
                                <AliasGroup isActive="no" isFolder="yes">
                                    <name>5thCircle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>6thCircle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Flame Strike</name>
                                        <script>if matches[2] then send(&quot;cast 'flame strike' &quot; .. matches[2])
else
	send(&quot;cast 'flame strike'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fs(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Harm</name>
                                        <script>if matches[2] then send(&quot;cast 'harm' &quot; .. matches[2])
else
	send(&quot;cast 'harm'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^hh(?: (.+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>7thCircle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Full Heal</name>
                                        <script>if matches[2] then send(&quot;cast 'full heal' &quot; .. matches[2])
else
	send(&quot;cast 'full heal'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fh(?: (.+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="no" isFolder="yes">
                                    <name>8thCircle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                </AliasGroup>
                                <AliasGroup isActive="no" isFolder="yes">
                                    <name>9thCircle</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                </AliasGroup>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Word</name>
                                    <script>send(&quot;cast 'word of recall'&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^qq$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Pray</name>
                                    <script>send(&quot;exp;rest;pray;med&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^zz$</regex>
                                </Alias>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Shaman</name>
                                <script>--[[
AnimalTotem = bear
ElementalTotem = obsidian
SpiritualTotem = quartz
]]--

--[[Elemental Spells
Ice Missile
Flameburst
Scalding Blast
Fire Ward
Cold Ward
Scorching Touch
Molten Spray
Earthen Grasp
Scathing Wind
Corrosive Blast
Arieks Shattering Iceball
Earthen Rain
Etherportal
Gaseous Cloud
Greater Earthen Grasp
]]--

--[[Animal Spells
Wolfspeed
Pythonsting
Snailspeed
Molevision
Pantherspeed
Mousestrength
Summon Beast
Hawkvision
Bearstrength
Shrewtamness
Lionrage
Elephantstrength
Ravenflight
Greater Pythonsting
Greater Ravenflight
]]--


--[[Spiritual Spells
Spirit Armor
Transfer Wellness
Lesser Mending
Reveal Spirit Essence
Purify Spirit
Mending
Soul Disturbance
Malison
Sense Spirit
Protection from Animals
Wellness
Greater Mending
Spirit Anguish
Spirit Sight
Greater Soul Disturbance
Spirit Ward
Spirit Jump
Reveal True Form
Greater Spirit Ward
Greater Spirit Sight
Greater Spirit Anguish
]]--

--[[
Alias Name:
Pattern: ^sa(?: (.+))?$
Code:
mySpell = &quot;Spirit Armor&quot;
if myTotem == SpiritualTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end
]]--</script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <Alias isActive="yes" isFolder="no">
                                    <name>RestMemMed</name>
                                    <script>send (&quot;rest;mem;med;exp;blood&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^zz$</regex>
                                </Alias>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Animal Sphere</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>WolfSpeed</name>
                                        <script>mySpell = &quot;Wolfspeed&quot;
if myTotem == AnimalTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..AnimalTotem)
	myTotem = AnimalTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end	</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^wolf(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>PantherSpeed</name>
                                        <script>mySpell = &quot;Pantherspeed&quot;
if myTotem == AnimalTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..AnimalTotem)
	myTotem = AnimalTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end	</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^panther(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SummonBeast</name>
                                        <script>mySpell = &quot;Summon Beast&quot;
if myTotem == AnimalTotem then
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..AnimalTotem)
	myTotem = AnimalTotem
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end	</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^beast(?: (.+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Elemental Sphere</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>FlameBurst</name>
                                        <script>mySpell = &quot;Flameburst&quot;
if myTotem == ElementalTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fb(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>ScaldingBlast</name>
                                        <script>mySpell = &quot;Scalding blast&quot;
if myTotem == ElementalTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^sb(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>ScorchingTouch</name>
                                        <script>mySpell = &quot;Scorching touch&quot;
if myTotem == ElementalTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^sct(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>MoltenSpray</name>
                                        <script>mySpell = &quot;Molten spray&quot;
if myTotem == ElementalTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ms(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>ColdWard</name>
                                        <script>mySpell = &quot;Cold Ward&quot;
if myTotem == ElementalTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^cw(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>FireWard</name>
                                        <script>mySpell = &quot;Fire Ward&quot;
if myTotem == ElementalTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fw(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>ElementalAffinity</name>
                                        <script>mySpell = &quot;Elemental Affinity&quot;
if myTotem == ElementalTotem then
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..ElementalTotem)
	myTotem = ElementalTotem
	send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ea(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>IceMissile</name>
                                        <script>mySpell = &quot;Ice Missile&quot;
if myTotem == ElementalTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;'&quot;)
	end
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^im(?: (.+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>Spiritual Sphere</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SpiritArmor</name>
                                        <script>mySpell = &quot;Spirit Armor&quot;
if myTotem == SpiritualTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end	</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^sa(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Mending</name>
                                        <script>mySpell = &quot;Mending&quot;
if myTotem == SpiritualTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^cc(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>test</name>
                                        <script>--Alias Name:SpiritArmor
--Pattern: ^sa(?: (.+))?$

--Code--
mySpell = &quot;Spirit Armor&quot;
if myTotem == SpiritualTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^testsa(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>GreaterMending</name>
                                        <script>mySpell = &quot;Greater Mending&quot;
if myTotem == SpiritualTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ch(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SpiritWard</name>
                                        <script>mySpell = &quot;Spirit Ward&quot;
if myTotem == SpiritualTotem then
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
else
	send(&quot;rem &quot;..myTotem)
	send(&quot;hold &quot;..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
		else
			send(&quot;cast '&quot;..mySpell..&quot;' me&quot;)
	end
end	</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ward(?: (.+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                            </AliasGroup>
                        </AliasGroup>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>Rogues</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Mercenary</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Headbutt</name>
                                    <script>--^hb(\s([\w\.]+))?$

if matches[2] then send(&quot;Headbutt &quot;.. matches[2])
	else
		send(&quot;Headbutt&quot;)
end</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^hb(\s([\w\.]+))?$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Backstab</name>
                                    <script>--^b(\s([\w\.]+))?$

Target = string.trim(matches[2])
send (&quot;backstab &quot;..Target)
cecho (&quot;\n&lt;cyan&gt;&lt;==================================================================== Target set to: &quot;..Target..&quot;\n&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^b(\s([\w\.]+))?$</regex>
                                </Alias>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Bard</name>
                                <script>--Bard skills
--=========================================
--The following is a list of all skills and spells available of the Bard class.
--
--==Skills==
--; 1st level: 	 1h piercing, Awareness, Backstab, Bandage, Carve, Climb, Dodge, Double Attack, Fishing, Hide, Meditate, Mine, Mount, Parry, Quick Chant, Retreat, Scribe, Shield Block, Sneak, Swim
--; 10th level:  Sorcerous Spell Knowledge, Appraise, Lore
--; 15th level:  Listen
--
--==Instrument Skills==
--; 5th level:   Drums, Flute, Harp, Horn, Lyre, Mandolin
--
--==Spells==
--; 2nd circle:  Mirror Image
--; 3rd circle:  Magic Missile
--; 4th circle:  Burning Hands, Minor Creation
--; 5th circle:  Concealment
--; 6th circle:  Dispel Magic, Infravision, Lightning Bolt, Ray of Enfeeblement
--; 7th circle:  Dimension Door, Fireball, Slowness
--; 8th circle:  Bigbys Clenched Fist
--; 9th circle:  Feeblemind
--; 10th circle: Detect Invisibility 
--; 11th circle: Rope Trick
--; 12th circle: Enlarge, Sirens Song
--
--==Songs==
--; 6th level:   Song of Sleep
--; 16th level:  Song of Calming, Song of Discord, Song of Harmony
--; 21st level:  Song of Cowardice, Song of Forgetfulness,  Song of Protection
--; 26th level:  Song of Peace, Song of Dissonance
--; 31st level:  Song of Dragons, Song of Flight
--; 36th level:  Song of Harming, Song of Healing
--; 41st level:  Song of Storms
--; 46th level:  Song of Chaos, Song of Heroism, Song of Revelation
--; 51st level:  Song of Charming</script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <Alias isActive="yes" isFolder="no">
                                    <name>RestMemMed</name>
                                    <script>send (&quot;rem &quot;..myBag)
send (&quot;get all.book &quot;..myBag)
send (&quot;rest;mem;med;exp;blood&quot;)
</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^zz$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Stop Playing and Backstab</name>
                                    <script>send(&quot;play;rem flute;wield stiletto&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^stop$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Rem Weapon Play Sleep</name>
                                    <script>send(&quot;rem stiletto;hold flute;play sleep&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^go$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Make Book</name>
                                    <script>send(&quot;scribe mirror;scribe magic missile;scribe burning;scribe minor creation;scribe conceal;scribe dispel magic;scribe infravision;scribe lightning;scribe ray of enfeeb;scribe dimension;scribe fireball;scribe slowness&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^MakeBook$</regex>
                                </Alias>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>BardSkills</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Appraise Item</name>
                                        <script>send(&quot;appraise &quot; ..matches[2])</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ap(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Sneaky Strike</name>
                                        <script>if matches[2] then send(&quot;Strike &quot; .. matches[2])
else
	send(&quot;Strike&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ss(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Backstab</name>
                                        <script>--^b(\s([\w\.]+))?$

Target = string.trim(matches[2])
send (&quot;backstab &quot;..Target)
cecho (&quot;\n&lt;cyan&gt;&lt;==================================================================== Target set to: &quot;..Target..&quot;\n&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^bs(\s([\w\.]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>BardSpells</name>
                                    <script>--==Spells==
--; 2nd circle:  Mirror Image
--; 3rd circle:  Magic Missile
--; 4th circle:  Burning Hands, Minor Creation
--; 5th circle:  Concealment
--; 6th circle:  Dispel Magic, Infravision, Lightning Bolt, Ray of Enfeeblement
--; 7th circle:  Dimension Door, Fireball, Slowness
--; 8th circle:  Bigbys Clenched Fist
--; 9th circle:  Feeblemind
--; 10th circle: Detect Invisibility 
--; 11th circle: Rope Trick
--; 12th circle: Enlarge, Sirens Song</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>MagicMissile</name>
                                        <script>if matches[2] then send(&quot;cast 'magic missile' &quot; .. matches[2])
else
	send(&quot;cast 'magic missile'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^mm(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>BurningHands</name>
                                        <script>if matches[2] then send(&quot;cast 'burning hands' &quot; .. matches[2])
else
	send(&quot;cast 'burning hands'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^bh(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>LightningBolt</name>
                                        <script>if matches[2] then send(&quot;cast 'lightning bolt' &quot; .. matches[2])
else
	send(&quot;cast 'lightning bolt'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^lb(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>RayOfEnfeeblement</name>
                                        <script>if matches[2] then send(&quot;cast 'ray of enfeeb' &quot; .. matches[2])
else
	send(&quot;cast 'ray of enfeeb'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ray(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>bigbys clenched fist</name>
                                        <script>if matches[2] then send(&quot;cast 'bigbys clenched fist' &quot; .. matches[2])
else
	send(&quot;cast 'bigbys clenched fist'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fist(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Mirror Images</name>
                                        <script>send(&quot;cast 'mirror image'&quot;)
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^mi$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Concealment</name>
                                        <script>if matches[2] then send(&quot;cast 'concealment' &quot; .. matches[2])
else
	send(&quot;cast 'concealment'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^conc(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Dimension Door</name>
                                        <script>if matches[2] then send(&quot;cast 'dimension door' &quot; .. matches[2])
else
	cecho(&quot;&lt;cyan&gt;Need Target for 'Dimension Door'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^dim(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Minor Creation</name>
                                        <script>if matches[2] then send(&quot;cast 'minor creat' &quot; .. matches[2])
else
	send(&quot;cast 'minor creat'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^mc(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Fist</name>
                                        <script>if matches[2] then send(&quot;cast 'bigby' &quot; .. matches[2])
else
	send(&quot;cast 'bigby'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^f(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Fireball</name>
                                        <script>if matches[2] then send(&quot;cast 'fireball' &quot; .. matches[2])
else
	send(&quot;cast 'fireball'&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^fb(?: (.+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Detect Invisibility</name>
                                        <script>--^di(\s([\w\.]+))?$
mySpell = &quot;Detect Invisibility&quot;

if matches[2] then send(&quot;cast '&quot;..mySpell..&quot;' &quot; .. matches[2])
	else
		send(&quot;cast '&quot;..mySpell..&quot;' self&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^di(\s([\w\.]+))?$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>New Alias Test</name>
                                        <script>if matches[5] then 
	send(&quot;cast 'magic missile' &quot; .. matches[3]..&quot; &quot;..matches[5])
elseif matches[3] then 
	send(&quot;cast 'magic missile' &quot; .. matches[3])
else
	send(&quot;cast 'magic missile'&quot;)
end

--[[
echo(&quot;\nmatches[1] : &quot;..matches[1])
echo(&quot;\nmatches[2] : &quot;..matches[2])
echo(&quot;\nmatches[3] : &quot;..matches[3])
echo(&quot;\nmatches[4] : &quot;..matches[4])
echo(&quot;\nmatches[5] : &quot;..matches[5])


--]]
</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^tt(\s([\w]+))?(\s([\w]+))?$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>BardSongs</name>
                                    <script>--Bard Songs
--6th level:      song of sleep (Flute)
--16th level:     song of calming (Harp)
--                song of discord (Flute}
--                song of harmony (Flute)
--21st level:     song of protection (Horn)
--               song of forgetfulness (Mandolin)
--                song of cowardice (Drums)
--26th level:     song of peace (Harp)
--                song of dissonance (Horn)
--31st level:     song of flight (Horn)
--                song of dragons (Horn)
--36th level:     song of healing (Lyre)
--                song of harming (Lyre)
--41st level:     song of storms (Drums)
--46th level:     song of heroism (Drums)
--                song of revelation (Mandolin)
--                song of chaos (Drums)
--51st level:     song of charming (Flute)

</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfSleep</name>
                                        <script>if myInstrument == &quot;flute&quot; then send(&quot;play sleep&quot;)
	mySong = &quot;sleep&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold flute&quot;)
	myInstrument = &quot;flute&quot;
	mySong = &quot;sleep&quot;
	send(&quot;play sleep&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^psleep|^ps$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfDiscord</name>
                                        <script>if myInstrument == &quot;flute&quot; then send(&quot;play discord&quot;)
	mySong = &quot;discord&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold flute&quot;)
	myInstrument = &quot;flute&quot;
	mySong = &quot;discord&quot;
	send(&quot;play discord&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pdisc$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfHarmony</name>
                                        <script>if myInstrument == &quot;flute&quot; then send(&quot;play harmony&quot;)
	mySong = &quot;harmony&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold flute&quot;)
	myInstrument = &quot;flute&quot;
	mySong = &quot;harmony&quot;
	send(&quot;play harmony&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pharmony$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfProtection</name>
                                        <script>if myInstrument == &quot;horn&quot; then send(&quot;play protection&quot;)
	mySong = &quot;protection&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold horn&quot;)
	myInstrument = &quot;horn&quot;
	mySong = &quot;protection&quot;
	send(&quot;play protection&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pprot$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfCalming</name>
                                        <script>if myInstrument == &quot;harp&quot; then send(&quot;play calming&quot;)
	mySong = &quot;calming&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold harp&quot;)
	myInstrument = &quot;harp&quot;
	mySong = &quot;calming&quot;
	send(&quot;play calming&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pcalm$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfForgetfulness</name>
                                        <script>if myInstrument == &quot;mandolin&quot; then send(&quot;play forgetfulness&quot;)
	mySong = &quot;forgetfulness&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold mandolin&quot;)
	myInstrument = &quot;mandolin&quot;
	mySong = &quot;forgetfulness&quot;
	send(&quot;play forgetfulness&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pforg$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongofCowardice</name>
                                        <script>if myInstrument == &quot;drum&quot; then send(&quot;play cowardice&quot;)
	mySong = &quot;cowardice&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold drum&quot;)
	myInstrument = &quot;drum&quot;
	mySong = &quot;cowardice&quot;
	send(&quot;play cowardice&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pcow$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfHealing</name>
                                        <script>if myInstrument == &quot;lyre&quot; then send(&quot;play healing&quot;)
	mySong = &quot;healing&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold lyre&quot;)
	myInstrument = &quot;lyre&quot;
	mySong = &quot;healing&quot;
	send(&quot;play healing&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pheal$|^ph$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfFlight</name>
                                        <script>if myInstrument == &quot;horn&quot; then send(&quot;play flight&quot;)
	mySong = &quot;flight&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold horn&quot;)
	myInstrument = &quot;horn&quot;
	mySong = &quot;flight&quot;
	send(&quot;play flight&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pfly$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfPeace</name>
                                        <script>if myInstrument == &quot;harp&quot; then send(&quot;play peace&quot;)
	mySong = &quot;peace&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold harp&quot;)
	myInstrument = &quot;harp&quot;
	mySong = &quot;peace&quot;
	send(&quot;play peace&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^ppeace$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfDissonance</name>
                                        <script>if myInstrument == &quot;horn&quot; then send(&quot;play dissonance&quot;)
	mySong = &quot;dissonance&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold horn&quot;)
	myInstrument = &quot;horn&quot;
	mySong = &quot;dissonance&quot;
	send(&quot;play dissonance&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pdisso$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfDragons</name>
                                        <script>if myInstrument == &quot;horn&quot; then send(&quot;play dragons&quot;)
	mySong = &quot;dragons&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold horn&quot;)
	myInstrument = &quot;horn&quot;
	mySong = &quot;dragons&quot;
	send(&quot;play dragons&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pdrag$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfHarming</name>
                                        <script>if myInstrument == &quot;lyre&quot; then send(&quot;play harming&quot;)
	mySong = &quot;harming&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold lyre&quot;)
	myInstrument = &quot;lyre&quot;
	mySong = &quot;harming&quot;
	send(&quot;play harming&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pharm$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfStorms</name>
                                        <script>if myInstrument == &quot;drum&quot; then send(&quot;play storms&quot;)
	mySong = &quot;storms&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold drum&quot;)
	myInstrument = &quot;drum&quot;
	mySong = &quot;storms&quot;
	send(&quot;play storms&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pstorm$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfHeroism</name>
                                        <script>if myInstrument == &quot;drum&quot; then send(&quot;play heroism&quot;)
	mySong = &quot;heroism&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold drum&quot;)
	myInstrument = &quot;drum&quot;
	mySong = &quot;heroism&quot;
	send(&quot;play heroism&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^phero$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfRevelation</name>
                                        <script>if myInstrument == &quot;mandolin&quot; then send(&quot;play revelation&quot;)
	mySong = &quot;revelation&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold mandolin&quot;)
	myInstrument = &quot;mandolin&quot;
	mySong = &quot;revelation&quot;
	send(&quot;play revelation&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^prev$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfChaos</name>
                                        <script>if myInstrument == &quot;drum&quot; then send(&quot;play chaos&quot;)
	mySong = &quot;chaos&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold drum&quot;)
	myInstrument = &quot;drum&quot;
	mySong = &quot;chaos&quot;
	send(&quot;play chaos&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pchaos$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>SongOfCharming</name>
                                        <script>if myInstrument == &quot;flute&quot; then send(&quot;play charming&quot;)
	mySong = &quot;charming&quot;
else
	send(&quot;rem &quot;..myInstrument)
	send(&quot;hold flute&quot;)
	myInstrument = &quot;flute&quot;
	mySong = &quot;charming&quot;
	send(&quot;play charming&quot;)
end</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^pcharm$</regex>
                                    </Alias>
                                </AliasGroup>
                                <AliasGroup isActive="yes" isFolder="yes">
                                    <name>BardRiffs</name>
                                    <script></script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex></regex>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Riff Protection</name>
                                        <script>send(&quot;Riff Protection&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^rp$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Riff Sleep</name>
                                        <script>send(&quot;Riff Sleep&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^rs$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Riff Healing</name>
                                        <script>send(&quot;Riff Healing&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^rh$</regex>
                                    </Alias>
                                    <Alias isActive="yes" isFolder="no">
                                        <name>Riff Dissonance</name>
                                        <script>send(&quot;Riff Dissonance&quot;)</script>
                                        <command></command>
                                        <packageName></packageName>
                                        <regex>^rdi$</regex>
                                    </Alias>
                                </AliasGroup>
                            </AliasGroup>
                            <AliasGroup isActive="no" isFolder="yes">
                                <name>Rogue</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Backstab</name>
                                    <script>Target = string.trim(matches[2])
send (&quot;backstab &quot;..Target)
cecho (&quot;\n&lt;cyan&gt;&lt;==================================================================== Target set to: &quot;..Target..&quot;\n&quot;)</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^b(\s([\w\.]+))?$</regex>
                                </Alias>
                            </AliasGroup>
                        </AliasGroup>
                    </AliasGroup>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>speedWalkRecorder</name>
                        <script></script>
                        <command></command>
                        <packageName>speedWalkRecorder</packageName>
                        <regex></regex>
                        <Alias isActive="no" isFolder="no">
                            <name>speedRecorder</name>
                            <script>if matches[1] ~= &quot;stopRecording&quot; then 
  table.insert(sw.speedDir, matches[1])
  send(matches[1])
else
  disableAlias(&quot;speedRecorder&quot;)
  sw.speedWalks[sw.currentRouteName] = table.concat(sw.speedDir, &quot;,&quot;)
  sw.speedDir = {}
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>.*</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>turn recorder on</name>
                            <script>sw = sw or {}
sw.speedWalks = sw.speedWalks or {}
sw.currentRouteName = matches[2]
sw.speedDir = {}
remember(&quot;sw&quot;)
enableAlias(&quot;speedRecorder&quot;)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^speedrecord (\w+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>speedwalk</name>
                            <script>if sw.speedWalks[matches[2]] then
  local walkString = sw.speedWalks[matches[2]]
  speedwalk(walkString, false, 0.4)
else
  echo(&quot;\nI have no idea how to get to&quot; .. matches[2] .. &quot;!!!\n&quot;)
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^swalk (\w+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>reverse walk</name>
                            <script>if sw.speedWalks[matches[2]] then
  local walkString = sw.speedWalks[matches[2]]
  speedwalk(walkString, true, 0.4)
else
  echo(&quot;\nI have no idea how to get away from&quot; .. matches[2] .. &quot;!!!\n&quot;)
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^rwalk (\w+)$</regex>
                        </Alias>
                    </AliasGroup>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>Paths</name>
                        <script></script>
                        <command></command>
                        <packageName></packageName>
                        <regex></regex>
                        <Alias isActive="yes" isFolder="no">
                            <name>Finn to Cottage</name>
                            <script></script>
                            <command>n;u;e;u;u;e;d;s;n;e;n;e;n;w;n;s;n</command>
                            <packageName></packageName>
                            <regex>^finn$</regex>
                        </Alias>
                    </AliasGroup>
                    <AliasGroup isActive="no" isFolder="yes">
                        <name>Targetting</name>
                        <script></script>
                        <command></command>
                        <packageName></packageName>
                        <regex></regex>
                        <Alias isActive="yes" isFolder="no">
                            <name>Toggle Targets</name>
                            <script>myTarget = Evil_Races[target_select]
send(&quot;Target sent to &quot;..myTarget)
if target_select &gt; #Evil_Races then
	target_select = 1
else
	target_select = target_select+1
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^myTarget_Toggle$</regex>
                        </Alias>
                    </AliasGroup>
                </AliasGroup>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>EQdatabase</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>findItem</name>
                        <script>local mydb = db:get_database(&quot;durisdata&quot;)

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[2]))

for _, row in ipairs(results) do
  row.STATS = row.STATS or &quot;N/A&quot;	
  cecho(&quot;\n &lt;DodgerBlue&gt;Item:  &lt;khaki&gt;&quot; .. row.NAME ..&quot;\n &lt;DodgerBlue&gt;Stats: &lt;khaki&gt;&quot; .. row.STATS .. &quot;\n &lt;DodgerBlue&gt;Zone:  &lt;khaki&gt;&quot; .. row.LOCATION ..&quot;\n &lt;DodgerBlue&gt;Slot:  &lt;khaki&gt;&quot; .. row.SLOT ..&quot;\n &lt;DodgerBlue&gt;IVal: &lt;khaki&gt;&quot; .. row.ITEMVALUE)
end

--display(results)

if table.contains(Proc_Items, matches[2]) then 
   cecho(&quot;\n&lt;khaki&gt;Item has a &lt;DodgerBlue&gt;PROC&lt;khaki&gt;!\n&quot;)
end
</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^dbt (.*)$</regex>
                    </Alias>
                    <Alias isActive="no" isFolder="no">
                        <name>Create Database</name>
                        <script>local mydb = db:create(&quot;duris_data&quot;,
        {
                eqstats = {
                        vnum = 0,
                        type = &quot;&quot;,
                        slot = &quot;&quot;,
                        name = &quot;&quot;,
                        location = &quot;&quot;,
                        stats = &quot;&quot;
                }       })

echo(&quot;New Duris Equipment Stats Database created!&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^createDB$</regex>
                    </Alias>
                    <Alias isActive="no" isFolder="no">
                        <name>Add to DB</name>
                        <script>mydb = db:get_database(&quot;duris_data&quot;)

db:add(mydb.eqstats,
	{vnum=16336, type= &quot;WEAPON&quot;, slot= &quot;Wield&quot;, name= &quot;a bloody troll claw&quot;, location= &quot;A Dark and Twisted Wood&quot;, stats= &quot;5 HP,  2 Hitroll,  1D4  Damage,  -2 Wt, NOIDENTIFY&quot;},
	{vnum=16330, type= &quot;CONTAINER&quot;, slot= &quot;Waist&quot;, name= &quot;a blue canvas belt&quot;, location= &quot;A Dark and Twisted Wood&quot;, stats= &quot;1 Wt, Holds: 5&quot;},
	{vnum=16326, type= &quot;ARMOR&quot;, slot= &quot;About&quot;, name= &quot;a blue canvas cloak&quot;, location= &quot;A Dark and Twisted Wood&quot;, stats= &quot;-5 AC&quot;})

echo(&quot;3 items added to table eqstats in the duris_data database&quot;)
</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^addDB$</regex>
                    </Alias>
                    <Alias isActive="no" isFolder="no">
                        <name>Show Database</name>
                        <script>mydb = db:get_database(&quot;duris_data&quot;)


local results = db:fetch(mydb.eqstats,nil,{mydb.eqstats.location, mydb.eqstats.name}, true)
for k,v in pairs(results) do
	display(v.name .. &quot; : &quot; .. v.location .. &quot; : &quot; .. v.slot .. &quot; : &quot; .. v.stats)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^showDB$</regex>
                    </Alias>
                    <Alias isActive="no" isFolder="no">
                        <name>test db</name>
                        <script>db:create(&quot;duris&quot;, {stats={&quot;Vnum&quot;, &quot;TYPE&quot;, &quot;SLOT&quot;, &quot;NAME&quot;, &quot;LOCATION&quot;, &quot;STATS&quot;, &quot;iLVL&quot;}})</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^makedb$</regex>
                    </Alias>
                </AliasGroup>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>Ship Commands</name>
                    <script>--[[
Ship commands
=========================================
Ship Commands
=========================================
== Commands at a Dock ==
* List Hull
* List Weapon
* List Equipment
* List Cargo
* Summon Ship
* Buy hull &lt;number&gt; {ANSI Name}
* Buy Weapon &lt;number&gt; &lt;fore/rear/port/starboard&gt;
* Buy Equipment &lt;number&gt;
* Buy Cargo &lt;number of crates&gt;
* Buy Contrband &lt;number of crates&gt;
* Sell &lt;slot number&gt;
* Sell Cargo
* Sell Contraband
* Repair all
* Repair &lt;armor/internal&gt; &lt;fore/rear/port/starboard/all&gt;
* Repair sail
* Repair weapon &lt;weapon number/all&gt;
* Reload &lt;weapon number/all&gt;
* Enter *.ship -or- Enter &lt;owner name&gt; -or- Enter *.&lt;shiptype&gt;
--
--
== Commands at a Ship's Bridge ==
--
* Look Ship/Status 
* Look Crew 
* Look Cargo 
* Look Weaponspec 
* Look Contacts 
* Look Tactical [&lt;x&gt; &lt;y&gt;] 
* Scan [&lt;id&gt;]
* Order Undock 
* Order Maneuver &lt;N/E/S/W&gt; 
* Order Heading &lt;N/E/S/W/NW/NE/SW/SE/heading&gt; 
* Order Speed &lt;speed&gt;: 
* Order Sail &lt;N/E/S/W/heading/off&gt; &lt;distance&gt;: 
* Order Anchor
* Order Jettison cargo/contraband [&lt;number of crates&gt;] 
* Order Salvage [&lt;number of crates&gt;] 
* Order Fly/Land 
* Order Signal &lt;id&gt; &lt;message&gt; 
* Get Coins/Money
* Disembark (only from the edge of a ship for large ships)
--
--
== Combat Commands ==
--
* Lock &lt;id&gt;/off 
* Look Sight/Weapon &lt;weapon number&gt; 
* Fire &lt;weapon number/fore/rear/port/starboard&gt; 
* Order Ram [off]
--]]
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>Order Maneuver</name>
                        <script>send(&quot;Order Maneuver &quot; ..matches[2])</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^om(?: (.+))?$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>Toggle Ship Keys</name>
                        <script>disableKey(&quot;WalkKeys&quot;)
enableKey(&quot;ShipKeys&quot;)
echo(&quot;Ship Keys Active&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>shipk</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>Order Undock</name>
                        <script>send(&quot;Order undock&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^ou$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>Look Contacts</name>
                        <script>send(&quot;Look Contacts&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^lc$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>Look Tactical</name>
                        <script>--Look Tactical [&lt;x&gt; &lt;y&gt;]
local myX = matches[2]
local myY = matches[3]
send(&quot;Look Tactical &quot; ..myX..&quot; &quot; ..myY)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^lt (\d+) (\d+)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>Look Weaponspec</name>
                        <script>--Look Weaponspec

send(&quot;Look Weaponspec&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^lw$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>Order Speed</name>
                        <script>send(&quot;Order speed &quot;..matches[2])</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^os(?: (.+))?$</regex>
                    </Alias>
                </AliasGroup>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>Misc</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>`echo</name>
                        <script></script>
                        <command></command>
                        <packageName>`echo</packageName>
                        <regex></regex>
                        <Alias isActive="yes" isFolder="no">
                            <name>`echo</name>
                            <script>local s = matches[2]

s = string.gsub(s, &quot;%$&quot;, &quot;\n&quot;)
feedTriggers(&quot;\n&quot; .. s .. &quot;\n&quot;)
echo(&quot;\n&quot;)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>`echo (.+)</regex>
                        </Alias>
                    </AliasGroup>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>run-lua-code-v4</name>
                        <script></script>
                        <command></command>
                        <packageName>run-lua-code-v4</packageName>
                        <regex></regex>
                        <Alias isActive="yes" isFolder="no">
                            <name>run lua code</name>
                            <script>local f,e = loadstring(&quot;return &quot;..matches[2])
if not f then
	f,e = assert(loadstring(matches[2]))
end

local r = f()
if r ~= nil then display(r) end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^lua (.*)$</regex>
                        </Alias>
                    </AliasGroup>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>TestJunk</name>
                        <script></script>
                        <command></command>
                        <packageName></packageName>
                        <regex></regex>
                        <Alias isActive="yes" isFolder="no">
                            <name>TopMap</name>
                            <script>echo(&quot;gw2_top_map&quot;, [[&lt;p style=&quot;font-size:8px&quot;&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;red&quot;&gt;This is the Top Map Container.&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] );</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^TopMap$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>BotMap</name>
                            <script>echo(&quot;gw2_bottom_map&quot;, [[&lt;p style=&quot;font-size:8px&quot;&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;blue&quot;&gt;This is the Bottom Map Container.&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] );</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^BotMap$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>GaugeTest</name>
                            <script>HEALTH(tonumber(matches[2]), tonumber(matches[3]))
-- MANA(0, 0)
-- ACTIONS(tonumber(matches[2]/2), tonumber(matches[3])/2)
</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^GaugeTest (\d+) (\d+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>HideChat</name>
                            <script>hideWindow(&quot;gw2_top_map&quot;)
showWindow(&quot;gw2_top_map&quot;)
echo(&quot;2 commands sent&quot;)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^HideChat$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>NewTest</name>
                            <script>function castSpell(a, t)
	if t then 
		echo (t)
	elseif a then
		echo (a)
	else
		for k, v in pairs(druid) do
         print(k , v)
   		end
	end
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^zxc</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>TestTableCasting</name>
                            <script>function castSpell(spell, target)
	if target then send(&quot;Cast &quot;..druid[spell]..&quot; &quot;..target)
	else send(&quot;Cast &quot;..druid[spell])
	end
end
--function castSpell(spell, target)
--	send(&quot;Cast &quot;..druid[spell]..&quot; &quot;..target)
--	end

spell=matches[2]
target=matches[3]

print(&quot;match2=&quot;..spell)
print(&quot;match3=&quot;..target)

castSpell(spell, target)
--send(&quot;Cast &quot;..druid[spell]..&quot; &quot;..matches[2])
</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^(cy)(?: (.+))?$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Loop through Active Spells</name>
                            <script>for k,v in pairs(myActiveSpells) do
  echo(k..&quot;   (&quot;..v..&quot;)\n&quot;) -- k contains the internal tables
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^sss$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>testName</name>
                            <script>
display(myName)
display(myTank)
display(myGroup)
display(rescueList)

addToSet(rescueList, &quot;Drella&quot;)
addToSet(rescueList, &quot;Ilshad&quot;)
addToSet(rescueList, &quot;Istria&quot;)

local key = &quot;Drella&quot;

if setContains(rescueList, key) then
	send(&quot;rescue &quot;..key)
end

display(setContains(rescueList, key))</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>testname</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>resetGUI</name>
                            <script>resetProfile() </script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^resetGUI$</regex>
                        </Alias>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>TestGui</name>
                            <script>-- Test aliases for the GUI</script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <Alias isActive="yes" isFolder="no">
                                <name>left</name>
                                <script>darkward.LeftSideLabel:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^left$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>left1</name>
                                <script>darkward.Left1:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^left1$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>left2</name>
                                <script>darkward.Left2:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^left2$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>left3</name>
                                <script>darkward.Left3:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^left3$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>right</name>
                                <script>darkward.RightBox:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^right$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>right1</name>
                                <script>darkward.Right1:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^right1$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>right2</name>
                                <script>darkward.Right2:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^right2$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>right3</name>
                                <script>darkward.Right3:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^right3$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>SetBorders</name>
                                <script>WindowWidth, WindowHeight = getMainWindowSize()

BorderLeft = (WindowWidth * .15)+5
BorderRight = (WindowWidth * .25)
BorderTop =  (WindowHeight * 0)
BorderBottom = (WindowHeight * .10)

setBorderLeft(BorderLeft)
setBorderRight(BorderRight)
setBorderTop(BorderTop)
setBorderBottom(BorderBottom)
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^fixgui$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>bottom</name>
                                <script>darkward.BottomBox:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^bottom$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>bottom1</name>
                                <script>darkward.Bottom1:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^bottom1$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>bottom2</name>
                                <script>darkward.Bottom2:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^bottom$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>bottom3</name>
                                <script>darkward.Bottom3:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^bottom3$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>bottom4</name>
                                <script>darkward.Bottom4:flash()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^bottom4$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>TestHP</name>
                                <script>local test=(150/100)*100
darkward.gauge1a:setValue(150,100)
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^testhp$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>TestGauges</name>
                                <script>hp = math.random(1,100)
ma = math.random(1,100)
mv = math.random(1,100)

darkward.gauge1a:setValue(hp,100)
darkward.gauge2a:setValue(ma,100)
darkward.gauge3a:setValue(mv,100)

darkward.gauge1b:setValue(100,100,&quot;&lt;left&gt;&quot;..hp..&quot;% Health&lt;/left&gt;&quot;)
darkward.gauge2b:setValue(100,100,&quot;&lt;left&gt;&quot;..ma..&quot;% Mana&lt;/left&gt;&quot;)
darkward.gauge3b:setValue(100,100,&quot;&lt;left&gt;&quot;..mv..&quot;% Moves&lt;/left&gt;&quot;)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^testg$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>HideWindow</name>
                                <script>print(matches[2])
local myWindow = matches[2]
print(&quot;myWindow = &quot;..myWindow) 

hideWindow(myWindow)
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^guihide(?: (.+))?$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>ShowWindow</name>
                                <script>print(matches[2])
local myWindow = matches[2]
print(&quot;myWindow = &quot;..myWindow) 

showWindow(darkward.myWindow)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^guishow(?: (.+))?$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>testp</name>
                                <script>cecho(&quot;Left2&quot;, &quot;2nd CIRCLE:\n	sticks to snakes\n4th CIRCLE:\n	lightning bolt\n5th CIRCLE:\n	earthquake\n6th CIRCLE:\n	earthen maul\n7th CIRCLE:\n	call lightning\n	cyclone\n	earth spike\n8th CIRCLE:\n	acid stream\n9th CIRCLE:\n	firestorm\n	sunray\n10th CIRCLE:\n	creeping doom\n	hurricane\n11th CIRCLE:\n	blood to stone\n	elemental swarm\n	spike growth\n12th CIRCLE:\n	nova\n&quot;)</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^testp$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>test tanking</name>
                                <script>-- Terse Combat Prompt

cecho(&quot;&lt;cyan&gt;&lt;=================================== &quot;..myName..&quot; is my name.\n&quot;)
cecho(&quot;&lt;cyan&gt;&lt;=================================== &quot;..matches[2]..&quot; is x.\n&quot;)
cecho(&quot;&lt;cyan&gt;&lt;=================================== &quot;..myTank[x]..&quot; is mytank[x].\n&quot;)
local x = matches[2]

if table.contains(myTank, x) then
	send(&quot;glance &quot;..x)
	else 
		cecho(&quot;&lt;cyan&gt;&lt;=================================== &quot;..myTank..&quot; is TANKING&quot;)
end</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^tt_tank(?: (.+))?$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>echotest</name>
                                <script>local str = &quot;&quot;
for _, row in ipairs(results) do
	row.STATS = row.STATS or &quot;NONE&quot;
	str = str .. &quot;\n Item: &quot; .. row.NAME ..&quot;\nStats: &quot; .. row.STATS .. &quot;\nZone: &quot; .. row.LOCATION ..&quot;\nSlot: &quot; .. row.SLOT ..&quot;\nIVal: &quot; .. row.ITEMVALUE
end
echoLink(&quot;I&quot;, [[]], str)



</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^echotest$</regex>
                            </Alias>
                        </AliasGroup>
                        <Alias isActive="no" isFolder="no">
                            <name>Nz Time Tests</name>
                            <script>StartTestTime=0
EndTestTime=0

TestVar = &quot;Time Test&quot;

StartTestTime = getTime(true, &quot;hh:mm:ss:z&quot;)

if matches[2] then 
	for count=1, tonumber(matches[2]) do
	echo(&quot;get &quot; ..TestVar.. &quot; &quot; .. count)
	end
end

EndTestTime = getTime(true, &quot;hh:mm:ss:z&quot;)

echo(&quot;\nTesting complete for Local Variable Lookup&quot;)
echo(&quot;\nStart Test TIme = &quot;..StartTestTime)
echo(&quot;\nEnd Test Time = &quot;..EndTestTime)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^nz(?: (.+))?$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>test group junk</name>
                            <script>cecho(&quot;&lt;DodgerBlue&gt;Group  Info:\n\n&quot;)
cecho(string.format(&quot;&lt;DodgerBlue&gt;%5s%% &lt;khaki&gt;%-16s&lt;DodgerBlue&gt;%5s/&lt;khaki&gt;%-5s\n&quot;, &quot;PCT&quot;, &quot;NAME&quot;, &quot;HP&quot;, &quot;MAX_HP&quot;))
cecho(&quot;&lt;khaki&gt;-------------------------------------\n&quot;)
for k,v in pairs(testGroup) do
  local output = string.format(&quot;&lt;DodgerBlue&gt;%5s%% &lt;khaki&gt;%-16s&lt;DodgerBlue&gt;%5s / &lt;khaki&gt;%-5s\n&quot;, testGroup[k].PCT or &quot;&quot;, testGroup[k].Name or &quot;&quot;, testGroup[k].HP or &quot;&quot;, testGroup[k].MAXHP or &quot;&quot;)
  cecho(output)
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tgj</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>testjunk1</name>
                            <script>if isActive(myClass, &quot;alias&quot;) then 
	disableAlias(myClass)
	cecho(&quot;&lt;red&gt;Alias Set Deactivated&quot;)
else
	enableAlias(myClass)
	cecho(&quot;&lt;cyan&gt;Alias Set Activated&quot;)
end
</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^testjunk1$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>^jj$</name>
                            <script>--string.format (&quot;%5s&quot;, &quot;hi&quot;)          --&gt; '   hi'
--string.format (&quot;%-5s&quot;, &quot;hi&quot;)         --&gt; 'hi   '
--string.format (&quot;%.4s&quot;, &quot;Nick Gammon&quot;)--&gt; 'Nick'  (truncation)
--string.format (&quot;%9.4s&quot;, &quot;John Smith&quot;)--&gt; '     John'
--string.format (&quot;%.f&quot;, 4.4)           --&gt; '4'  (precision of zero)
--string.format (&quot;%.f&quot;, 4.5)           --&gt; '5'  (rounding)
--string.format (&quot;%#.f&quot;, 4.4)          --&gt; '4.' (decimal place forced)

--s = string.format(&quot;%3s %-5s&quot;, 98, &quot;Drevarr&quot;)
--t = string.format(&quot;%-5s&quot;, &quot;Drevarr&quot;)


--echo(s)

local tab = {
&quot;Warrior&quot;,
&quot;Mercenary&quot;,
&quot;Rogue&quot;,
&quot;Bard&quot;,
&quot;Conjurer&quot;,
&quot;Sorcerer&quot;,
&quot;Psionicist&quot;,
&quot;Druid&quot;,
&quot;Cleric&quot;,
&quot;Ethermancer&quot;,
&quot;Monk&quot;,
&quot;Paladin&quot;,
&quot;Anti-Paladin&quot;,
&quot;Berserker&quot;,
&quot;Ranger&quot;,
&quot;Reaver&quot;,
&quot;Illusionist&quot;,
&quot;Alchemist&quot;,
&quot;Shaman&quot;,
&quot;Necromancer&quot;,
&quot;Dreadlord&quot;,
&quot;Avenger&quot;
}

for k,v in pairs(Epic_Skills) do
	send(&quot;help &quot; ..v)
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^jj(?: (.+))?$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>db1</name>
                            <script>--stats={&quot;VNUM&quot;, &quot;TYPE&quot;, &quot;SLOT&quot;, &quot;NAME&quot;, &quot;LOCATION&quot;, &quot;LOCATIONLOWERCASE&quot;, &quot;ITEMVALUE&quot;, &quot;STATS&quot;}
mydb = db:create(&quot;duris_data&quot;,
    {
            stats = {
					VNUM = 0,
                    TYPE = &quot;&quot;,
                    SLOT = &quot;&quot;,
                    NAME = &quot;&quot;,
                    LOCATION = &quot;&quot;,
                    LOCATIONLOWERCASE = &quot;&quot;,
					    ITEMVALUE = 0,
                    STATS = &quot;&quot;,
			}       })


--db:add(mydb.stats, {VNUM=999,TYPE=&quot;TEST&quot;,SLOT=&quot;TEST&quot;,NAME = &quot;TEST&quot;,LOCATION = &quot;TEST&quot;,LOCATIONLOWERCASE = &quot;test&quot;,ITEMVALUE = 999,STATS = &quot;TEST&quot;})


--results = db:fetch(mydb.stats,nil,{mydb.stats.ITEMVALUE, mydb.stats.NAME}, true)</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^xx$</regex>
                        </Alias>
                    </AliasGroup>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>YATCO-23(2)</name>
                        <script></script>
                        <command></command>
                        <packageName>YATCO-23(2)</packageName>
                        <regex></regex>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>Demonnic</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <AliasGroup isActive="yes" isFolder="yes">
                                <name>Shared</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Reset chasing</name>
                                    <script>demonnic.chaser:reset()</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^chaseres$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Debug</name>
                                    <script>if matches[2] then
  demonnic:listCategories()
else
  demonnic:toggleDebug()
end</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^debug(?: (list))?$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>debug categories</name>
                                    <script>if matches[2] then
  demonnic:watchCategory( matches[2] )
else
  demonnic:listCategories()
end</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^debugc(?: (.*))?$</regex>
                                </Alias>
                            </AliasGroup>
                            <AliasGroup isActive="yes" isFolder="yes">
                                <name>Tabbed Chat</name>
                                <script></script>
                                <command></command>
                                <packageName></packageName>
                                <regex></regex>
                                <Alias isActive="yes" isFolder="no">
                                    <name>Toggle blinking (temporary change)</name>
                                    <script>if demonnic.chat.config.blink then
  demonnic.chat.config.blink = false
  demonnic.chat.tabsToBlink = {}
  demonnic:echo(&quot;Blinking temporarily turned &lt;red&gt;off&lt;grey&gt;. It will reset if you edit your tabbed chat configuration, or close and reopen mudlet. To make it permanent, change demonnic.chat.config.blink to false in \&quot;Demonnic-&gt;Tabbed Chat-&gt;Configuration options\&quot; under scripts\n&quot;)
else
  demonnic.chat.config.blink = true
  demonnic.chat:blink()
  demonnic:echo(&quot;Blinking temporarily turned &lt;red&gt;on&lt;grey&gt;. It will reset if you edit your tabbed chat configuration, or close and reopen mudlet. To make it permanent, change demonnic.chat.config.blink to true in \&quot;Demonnic-&gt;Tabbed Chat-&gt;Configuration options\&quot; under scripts\n&quot;)
end</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^dblink$</regex>
                                </Alias>
                                <Alias isActive="yes" isFolder="no">
                                    <name>fixChat</name>
                                    <script>local currentsetting = demonnic.chat.config.location
local newsetting = &quot;&quot;
if currentsetting == &quot;topright&quot; then 
  newsetting = &quot;bottomleft&quot; 
elseif currentsetting == &quot;topleft&quot; then
  newsetting = &quot;bottomright&quot;
elseif currentsetting == &quot;bottomleft&quot; then
  newsetting = &quot;topright&quot;
elseif currentsetting == &quot;bottomright&quot; then
  newsetting = &quot;topleft&quot;
end

demonnic.chat.config.location = newsetting
demonnic.chat:create()
demonnic.chat.config.location = currentsetting
demonnic.chat:create()</script>
                                    <command></command>
                                    <packageName></packageName>
                                    <regex>^fixchat$</regex>
                                </Alias>
                            </AliasGroup>
                        </AliasGroup>
                    </AliasGroup>
                    <Alias isActive="yes" isFolder="no">
                        <name>Appraise</name>
                        <script>send(&quot;appraise &quot;..matches[2])</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^appr(?: (.+))?$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>AuctionLog</name>
                        <script>send(&quot;Tog Pag&quot;)
startLogging(true)

for k,v in ipairs(myAuctionList) do
	send(&quot;auc info &quot;..v)
end

send(&quot;tog pag&quot;)

send(&quot;say -=-=Auction Logging Complete=-=-&quot;)
</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^AuctionLog$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>^JELsort$</name>
                        <script>for k,v in spairs(myActiveSpells, function(t,a,b) return t[b] &lt; t[a] end) do
    print(k,v)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^JELsort$</regex>
                    </Alias>
                </AliasGroup>
                <Alias isActive="yes" isFolder="no">
                    <name>Locker List</name>
                    <script>echo(&quot;Locker Access List\n------------------\nidor\nidoru\nidora\nkartog\nrhalath\nrhal\ndrella\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^locker$</regex>
                </Alias>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>Screen Messages</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>Echo two variables</name>
                        <script>myMessage1 = matches[2]
myMessage2 = matches[3]
echo(&quot;\n&quot;)
cecho(calign(myMessage1, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[&quot;..myMessage2..&quot;]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;red&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;khaki&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(myMessage1, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[&quot;..myMessage2..&quot;]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;red&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;khaki&gt;&quot;}))
echo(&quot;\n&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^myEcho\s+(\w+)\s+(.+)</regex>
                    </Alias>
                </AliasGroup>
            </AliasGroup>
            <Alias isActive="yes" isFolder="no">
                <name>MyGroupDisplay</name>
                <script>cecho(&quot;&lt;DodgerBlue&gt;Name \t&lt;khaki&gt;HP PCT\n&quot;)
for k,v in pairs(testGroup) do
	cecho(&quot;&lt;khaki&gt;&quot;..testGroup[k].Name..&quot;\t &lt;DodgerBlue&gt;&quot;..testGroup[k].PCT..&quot;\n&quot;)
end
</script>
                <command></command>
                <packageName></packageName>
                <regex>^mg$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>BloodLust Time</name>
                <script>----- Gold Liquid in a Glass tube
local fg_goldLiquid = [[background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1, 
stop:.0 rgba(253,206,65,255), stop:.22 rgba(225,155,52,255),
stop:.34 rgba(239,232,162,255), stop:.40 rgba(254,240,198,255),
stop:.41 rgba(238,216,209,255), stop:.45 rgba(238,216,209,255),
stop:.52 rgba(229,185,148,255), stop:.67 rgba(203,116,41,255),
stop:.79 rgba(172,60,26,255), stop:.94 rgba(89,45,35,255),
stop:.99 rgba(254,215,65,255));
border: 1px solid rgba(89,45,35,100); 
border-top:4px groove rgba(98,78,98,198);
border-right: 4px outset rgba(91,91,91,171);   
    border-radius: 5;
    padding: 3px;
]]

local fg_red1 = [[background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1, 
stop: 0 #efb6b6, stop: 0.1 #e06d6d, stop: 0.49 #cc0c0c, stop: 0.5 #b70a0a, stop: 1 #240249);
    border-top: 1px black solid;
    border-left: 2px black solid;
    border-bottom: 2px black solid;
    border-radius: 5;
	 padding: 3px;
]]

local bg_clearTube2 = [[background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1, 
stop:.0 rgba(0,137,137,158), stop:.4 rgba(137,137,137,181),
stop:.9 rgba(152,156,159,212), stop:.28 rgba(210,230,241,97),
stop:.37 rgba(255,255,255,80), stop:.49 rgba(165,206,227,100),
stop:.50 rgba(75,75,75,200), stop:.61 rgba(90,90,90,200),
stop:.62 rgba(91,91,91,171), stop:.70 rgba(81,81,81,191),
stop:.82 rgba(45,45,45,222), stop:.89 rgba(68,68,68,240),
stop:.95 rgba(81,81,81,252), stop:.96 rgba(61,85,85,255),
stop:.99 rgba(0,98,98,153), stop: 1 rgba(0,98,98,117)); 
   
    border-top:3px groove rgba(98,78,98,198);
    border-left: 3px double black;
    border-bottom:2px ridge rgba(78,98,98,198);
    border-right: 3px outset rgba(91,91,91,171);
    border-radius: 5;
    padding: 3px;
 ]]
local fg_clearTube2 = [[ background-color: QLinearGradient(x1: 0, y1: 1, x2: 0, y2: 0, 
stop: 0 rgba(2,2,2,255), stop: .02 rgba(29,29,29,255),stop: .19 rgba(255,255,255,166), stop: .37 rgba(2,2,2,69), 
stop: .50 rgba(2,2,2,0), stop: .78 rgba(2,2,2,107), stop: .89 rgba(2,2,2,77), stop: .94 rgba(80,113,117,61), 
stop: .99 rgba(158,224,232,255), stop: 1 rgba(173,246,255,255));
    border-top:3px groove rgba(98,78,98,198);
    border-left: 3px double black;
    border-bottom:2px groove rgba(78,98,98,198);
    border-right: 3px outset rgba(91,91,91,171);   
    border-radius: 5;
    padding: 3px;
 ]]
local bg_transparent_background_no_bar = [[background-color: transparent;
    border-width: 2px;
    border-color: transparent;
    border-style: solid;
    border-radius: 5;
    padding: 3px;
]]


demonnic.anitimer:new(&quot;BloodLust&quot;, {x=&quot;2%&quot;, y=&quot;15%&quot;, height = &quot;70%&quot;, width = &quot;96%&quot;, color=&quot;red&quot;}, 300, {container = GUI.BloodLustIcon, showTime = true, timerCaption = &quot;Bloodlust&quot;,cssFront = fg_red1, cssBack = bg_clearTube2})


GUI.BloodLustGlass = Geyser.Gauge:new({name=&quot;BloodLustGlass&quot;, x=&quot;2%&quot;,y=&quot;15%&quot;,width=&quot;96%&quot;, height=&quot;70%&quot;, fontSize = 12,  },GUI.BloodLustIcon)
GUI.BloodLustGlass.front:setStyleSheet(fg_clearTube2)
GUI.BloodLustGlass.back:setStyleSheet(bg_transparent_background_no_bar)
GUI.BloodLustGlass.text:setStyleSheet(&quot;Blood Lust&quot;)
</script>
                <command></command>
                <packageName></packageName>
                <regex>^bloodlust$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>BloodLust Timer Off</name>
                <script>print(&quot;Turning Timer off&quot;)
demonnic.anitimer:stop(&quot;BloodLust&quot;)
</script>
                <command></command>
                <packageName></packageName>
                <regex>^BLT$</regex>
            </Alias>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>HealBot Aliases</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>HealBot Hide</name>
                    <script>GUI.Bottom2:hide()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^HHH$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>HealBot Show</name>
                    <script>GUI.Bottom2:show()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^SHB$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Set Spell One</name>
                    <script>spell1 = matches[2]
echo(&quot;GUI.SpellIcon1&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^spell1 (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Set Spell Two</name>
                    <script>spell2 = matches[2]
echo(&quot;GUI.SpellIcon2&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^spell2 (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Set Spell Three</name>
                    <script>spell3 = matches[2]
echo(&quot;GUI.SpellIcon3&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^spell3 (.*)$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>animatedtimers-30</name>
                <script></script>
                <command></command>
                <packageName>animatedtimers-30</packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>anitimer demo</name>
                    <script>demonnic.newContainer = demonnic.newContainer or Geyser.Container:new({x=0, y=0, height=400, width = 200})
local myCss1 = [[
border-width: 4px;
border-radius: 7;
border-color: red;
background-color: green;
]]
local myCss2 = [[
border-width: 4px;
border-radius: 7;
border-color: green;
background-color: red;
]]
demonnic.anitimer:new(&quot;Test1&quot;, {x=200, y=100, height = 30, width = 300, color=&quot;red&quot;}, 5)
demonnic.anitimer:new(&quot;Test2&quot;, {x = 0, y=&quot;50%&quot;, height = 20, width = &quot;100%&quot;}, 10, {container = demonnic.newContainer, showTime = true, timerCaption = &quot;Test2&quot;, cssFront = myCss1, cssBack = myCss2})
demonnic.anitimer:new(&quot;Test3&quot;, {x = 500, y = 300, height = 40, width = 100}, 8, {showTimer = false, timerCaption = &quot;Test3&quot;, cssFront = myCss2, cssBack = myCss1})
demonnic.anitimer:new(&quot;Test4&quot;, {x=-20, y=0, height = 20, width = &quot;100%&quot;}, 18, {container = demonnic.newContainer, showtime = false})</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^anitimer demo$</regex>
                </Alias>
            </AliasGroup>
        </AliasGroup>
        <Alias isActive="yes" isFolder="no">
            <name>DurisRaceListHelp</name>
            <script>DurisRaceList = {&quot;Drider&quot;, &quot;Drow Elf&quot;, &quot;Duergar Dwarf&quot;, &quot;Githyanki&quot;, &quot;Goblin&quot;, &quot;Kobold&quot;, &quot;Ogre&quot;, &quot;Orc&quot;, &quot;Troll&quot;, &quot;Barbarian&quot;, &quot;Centaur&quot;, &quot;Firbolg&quot;, &quot;Githzerai&quot;, &quot;Gnome&quot;, &quot;Grey Elf&quot;, &quot;Halfling&quot;, &quot;Human&quot;, &quot;Mountain Dwarf&quot;, &quot;Minotaur&quot;, &quot;Thri-Kreen&quot;,}

for k,v in pairs(DurisRaceList) do
	send(&quot;help &quot;..v)
end
</script>
            <command></command>
            <packageName></packageName>
            <regex>^DRLH$</regex>
        </Alias>
    </AliasPackage>
    <ActionPackage>
        <ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="yes" useCustomLayout="no">
            <name>Bard Songs</name>
            <packageName></packageName>
            <script></script>
            <css></css>
            <commandButtonUp></commandButtonUp>
            <commandButtonDown></commandButtonDown>
            <icon></icon>
            <orientation>1</orientation>
            <location>4</location>
            <posX>204</posX>
            <posY>767</posY>
            <mButtonState>1</mButtonState>
            <sizeX>1528522606</sizeX>
            <sizeY>1528524080</sizeY>
            <buttonColumn>3</buttonColumn>
            <buttonRotation>-1</buttonRotation>
            <buttonColor>#ffffff</buttonColor>
            <Action isActive="yes" isFolder="no" isPushButton="yes" isFlatButton="yes" useCustomLayout="no">
                <name>Song of Sleep</name>
                <packageName></packageName>
                <script>send(&quot;ps&quot;)</script>
                <css>color: white; background-color: orange; font-size: 10px;
padding: 1px;
border-radius: 1px;</css>
                <commandButtonUp></commandButtonUp>
                <commandButtonDown></commandButtonDown>
                <icon></icon>
                <orientation>1</orientation>
                <location>0</location>
                <posX>0</posX>
                <posY>0</posY>
                <mButtonState>1</mButtonState>
                <sizeX>195493868</sizeX>
                <sizeY>-1245204</sizeY>
                <buttonColumn>1</buttonColumn>
                <buttonRotation>-1</buttonRotation>
                <buttonColor>#ffffff</buttonColor>
            </Action>
            <Action isActive="yes" isFolder="no" isPushButton="yes" isFlatButton="no" useCustomLayout="no">
                <name>Song of Harmony</name>
                <packageName></packageName>
                <script>send(&quot;pharmony&quot;)</script>
                <css></css>
                <commandButtonUp></commandButtonUp>
                <commandButtonDown></commandButtonDown>
                <icon></icon>
                <orientation>1</orientation>
                <location>0</location>
                <posX>0</posX>
                <posY>0</posY>
                <mButtonState>1</mButtonState>
                <sizeX>0</sizeX>
                <sizeY>0</sizeY>
                <buttonColumn>1</buttonColumn>
                <buttonRotation>0</buttonRotation>
                <buttonColor>#ffffff</buttonColor>
            </Action>
        </ActionGroup>
    </ActionPackage>
    <ScriptPackage>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>deleteOldProfiles</name>
            <packageName>deleteOldProfiles</packageName>
            <script></script>
            <eventHandlerList/>
            <Script isActive="yes" isFolder="no">
                <name>deleteOldProfiles</name>
                <packageName></packageName>
                <script>function deleteOldProfiles(keepdays_arg, delete_maps)

--[[
	Deletes old profiles/maps in the &quot;current&quot;/&quot;map&quot; folders of the Mudlet home directory.
	The following files are NOT deleted:
	- Files newer than the amount of days specified as an argument to deleteOldProfiles(), or 31 days if not specified.	
	- One file for every month before that. Specifically: The first available file of every month prior to this.
	Setting the second argument to true will delete maps instead of profiles. (e.g. deleteOldProfiles(10, true))
--]]

	local keepdays = tonumber(keepdays_arg) or 31
	local profile_table = {}
	local used_last_mod_months = {}
	local slash = (string.char(getMudletHomeDir():byte()) == &quot;/&quot;) and &quot;/&quot; or &quot;\\&quot;
	local dirpath = getMudletHomeDir()..slash..(delete_maps and &quot;map&quot; or &quot;current&quot;)
	local delnum = 0

	-- Traverse the profiles folder and create a table of files:
	for filename in lfs.dir(dirpath) do
		if filename~=&quot;.&quot; and filename~=&quot;..&quot; then
			profile_table[#profile_table+1] = {name = filename, last_mod = lfs.attributes(dirpath..slash..filename, &quot;modification&quot;)}
		end
	end

	-- Sort the table according to last modification date from old to new:
	table.sort(profile_table, function (a,b) return a.last_mod &lt; b.last_mod end)

	echo(string.format(&quot;\nDeleting old %s. Files newer than %d days and one profile for every month before that will be kept.&quot;, delete_maps and &quot;maps&quot; or &quot;profiles&quot;, keepdays))
	for i,v in ipairs(profile_table) do
		local days = math.floor(os.difftime(os.time(), v.last_mod)/86400)
		local last_mod_month = os.date(&quot;%Y/%m&quot;, v.last_mod)
		if days &gt; keepdays then
			-- For profiles older than X days, check if we already kept a table for this month:
			if not table.contains(used_last_mod_months, last_mod_month) then
				-- If not, do nothing and mark this month as &quot;kept&quot;.
				used_last_mod_months[#used_last_mod_months+1] = last_mod_month
			else
				-- Otherwise remove the file:
				local success, errorstring = os.remove(dirpath..slash..v.name)
				if success then
					delnum = delnum + 1
				else
					cecho(&quot;\n&lt;red&gt;ERROR: &quot;..errorstring)
				end
			end
		end
	end
	echo(string.format(&quot;\nDeletion complete. %d/%d files were removed successfully.&quot;, delnum, #profile_table))
end
</script>
                <eventHandlerList/>
            </Script>
        </ScriptGroup>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>DarkwardMudlet</name>
            <packageName>DarkwardMudlet</packageName>
            <script></script>
            <eventHandlerList/>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Template(1)</name>
                <packageName>Template(1)</packageName>
                <script></script>
                <eventHandlerList/>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>CSSman</name>
                    <packageName>CSSman</packageName>
                    <script></script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>CSSMan</name>
                        <packageName></packageName>
                        <script>-- CSSMan by Vadi. Public domain.

CSSMan = {}
CSSMan.__index = CSSMan

function CSSMan.new(stylesheet)
  local obj  = { stylesheet = {} }
  setmetatable(obj,CSSMan)
  local trim = string.trim

  assert(type(stylesheet) == &quot;string&quot;, &quot;CSSMan.new: no stylesheet provided. A possible error is that you might have used CSSMan.new, not CSSMan:new&quot;)

  for line in stylesheet:gmatch(&quot;[^\r\n]+&quot;) do
    local attribute, value = line:match(&quot;^(.-):(.-);$&quot;)
    if attribute and value then
      attribute, value = trim(attribute), trim(value)
      obj.stylesheet[attribute] = value
    end
  end

  return obj
end

function CSSMan:set(key, value)
  self.stylesheet[key] = value
end

function CSSMan:get(key)
  return self.stylesheet[key]
end

function CSSMan:getCSS(key)
  local lines, concat = {}, table.concat
  for k,v in pairs(self.stylesheet) do lines[#lines+1] = concat({k,&quot;: &quot;, v, &quot;;&quot;}) end
  return concat(lines, &quot;\n&quot;)
end

function CSSMan:gettable()
  return self.stylesheet
end

function CSSMan:settable(tbl)
  assert(type(tbl) == &quot;table&quot;, &quot;CSSMan:settable: table expected, got &quot;..type(tbl))

  self.stylesheet = tbl
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>GUI</name>
                    <packageName></packageName>
                    <script>GUI = GUI or {}
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>Set Borders</name>
                        <packageName></packageName>
                        <script>local w,h = getMainWindowSize()
setBorderLeft(w/5)
setBorderTop(h/20)
setBorderBottom(h/15)
setBorderRight(w/4)</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Create Background</name>
                        <packageName></packageName>
                        <script>GUI.BackgroundCSS = CSSMan.new([[
  background-color: rgb(20,0,20);
]])

GUI.Left = Geyser.Label:new({
  name = &quot;GUI.Left&quot;,
  x = 0, y = 0,
  width = &quot;20%&quot;,
  height = &quot;100%&quot;,
})
GUI.Left:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Right = Geyser.Label:new({
  name = &quot;GUI.Right&quot;,
  x = &quot;-25%&quot;, y = 0,
  width = &quot;25%&quot;,
  height = &quot;100%&quot;,
})
GUI.Right:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Top = Geyser.Label:new({
  name = &quot;GUI.Top&quot;,
  x = &quot;20%&quot;, y = 0,
  width = &quot;55%&quot;,
  height = &quot;5%&quot;,
})
GUI.Top:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Bottom = Geyser.Label:new({
  name = &quot;GUI.Bottom&quot;,
  x = &quot;20%&quot;, y = &quot;95%&quot;,
  width = &quot;55%&quot;,
  height = &quot;5%&quot;,
})
GUI.Bottom:setStyleSheet(GUI.BackgroundCSS:getCSS())

-- Add Group Box Holder
GUI.GroupCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  margin: 1px;
]])</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Header Icons</name>
                        <packageName></packageName>
                        <script>GUI.Header = Geyser.HBox:new({
  name = &quot;GUI.Header&quot;,
  x = 0, y = 0,
  width = &quot;100%&quot;,
  height = &quot;100%&quot;,
},GUI.Top)

GUI.IconCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  border-radius: 5px;
  margin: 5px;
  qproperty-wordWrap: true;
]])

for i=1,4 do
  GUI[&quot;Icon&quot;..i] = Geyser.Label:new({
    name = &quot;GUI.Icon&quot;..i,
  },GUI.Header)
  GUI[&quot;Icon&quot;..i]:setStyleSheet(GUI.IconCSS:getCSS())
  GUI[&quot;Icon&quot;..i]:echo(&quot;&lt;center&gt;GUI. Icon&quot;..i)
end

GUI[&quot;BloodLustIcon&quot;] = Geyser.Label:new({
  name = &quot;GUI.BloodLustIcon&quot;, h_stretch_factor=4.0
},GUI.Header)
GUI.BloodLustIcon:setStyleSheet(GUI.IconCSS:getCSS())
GUI.BloodLustIcon:echo(&quot;&lt;center&gt;Blood Lust&quot;)

for i=9,12 do
  GUI[&quot;Icon&quot;..i] = Geyser.Label:new({
    name = &quot;GUI.Icon&quot;..i,
  },GUI.Header)
  GUI[&quot;Icon&quot;..i]:setStyleSheet(GUI.IconCSS:getCSS())
  GUI[&quot;Icon&quot;..i]:echo(&quot;&lt;center&gt;GUI. Icon&quot;..i)
end

-- Header Icon 1
GUI.Icon1:setClickCallback(&quot;toggle_loot&quot;)
lootOn = true
echo(&quot;GUI.Icon1&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;AutoLoot&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	


-- Header Icon 2
GUI.Icon2:setClickCallback(&quot;toggle_loot_type&quot;)
lootVar = &quot;all&quot;
echo(&quot;GUI.Icon2&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;LootVar&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ALL&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )


-- Header Icon 3
echo(&quot;GUI.Icon3&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;red&quot;&gt;Addict Timer&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;0:00&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )


-- Header Icon 4
echo(&quot;GUI.Icon4&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;red&quot;&gt;Addicted&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;0%&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )


-- Header Icon 9
GUI.Icon9:setClickCallback(&quot;toggle_healbot&quot;)
echo(&quot;GUI.Icon9&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;Heal&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;Grid&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )


-- Header Icon 10
GUI.Icon10:setClickCallback(&quot;spam_passwords&quot;)
echo(&quot;GUI.Icon10&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;Pass&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;Words&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )



-- Header Icon11
GUI.Icon11:setClickCallback(&quot;toggle_AutoId&quot;)
autoId = false
echo(&quot;GUI.Icon11&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;AutoId&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;red&quot;&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	

-- Header Icon12
GUI.Icon12:setClickCallback(&quot;toggle_afk&quot;)
afkStatus = false
echo(&quot;GUI.Icon12&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;AFK Status&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;red&quot;&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	
</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Gauges</name>
                        <packageName></packageName>
                        <script>GUI.Footer = Geyser.HBox:new({
  name = &quot;GUI.Footer&quot;,
  x = 0, y = 0,
  width = &quot;100%&quot;,
  height = &quot;100%&quot;,
},GUI.Bottom)

GUI.LeftColumn = Geyser.VBox:new({
  name = &quot;GUI.LeftColumn&quot;,
},GUI.Footer)

GUI.MiddleColumn = Geyser.VBox:new({
  name = &quot;GUI.MiddleColumn&quot;,
},GUI.Footer)

GUI.RightColumn = Geyser.VBox:new({
  name = &quot;GUI.RightColumn&quot;,
},GUI.Footer)


GUI.GaugeBackCSS = CSSMan.new([[
  background-color: rgba(0,0,0,0);
  color: khaki;
  border-style: solid;
  border-color: khaki;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
]])

GUI.GaugeFrontCSS = CSSMan.new([[
  background-color: rgba(0,0,0,0);
  color: khaki;
  border-style: solid;
  border-color: khaki;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
]])

GUI.Health = Geyser.Gauge:new({
  name = &quot;GUI.Health&quot;,
},GUI.LeftColumn)
GUI.Health.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;Crimson&quot;)
GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Health:setValue(100,100)
GUI.Health.front:echo(&quot;HPS&quot;)

-- Gauge for tracking moves
GUI.Endurance = Geyser.Gauge:new({
  name = &quot;GUI.Endurance&quot;,
},GUI.MiddleColumn)
GUI.Endurance.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;GoldenRod&quot;)
GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Endurance:setValue(100,100)
--GUI.Endurance.front:echo(&quot;GUI.Endurance&quot;)
GUI.Endurance.front:echo(&quot;MVS&quot;)


GUI.Experience = Geyser.Gauge:new({
  name = &quot;GUI.Experience&quot;,
},GUI.RightColumn)
GUI.Experience.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;DimGray&quot;)
GUI.Experience.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Experience:setValue(100,100)
GUI.Experience.front:echo(&quot;EXP&quot;)</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Boxes</name>
                        <packageName></packageName>
                        <script>--  margin-right: 10px;
--  margin-left: 5px;

GUI.BoxCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  margin: 5px;
]])
GUI.ChatCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  margin: 1px;
]])

GUI.ChatBoxCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 0px;
  border-color: khaki;
  margin: 5px;
]])

GUI.Box1 = Geyser.Label:new({
  name = &quot;GUI.Box1&quot;,
  x = 0, y = 0,
  width = &quot;100%&quot;,
  height = &quot;50%&quot;,
},GUI.Right)
GUI.Box1:setStyleSheet(GUI.ChatCSS:getCSS())
--GUI.Box1:echo(&quot;&lt;center&gt;GUI.Box1&quot;)


GUI.ChatBox1 = Geyser.Label:new({
  name = &quot;GUI.ChatBox1&quot;,
  x = &quot;0%&quot;, y = &quot;0%&quot;,
  width = &quot;100%&quot;,
  height = &quot;100%&quot;,
},GUI.Box1)
GUI.ChatBox1:setStyleSheet(GUI.ChatBoxCSS:getCSS())

GUI.Box2 = Geyser.Label:new({
  name = &quot;GUI.Box2&quot;,
  x = 0, y = &quot;50%&quot;,
  width = &quot;100%&quot;,
  height = &quot;25%&quot;,
},GUI.Right)
GUI.Box2:setStyleSheet(GUI.ChatCSS:getCSS())
--GUI.Box2:echo(&quot;&lt;center&gt;GUI.Box2&quot;)

GUI.Box2HealGrid = Geyser.Label:new({
  name = &quot;GUI.Box2HealGrid&quot;,
  x = &quot;2%&quot;, y = &quot;2%&quot;,
  width = &quot;96%&quot;,
  height = &quot;96%&quot;,
},GUI.Box2)


GUI.Box3 = Geyser.Label:new({
  name = &quot;GUI.Box3&quot;,
  x = 0, y = &quot;75%&quot;,
  width = &quot;100%&quot;,
  height = &quot;25%&quot;,
},GUI.Right)
GUI.Box3:setStyleSheet(GUI.ChatCSS:getCSS())
GUI.Box3:echo(&quot;&lt;center&gt;GUI.Box3&quot;)

GUI.Box3Mini = Geyser.MiniConsole:new({
  name = &quot;GUI.Box3Mini&quot;,
  x = &quot;5%&quot;, y = &quot;5%&quot;,
  width = &quot;90%&quot;,
  height = &quot;90%&quot;,
},GUI.Box3)
GUI.Box3Mini:setColor(&quot;black&quot;)

GUI.Box4 = Geyser.Label:new({
  name = &quot;GUI.Box4&quot;,
  x = &quot;0%&quot;, y = &quot;0%&quot;,
  width = &quot;100%&quot;,
  height = &quot;25%&quot;,
},GUI.Left)
GUI.Box4:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box4:echo(&quot;&lt;center&gt;GUI.Box4&quot;)

GUI.Box4Mini = Geyser.MiniConsole:new({
  name = &quot;GUI.Box4Mini&quot;,
  x = &quot;3%&quot;, y = &quot;5%&quot;,
  width = &quot;90%&quot;,
  height = &quot;90%&quot;,
},GUI.Box4)
GUI.Box4Mini:setColor(&quot;black&quot;)
setWindowWrap(&quot;GUI.Box4Mini&quot;, 50)

GUI.Box5 = Geyser.Label:new({
  name = &quot;GUI.Box5&quot;,
  x = &quot;0%&quot;, y = &quot;25%&quot;,
  width = &quot;100%&quot;,
  height = &quot;50%&quot;,
},GUI.Left)
GUI.Box5:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box5:echo(&quot;&lt;center&gt;GUI.Box5&quot;)

GUI.Box5Mini = Geyser.MiniConsole:new({
  name = &quot;GUI.Box5Mini&quot;,
  x = &quot;5%&quot;, y = &quot;5%&quot;,
  width = &quot;90%&quot;,
  height = &quot;90%&quot;,
},GUI.Box5)
GUI.Box5Mini:setColor(&quot;black&quot;)

--GUI.Box6 = Geyser.Label:new({
--  name = &quot;GUI.Box6&quot;,
--  x = &quot;50%&quot;, y = &quot;25%&quot;,
--  width = &quot;50%&quot;,
--  height = &quot;50%&quot;,
--},GUI.Left)
--GUI.Box6:setStyleSheet(GUI.BoxCSS:getCSS())
--GUI.Box6:echo(&quot;&lt;center&gt;GUI.Box6&quot;)

GUI.Box7 = Geyser.Label:new({
  name = &quot;GUI.Box7&quot;,
  x = &quot;0%&quot;, y = &quot;75%&quot;,
  width = &quot;100%&quot;,
  height = &quot;25%&quot;,
},GUI.Left)
GUI.Box7:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box7:echo(&quot;&lt;center&gt;GUI.Box7&quot;)

GUI.Box7Mini = Geyser.MiniConsole:new({
  name = &quot;GUI.Box7Mini&quot;,
  x = &quot;5%&quot;, y = &quot;5%&quot;,
  width = &quot;90%&quot;,
  height = &quot;90%&quot;,
},GUI.Box7)
GUI.Box7Mini:setColor(&quot;black&quot;)</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>Header Functions</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>Head Functions</name>
                        <packageName></packageName>
                        <script>	-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--myGeyserLabel:echo([[&lt;span style=&quot;color: white&quot;&gt;Notice:&lt;span style=&quot;color: red&quot;&gt; &lt;b&gt;OFF&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;]])
function toggle_loot()
	if lootOn == true then
		lootOn = false
		echo(&quot;GUI.Icon1&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;AutoLoot&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;Crimson&quot;&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign(&quot;OFF&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Autoloot]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;OFF&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Autoloot]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	else
		lootOn = true
		echo(&quot;GUI.Icon1&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;AutoLoot&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	
		cecho(calign(&quot;ON&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Autoloot]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;ON&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Autoloot]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	end
end

function toggle_loot_type()
	if lootAll == true then
		lootAll = false
		lootVar = &quot;coins&quot;
		echo(&quot;GUI.Icon2&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;LootVar&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;gold&quot;&gt;COINS&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign(&quot;COINS&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[LootVar]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;gold&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;COINS&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[LootVar]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;gold&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	else
		lootAll = true
		lootVar = &quot;all&quot;
		echo(&quot;GUI.Icon2&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;LootVar&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ALL&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign(&quot;All&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[LootVar]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;All&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[LootVar]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	end
end

function toggle_AutoId()
	if autoId == true then
		autoId = false
		disableTrigger(&quot;AutoIdBot&quot;)
		echo(&quot;GUI.Icon11&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;AutoId&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;Crimson&quot;&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign(&quot;OFF&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[AutoID]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;OFF&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[AutoID]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	else
		autoId = true
		enableTrigger(&quot;AutoIdBot&quot;)
		echo(&quot;GUI.Icon11&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;AutoId&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	
		cecho(calign(&quot;ON&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[AutoID]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;ON&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[AutoID]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	end
end

function toggle_afk()
	if afkStatus == true then
		afkStatus = false
		disableTimer(&quot;AFK&quot;)
		echo(&quot;GUI.Icon12&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;AFK Status&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;red&quot;&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign(&quot;OFF&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[AFK Status]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;OFF&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[AFK Status]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	else
		afkStatus = true
		enableTimer(&quot;AFK&quot;)
		echo(&quot;GUI.Icon12&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;AFK Status&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign(&quot;ON&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[AFK Status]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;ON&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[AFK Status]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	end
end

function toggle_healbot()
	if healbot_toggle == true then
		healbot_toggle = false
		GUI.Box2HealGrid:hide()
		echo(&quot;GUI.Icon9&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;HealGrid&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;Crimson&quot;&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign(&quot;OFF&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[HealGrid]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;OFF&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[HealGrid]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	else
		healbot_toggle = true
		GUI.Box2HealGrid:show()
		echo(&quot;GUI.Icon9&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;HealGrid&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	
		cecho(calign(&quot;ON&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[HealGrid]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n&quot;)
		cecho(calign(&quot;ON&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[HealGrid]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		echo(&quot;\n\n&quot;)
	end
end

function spam_passwords()
		cecho(calign(&quot;Starting&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Say Passwords]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
		send(&quot;say arrow;say hello;say hi;say junamezanolunaqzl;say rrakkma;say tayr-dryn;say auril;say kraang;say mortazoth;say carnage;say mantis;say lokpan;say pandora;say septimus;say bdkn;say sepulchre;say nothing;say kal-zerr;say i&amp;gt;|uub;say darlakanand;say thrym;say sanctum&quot;)
		cecho(calign(&quot;Finished&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Say Passwords]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;DodgerBlue&gt;&quot;}))
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>HealBot</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <ScriptGroup isActive="yes" isFolder="yes">
                        <name>GroupStuff</name>
                        <packageName></packageName>
                        <script>-- Define gauges for group members
----------------------------------
GUI.SpellToggles = Geyser.HBox:new({
  name = &quot;GUI.SpellToggles&quot;,
  x = 0, y = 0,
  width = &quot;100%&quot;,
  height = &quot;10%&quot;,
},GUI.Box2HealGrid)
--GUI.Bottom2

GUI.GroupBox = Geyser.HBox:new({
  name = &quot;GUI.GroupBox&quot;,
  x = 0, y = &quot;10%&quot;,
  width = &quot;100%&quot;,
  height = &quot;18%&quot;,
},GUI.Box2HealGrid)

GUI.GroupBox2 = Geyser.HBox:new({
  name = &quot;GUI.GroupBox2&quot;,
  x = 0, y = &quot;28%&quot;,
  width = &quot;100%&quot;,
  height = &quot;18%&quot;,
},GUI.Box2HealGrid)

GUI.GroupBox3 = Geyser.HBox:new({
  name = &quot;GUI.GroupBox3&quot;,
  x = 0, y = &quot;46%&quot;,
  width = &quot;100%&quot;,
  height = &quot;18%&quot;,
},GUI.Box2HealGrid)

GUI.GroupBox4 = Geyser.HBox:new({
  name = &quot;GUI.GroupBox4&quot;,
  x = 0, y = &quot;64%&quot;,
  width = &quot;100%&quot;,
  height = &quot;18%&quot;,
},GUI.Box2HealGrid)

GUI.GroupBox5 = Geyser.HBox:new({
  name = &quot;GUI.GroupBox5&quot;,
  x = 0, y = &quot;82%&quot;,
  width = &quot;100%&quot;,
  height = &quot;18%&quot;,
},GUI.Box2HealGrid)

GUI.IconCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: gray;
  border-radius: 5px;
  margin: 5px;
  qproperty-wordWrap: true;
]])

-- Populate Groups
for i=1,5 do
GUI[&quot;Group&quot;..i] = Geyser.Gauge:new({
  name = &quot;GUI.Group&quot;..i,
},GUI.GroupBox)
GUI[&quot;Group&quot;..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;green&quot;)
GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI[&quot;Group&quot;..i]:setValue(100,100)
GUI[&quot;Group&quot;..i].front:echo([[&lt;span style = &quot;color: black&quot;&gt;_&lt;/span&gt;]]..i)
GUI[&quot;Group&quot;..i].front:setClickCallback(&quot;on_bomb_press&quot;)
end


for i=6,10 do
GUI[&quot;Group&quot;..i] = Geyser.Gauge:new({
  name = &quot;GUI.Group&quot;..i,
},GUI.GroupBox2)
GUI[&quot;Group&quot;..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;green&quot;)
GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI[&quot;Group&quot;..i]:setValue(100,100)
GUI[&quot;Group&quot;..i].front:echo([[&lt;span style = &quot;color: black&quot;&gt;_&lt;/span&gt;]]..i)
GUI[&quot;Group&quot;..i].front:setClickCallback(&quot;on_bomb_press&quot;)
end

for i=11,15 do
GUI[&quot;Group&quot;..i] = Geyser.Gauge:new({
  name = &quot;GUI.Group&quot;..i,
},GUI.GroupBox3)
GUI[&quot;Group&quot;..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;green&quot;)
GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI[&quot;Group&quot;..i]:setValue(100,100)
GUI[&quot;Group&quot;..i].front:echo([[&lt;span style = &quot;color: black&quot;&gt;_&lt;/span&gt;]]..i)
GUI[&quot;Group&quot;..i].front:setClickCallback(&quot;on_bomb_press&quot;)
end

for i=16,20 do
GUI[&quot;Group&quot;..i] = Geyser.Gauge:new({
  name = &quot;GUI.Group&quot;..i,
},GUI.GroupBox4)
GUI[&quot;Group&quot;..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;green&quot;)
GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI[&quot;Group&quot;..i]:setValue(100,100)
GUI[&quot;Group&quot;..i].front:echo([[&lt;span style = &quot;color: black&quot;&gt;_&lt;/span&gt;]]..i)
GUI[&quot;Group&quot;..i].front:setClickCallback(&quot;on_bomb_press&quot;)
end

for i=21,25 do
GUI[&quot;Group&quot;..i] = Geyser.Gauge:new({
  name = &quot;GUI.Group&quot;..i,
},GUI.GroupBox5)
GUI[&quot;Group&quot;..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;green&quot;)
GUI[&quot;Group&quot;..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI[&quot;Group&quot;..i]:setValue(100,100)
GUI[&quot;Group&quot;..i].front:echo([[&lt;span style = &quot;color: black&quot;&gt;_&lt;/span&gt;]]..i)
GUI[&quot;Group&quot;..i].front:setClickCallback(&quot;on_bomb_press&quot;)
end</script>
                        <eventHandlerList/>
                    </ScriptGroup>
                    <ScriptGroup isActive="yes" isFolder="yes">
                        <name>HealBot Functions</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function on_bomb_press()
  echo(&quot;Set the on Click functions for healbot\n&quot;)
end

function heal_bot(index)
  	--send(&quot;cast '&quot;..HealBot_Spell..&quot;'&quot;)
	send(&quot;cast '&quot;..HealBot_OnClick_Spell..&quot;' &quot;..index)
end
</script>
                        <eventHandlerList/>
                    </ScriptGroup>
                    <ScriptGroup isActive="yes" isFolder="yes">
                        <name>HealBot Variables</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
HealBot_OnClick_Spell = &quot;heal&quot;

spell1 = &quot;heal&quot;
spell2 = &quot;full heal&quot;
spell3 = &quot;vit&quot;</script>
                        <eventHandlerList/>
                    </ScriptGroup>
                    <ScriptGroup isActive="yes" isFolder="yes">
                        <name>HealBot Buttons</name>
                        <packageName></packageName>
                        <script>
</script>
                        <eventHandlerList/>
                        <Script isActive="yes" isFolder="no">
                            <name>HealBot Button Functions</name>
                            <packageName></packageName>
                            <script>-- HealBot SpellIcon 1
GUI.SpellIcon1:setClickCallback(&quot;toggle_Spell1&quot;)
echo(&quot;GUI.SpellIcon1&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )


function toggle_Spell1()
	HealBot_OnClick_Spell = spell1
	echo(&quot;GUI.SpellIcon1&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;Crimson&quot;&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
	cecho(calign(spell1, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Set]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
	echo(&quot;\n&quot;)
	cecho(calign(spell1, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Set]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
	echo(&quot;\n\n&quot;)
	echo(&quot;GUI.SpellIcon1&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo(&quot;GUI.SpellIcon2&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo(&quot;GUI.SpellIcon3&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
end


-- HealBot SpellIcon 2
GUI.SpellIcon2:setClickCallback(&quot;toggle_Spell2&quot;)
echo(&quot;GUI.SpellIcon2&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )


function toggle_Spell2()
	HealBot_OnClick_Spell = spell2
	echo(&quot;GUI.SpellIcon2&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;Crimson&quot;&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
	cecho(calign(spell2, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Set]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
	echo(&quot;\n&quot;)
	cecho(calign(spell2, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Set]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
	echo(&quot;\n\n&quot;)
	echo(&quot;GUI.SpellIcon1&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo(&quot;GUI.SpellIcon2&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo(&quot;GUI.SpellIcon3&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
end

-- HealBot SpellIcon 3
GUI.SpellIcon3:setClickCallback(&quot;toggle_Spell3&quot;)
echo(&quot;GUI.SpellIcon3&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )


function toggle_Spell3()
	HealBot_OnClick_Spell = spell3
	echo(&quot;GUI.SpellIcon3&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;Crimson&quot;&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
	cecho(calign(spell3, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Set]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
	echo(&quot;\n&quot;)
	cecho(calign(spell3, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[Spell Set]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;khaki&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
	echo(&quot;\n\n&quot;)
	echo(&quot;GUI.SpellIcon1&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo(&quot;GUI.SpellIcon2&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;khaki&quot;&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo(&quot;GUI.SpellIcon3&quot;, [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color=&quot;DodgerBlue&quot;&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
end</script>
                            <eventHandlerList/>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>HealBot Buttons</name>
                            <packageName></packageName>
                            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

GUI.SpellIconCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  border-radius: 3px;
  margin: 3px;
  qproperty-wordWrap: true;
]])

for i=1,3 do
  GUI[&quot;SpellIcon&quot;..i] = Geyser.Label:new({
    name = &quot;GUI.SpellIcon&quot;..i,
  },GUI.SpellToggles)
  GUI[&quot;SpellIcon&quot;..i]:setStyleSheet(GUI.SpellIconCSS:getCSS())
  GUI[&quot;SpellIcon&quot;..i]:echo(&quot;&lt;center&gt;Spell &quot;..i)
end

</script>
                            <eventHandlerList/>
                        </Script>
                    </ScriptGroup>
                </ScriptGroup>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>YATCO-23</name>
                <packageName>YATCO-23(2)</packageName>
                <script></script>
                <eventHandlerList/>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>Demonnic</name>
                    <packageName></packageName>
                    <script></script>
                    <eventHandlerList/>
                    <ScriptGroup isActive="yes" isFolder="yes">
                        <name>Shared</name>
                        <packageName></packageName>
                        <script>--Bootstrapping variables/etc. Don't touch this unless you really know what you're doing

--I mean it. I'll point. AND laugh. loudly. 
demonnic = demonnic or {}
demonnic.config = demonnic.config or {}
demonnic.balances = demonnic.balances or {}
demonnic.balances.balance = demonnic.balances.balance or 1
demonnic.balances.equilibrium = demonnic.balances.equilibrium or 1
demonnic.debug = demonnic.debug or {}
demonnic.debug.active = demonnic.debug.active or nil
demonnic.debug.categories = demonnic.debug.categories or { }


function demonnic:echo(msg)
 cecho(string.format(&quot;\n&lt;blue&gt;(&lt;green&gt;Demonnic&lt;blue&gt;):&lt;white&gt; %s&quot;, msg))
end</script>
                        <eventHandlerList/>
                        <Script isActive="yes" isFolder="no">
                            <name>Debugging</name>
                            <packageName></packageName>
                            <script>--Adds debugging functionality 

function demonnic:Debug(category,debugData)
   if category then
      if table.contains(demonnic.debug.categories, category) then
         if type(debugData) == &quot;table&quot; then
            demonnic:echo(&quot;&lt;red&gt;DEBUG &quot; .. category .. &quot;:&lt;white&gt;&quot;)
            display(debugData)
         elseif type(debugData) == &quot;string&quot; or type(debugData) == &quot;number&quot; then
            demonnic:echo(&quot;&lt;red&gt;DEBUG &quot; .. category .. &quot;:&lt;white&gt; &quot; .. debugData .. &quot;\n&quot; )
         else
            demonnic:echo(&quot;&lt;red&gt;DEBUG &quot; .. category .. &quot;:&lt;white&gt; &quot; .. tostring(debugData) .. &quot;\n&quot; )
         end
      end
   else
      if type(debugData) == &quot;table&quot; then
         demonnic:echo(&quot;&lt;red&gt;DEBUG:&lt;white&gt;&quot;)
         display(debugData)
      elseif type(debugData) == &quot;string&quot; or type(debugData) == &quot;number&quot; then
         demonnic:echo(&quot;&lt;red&gt;DEBUG:&lt;white&gt; &quot; .. debugData)
      else
         demonnic:echo(&quot;&lt;red&gt;DEBUG:&lt;white&gt; &quot; .. tostring(debugData))
      end
   end
end

function demonnic:printDebug(category, debugData)
   if not demonnic.debug.active then return end
   demonnic:Debug(category, debugData)
end

function demonnic:toggleDebug()
   if demonnic.debug.active then demonnic.debug.active = nil
   else demonnic.debug.active = true
   end
   demonnic:echo(&quot;Debugging is currently &quot; .. (( demonnic.debug.active and &quot;&lt;green&gt;ON&lt;white&gt;&quot;) or &quot;&lt;red&gt;OFF&lt;white&gt;&quot;))
end

function demonnic:watchCategory( category )
   if table.contains(demonnic.debug.categories, category) then
      for i,v in ipairs(demonnic.debug.categories) do
         if v == category then
            table.remove(demonnic.debug.categories, i)
         end
      end
      demonnic:echo(&quot;No longer watching the '&lt;red&gt;&quot;..category..&quot;&lt;white&gt;' category.&quot;) 
   else
      table.insert(demonnic.debug.categories, category)
      demonnic:echo(&quot;Now watching the '&lt;red&gt;&quot;..category..&quot;&lt;white&gt;' category.&quot;)
   end
   demonnic:echo(&quot;Debugging is currently &quot; .. (( demonnic.debug.active and &quot;&lt;green&gt;ON&lt;white&gt;&quot;) or &quot;&lt;red&gt;OFF&lt;white&gt;&quot;))
end

function demonnic:listCategories()
   if #demonnic.debug.categories &gt; 0 then
      demonnic:echo(&quot;You are currently watching the following categories:\n&quot; .. table.concat(demonnic.debug.categories,&quot;, &quot;) )
   else
      demonnic:echo(&quot;You are not watching any debugs.&quot;)
   end
end
</script>
                            <eventHandlerList/>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>demonnicVitals</name>
                            <packageName></packageName>
                            <script>--Set some vital statistics. Will work with both ATCP and GMCP. 

function demonnicVitals( msg, arg )
  demonnic.nextLevel = tonumber(gmcp.Char.Vitals.nl)
  demonnic.curHealth = tonumber(gmcp.Char.Vitals.hp)    
  demonnic.maxHealth = tonumber(gmcp.Char.Vitals.maxhp)
  demonnic.curMana = tonumber(gmcp.Char.Vitals.mp)
  demonnic.maxMana = tonumber(gmcp.Char.Vitals.maxmp)
  demonnic.curEgo = tonumber(gmcp.Char.Vitals.ego)
  demonnic.maxEgo = tonumber(gmcp.Char.Vitals.maxego)
  demonnic.curPower = tonumber(gmcp.Char.Vitals.pow)
  demonnic.maxPower = tonumber(gmcp.Char.Vitals.maxpow)
  demonnic.curWillpower = tonumber(gmcp.Char.Vitals.wp)
  demonnic.maxWillpower = tonumber(gmcp.Char.Vitals.maxwp)
  demonnic.curEndurance = tonumber(gmcp.Char.Vitals.ep)
  demonnic.maxEndurance = tonumber(gmcp.Char.Vitals.maxep)
end</script>
                            <eventHandlerList>
                                <string>gmcp.Char</string>
                            </eventHandlerList>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>Align</name>
                            <packageName></packageName>
                            <script>
function align(str,options) --str is a string, options is a table
--[[ If they sent anything but a table as the second argument, return useful
info. But if they didn't send a second argument then that's ok, the defaults
will be enough to get by and just center the txt
]]--
  if (type(options) ~= &quot;table&quot;) and (options ~= nil) then return &quot;You call this with align(\&quot;some text to format\&quot;, &lt;table of options&gt;. Pls check comments for what options and usage information&quot; end
  options = options or {} --if they sent options, don't overwrite them
  options.width = options.width or 80 --default line length of 80
  options.alignment = options.alignment or &quot;center&quot; --if we don't specify, it's centered
  options.cap = options.cap or &quot;&quot; --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or &quot; &quot; --default spacer is.. well.. space
  options.inside = options.inside or false --by default, when centering, formation as spacers|cap|text|cap|spacers
  if not options.mirror == false then options.mirror = options.mirror or true end--by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen)/2,1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen)%2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen) -- trim it up right!
    capLen = string.len(options.cap)
  end --otherwise, don't mess with it

 
  if options.alignment == &quot;center&quot; then --we're going to center something
    leftPadLen = math.floor((options.width - strLen)/2,1) - 1 --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen)%2) --and on the right
    if options.mirror then --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, &quot;&lt;&quot;, &quot;&gt;&quot;)
      rightCap = string.gsub(rightCap, &quot;%[&quot;, &quot;%]&quot;)
      rightCap = string.gsub(rightCap, &quot;{&quot;, &quot;}&quot;)
      rightCap = string.gsub(rightCap, &quot;%(&quot;, &quot;%)&quot;)
      rightCap = string.reverse(rightCap)
    end --otherwise, they'll be the same, so don't do anything
    str = string.format(&quot; %s &quot;, str)
   
  elseif options.alignment == &quot;right&quot; then --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = &quot;&quot;
    str = string.format(&quot; %s&quot;, str)
   
  else --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen -1
    leftCap = &quot;&quot;
    str = string.format(&quot;%s &quot;, str)
  end--that's it, took care of both left, right, and center formattings, now to output the durn thing.
 
  if options.inside then
  --if we're placing the repated spacer inside
  --&quot;=====endcap some text endcap=====&quot;
  --&quot;=====endcap some text pacdne=====&quot;
  --&quot;=================endcap some text&quot;
  --&quot;some text endcap=================&quot;
    return leftCap .. string.rep(options.spacer, (leftPadLen - capLen)) .. str ..string.rep(options.spacer, (rightPadLen - capLen)).. rightCap
  else
  --otherwise, it''s be the spaces on the 'inside'
  -- &quot;endcap===== some text =====endcap&quot;
  -- &quot;endcap===== some text =====pacdne&quot;
  -- &quot;endcap================= some text&quot;
  -- &quot;some text =================endcap&quot;
    return string.rep(options.spacer, (leftPadLen - capLen)) .. leftCap .. str .. rightCap .. string.rep(options.spacer, (rightPadLen - capLen))
  end
end


function calign(str,options) --str is a string, options is a table
--[[ If they sent anything but a table as the second argument, return useful 
info. But if they didn't send a second argument then that's ok, the defaults 
will be enough to get by and just center the txt
]]--
  if (not type(options) == &quot;table&quot;) and (not options == nil) then return &quot;You call this with align(\&quot;some text to format\&quot;, &lt;table of options&gt;. Pls check comments for what options and usage information&quot; end 
  options = options or {} --if they sent options, don't overwrite them
  options.width = options.width or 80 --default line length of 80
  options.alignment = options.alignment or &quot;center&quot; --if we don't specify, it's centered
  options.cap = options.cap or &quot;&quot; --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or &quot; &quot; --default spacer is.. well.. space
  options.inside = options.inside or false --by default, when centering, formation as spacers|cap|text|cap|spacers
  options.capColor = options.capColor or &quot;&lt;white&gt;&quot;--by default, don't change the color of the caps
  options.spacerColor = options.spacerColor or &quot;&lt;white&gt;&quot;
  options.textColor = options.textColor or &quot;&lt;white&gt;&quot;--or the text
  if not options.mirror == false then options.mirror = options.mirror or true end--by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen)/2,1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen)%2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen) -- trim it up right!
    capLen = string.len(options.cap)
  end --otherwise, don't mess with it

  
  if options.alignment == &quot;center&quot; then --we're going to center something
    leftPadLen = math.floor((options.width - strLen)/2,1) - 1 --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen)%2) --and on the right
    if options.mirror then --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, &quot;&lt;&quot;, &quot;&gt;&quot;)
      rightCap = string.gsub(rightCap, &quot;%[&quot;, &quot;%]&quot;)
      rightCap = string.gsub(rightCap, &quot;{&quot;, &quot;}&quot;)
      rightCap = string.gsub(rightCap, &quot;%(&quot;, &quot;%)&quot;)
      rightCap = string.reverse(rightCap)
    end --otherwise, they'll be the same, so don't do anything
    str = string.format(&quot; %s &quot;, str)
    
  elseif options.alignment == &quot;right&quot; then --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = &quot;&quot;
    str = string.format(&quot; %s&quot;, str)
    
  else --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen -1
    leftCap = &quot;&quot;
    str = string.format(&quot;%s &quot;, str)
  end--that's it, took care of both left, right, and center formattings, now to output the durn thing. 
  
  if options.inside then 
  --if we're placing the repated spacer inside
  --&quot;=====endcap some text endcap=====&quot; 
  --&quot;=====endcap some text pacdne=====&quot;
  --&quot;=================endcap some text&quot; 
  --&quot;some text endcap=================&quot;
    return options.capColor .. leftCap .. options.spacerColor.. string.rep(options.spacer, (leftPadLen - capLen)) .. options.textColor .. str .. options.spacerColor ..string.rep(options.spacer, (rightPadLen - capLen)) .. options.capColor .. rightCap
  else 
  --otherwise, it''s be the spaces on the 'inside'
  -- &quot;endcap===== some text =====endcap&quot;
  -- &quot;endcap===== some text =====pacdne&quot; 
  -- &quot;endcap================= some text&quot; 
  -- &quot;some text =================endcap&quot;
    return options.spacerColor .. string.rep(options.spacer, (leftPadLen - capLen)) .. options.capColor .. leftCap .. options.textColor .. str .. options.capColor .. rightCap .. options.spacerColor .. string.rep(options.spacer, (rightPadLen - capLen))
  end
end

function dalign(str,options) --str is a string, options is a table
--[[ If they sent anything but a table as the second argument, return useful 
info. But if they didn't send a second argument then that's ok, the defaults 
will be enough to get by and just center the txt
]]--
  if (not type(options) == &quot;table&quot;) and (not options == nil) then return &quot;You call this with align(\&quot;some text to format\&quot;, &lt;table of options&gt;. Pls check comments for what options and usage information&quot; end 
  options = options or {} --if they sent options, don't overwrite them
  options.width = options.width or 80 --default line length of 80
  options.alignment = options.alignment or &quot;center&quot; --if we don't specify, it's centered
  options.cap = options.cap or &quot;&quot; --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or &quot; &quot; --default spacer is.. well.. space
  options.inside = options.inside or false --by default, when centering, formation as spacers|cap|text|cap|spacers
  options.capColor = options.capColor or &quot;&lt;255,255,255&gt;&quot;--by default, don't change the color of the caps
  options.spacerColor = options.spacerColor or &quot;&lt;255,255,255&gt;&quot; 
  options.textColor = options.textColor or &quot;&lt;255,255,255&gt;&quot;--or the text
  if not options.mirror == false then options.mirror = options.mirror or true end--by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen)/2,1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen)%2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen) -- trim it up right!
    capLen = string.len(options.cap)
  end --otherwise, don't mess with it

  
  if options.alignment == &quot;center&quot; then --we're going to center something
    leftPadLen = math.floor((options.width - strLen)/2,1) - 1 --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen)%2) --and on the right
    if options.mirror then --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, &quot;&lt;&quot;, &quot;&gt;&quot;)
      rightCap = string.gsub(rightCap, &quot;%[&quot;, &quot;%]&quot;)
      rightCap = string.gsub(rightCap, &quot;{&quot;, &quot;}&quot;)
      rightCap = string.gsub(rightCap, &quot;%(&quot;, &quot;%)&quot;)
      rightCap = string.reverse(rightCap)
    end --otherwise, they'll be the same, so don't do anything
    str = string.format(&quot; %s &quot;, str)
    
  elseif options.alignment == &quot;right&quot; then --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = &quot;&quot;
    str = string.format(&quot; %s&quot;, str)
    
  else --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen -1
    leftCap = &quot;&quot;
    str = string.format(&quot;%s &quot;, str)
  end--that's it, took care of both left, right, and center formattings, now to output the durn thing. 
  
  if options.inside then 
  --if we're placing the repated spacer inside
  --&quot;=====endcap some text endcap=====&quot; 
  --&quot;=====endcap some text pacdne=====&quot;
  --&quot;=================endcap some text&quot; 
  --&quot;some text endcap=================&quot;
    return options.capColor .. leftCap .. options.spacerColor.. string.rep(options.spacer, (leftPadLen - capLen)) .. options.textColor .. str .. options.spacerColor ..string.rep(options.spacer, (rightPadLen - capLen)) .. options.capColor .. rightCap
  else 
  --otherwise, it''s be the spaces on the 'inside'
  -- &quot;endcap===== some text =====endcap&quot;
  -- &quot;endcap===== some text =====pacdne&quot; 
  -- &quot;endcap================= some text&quot; 
  -- &quot;some text =================endcap&quot;
    return options.spacerColor .. string.rep(options.spacer, (leftPadLen - capLen)) .. options.capColor .. leftCap .. options.textColor .. str .. options.capColor .. rightCap .. options.spacerColor .. string.rep(options.spacer, (rightPadLen - capLen))
  end
end

function halign(str,options) --str is a string, options is a table
--[[ If they sent anything but a table as the second argument, return useful 
info. But if they didn't send a second argument then that's ok, the defaults 
will be enough to get by and just center the txt
]]--
  if (not type(options) == &quot;table&quot;) and (not options == nil) then return &quot;You call this with align(\&quot;some text to format\&quot;, &lt;table of options&gt;. Pls check comments for what options and usage information&quot; end 
  options = options or {} --if they sent options, don't overwrite them
  options.width = options.width or 80 --default line length of 80
  options.alignment = options.alignment or &quot;center&quot; --if we don't specify, it's centered
  options.cap = options.cap or &quot;&quot; --default endcap of nothing (an empty string, technically)
  options.spacer = options.spacer or &quot; &quot; --default spacer is.. well.. space
  options.inside = options.inside or false --by default, when centering, formation as spacers|cap|text|cap|spacers
  options.capColor = options.capColor or &quot;|cFFFFFF&quot;--by default, don't change the color of the caps
  options.spacerColor = options.spacerColor or &quot;|cFFFFFF&quot; 
  options.textColor = options.textColor or &quot;|cFFFFFF&quot;--or the text
  if not options.mirror == false then options.mirror = options.mirror or true end--by default, we do want to use mirroring for the caps
  local strLen = string.len(str)
  local leftCap = options.cap
  local rightCap = options.cap
  local leftPadLen = math.floor((options.width - strLen)/2,1) - 1
  local rightPadLen = leftPadLen + ((options.width - strLen)%2)
  local maxPad = 0
  local capLen = string.len(options.cap)
  if capLen &gt; leftPadLen then --if the cap is bigger than the left total padding
    options.cap = options.cap:sub(1, leftPadLen) -- trim it up right!
    capLen = string.len(options.cap)
  end --otherwise, don't mess with it

  
  if options.alignment == &quot;center&quot; then --we're going to center something
    leftPadLen = math.floor((options.width - strLen)/2,1) - 1 --get the padding needed on the left
    rightPadLen = leftPadLen + ((options.width - strLen)%2) --and on the right
    if options.mirror then --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, &quot;&lt;&quot;, &quot;&gt;&quot;)
      rightCap = string.gsub(rightCap, &quot;%[&quot;, &quot;%]&quot;)
      rightCap = string.gsub(rightCap, &quot;{&quot;, &quot;}&quot;)
      rightCap = string.gsub(rightCap, &quot;%(&quot;, &quot;%)&quot;)
      rightCap = string.reverse(rightCap)
    end --otherwise, they'll be the same, so don't do anything
    str = string.format(&quot; %s &quot;, str)
    
  elseif options.alignment == &quot;right&quot; then --we'll right-align the text
    leftPadLen = options.width - strLen - 1
    rightPadLen = 0
    rightCap = &quot;&quot;
    str = string.format(&quot; %s&quot;, str)
    
  else --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    leftPadLen = 0
    rightPadLen = options.width - strLen -1
    leftCap = &quot;&quot;
    str = string.format(&quot;%s &quot;, str)
  end--that's it, took care of both left, right, and center formattings, now to output the durn thing. 
  
  if options.inside then 
  --if we're placing the repated spacer inside
  --&quot;=====endcap some text endcap=====&quot; 
  --&quot;=====endcap some text pacdne=====&quot;
  --&quot;=================endcap some text&quot; 
  --&quot;some text endcap=================&quot;
    return options.capColor .. leftCap .. options.spacerColor.. string.rep(options.spacer, (leftPadLen - capLen)) .. options.textColor .. str .. options.spacerColor ..string.rep(options.spacer, (rightPadLen - capLen)) .. options.capColor .. rightCap
  else 
  --otherwise, it''s be the spaces on the 'inside'
  -- &quot;endcap===== some text =====endcap&quot;
  -- &quot;endcap===== some text =====pacdne&quot; 
  -- &quot;endcap================= some text&quot; 
  -- &quot;some text =================endcap&quot;
    return options.spacerColor .. string.rep(options.spacer, (leftPadLen - capLen)) .. options.capColor .. leftCap .. options.textColor .. str .. options.capColor .. rightCap .. options.spacerColor .. string.rep(options.spacer, (rightPadLen - capLen))
  end
end
 </script>
                            <eventHandlerList/>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>Geyser Additions</name>
                            <packageName></packageName>
                            <script>function Geyser.MiniConsole:clear()
   clearWindow(self.name)
end

function Geyser.MiniConsole:append()
  appendBuffer(self.name)
end</script>
                            <eventHandlerList/>
                        </Script>
                    </ScriptGroup>
                    <ScriptGroup isActive="yes" isFolder="yes">
                        <name>Tabbed Chat</name>
                        <packageName></packageName>
                        <script>--Do not remove the following lines. Or change them.
demonnic = demonnic or {}
demonnic.chat = demonnic.chat or {}
demonnic.chat.tabsToBlink = demonnic.chat.tabsToBlink or {}
demonnic.chat.config = demonnic.chat.config or {}
demonnic.chat.tabs = demonnic.chat.tabs or {}
demonnic.chat.windows = demonnic.chat.windows or {}
demonnic.chat.config.activeColors = demonnic.chat.config.activeColors or {}
demonnic.chat.config.inactiveColors = demonnic.chat.config.inactiveColors or {}</script>
                        <eventHandlerList/>
                        <Script isActive="yes" isFolder="no">
                            <name>Configuration Options</name>
                            <packageName></packageName>
                            <script>--[[
This is where all of the configuration options can be set. 
Anything I've put in this script object can be changed, but please do pay attention to what you're doing.
If you change one of the values to something it shouldn't be, you could break it. 
]]

--This is where you tell it to use tabbed chat.
demonnic.chat.use = true

--[[
The timestamp option is set here.
Set to false if you do not want any timestamps displayed for chat.
If you do want it displayed, set to the string for the format you wish. 
see http://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for information
how to format the string
]]
demonnic.chat.config.timestamp = &quot;HH:mm:ss&quot;

--[[ Should we use our own colors for the timestamp?
Set to true if you want to specify foreground and background colors
for the timestamp.
Set to false if you want the timestamps background and foreground
colors to match that of the mud output.
]]
demonnic.chat.config.timestampCustomColor = false
--[[
and what foreground color? You can either use one of the 'named' colors
(see http://wiki.mudlet.org/images/c/c3/ShowColors.png for available colors)
demonnic.chat.config.timestampFG = &quot;slate_grey&quot;

Or you can use a table of R,G,B values. 
demonnic.chat.config.timestampFG = {
  255,
    0,
    0,
}
then the foreground for the timestamp would be 255 read, 100 green, and 0 blue
]]
demonnic.chat.config.timestampFG = &quot;red&quot;

--and background? Same rules as for the foreground above
demonnic.chat.config.timestampBG = &quot;blue&quot;

--[[
This is where you say what corner of the screen you want the tabbed chat on
Valid settings are &quot;topright&quot;, &quot;topleft&quot;, &quot;bottomright&quot;, &quot;bottomleft&quot;
]]--
demonnic.chat.config.location = &quot;topright&quot;

--[[
This is a table of channels you would like.
AKA the place you tell the script what tabs you want.
Each entry must be a string. The defaults should be a pretty effective guide.
]]

demonnic.chat.config.channels = {
  &quot;All&quot;,
  &quot;RaceWar&quot;,
  &quot;Score&quot;,
  &quot;Attrib&quot;,
  &quot;Skills&quot;,
  &quot;Misc&quot;,
}


--Set this to the name of the channel you want to have everything sent to. 
--Per the default, this would be the &quot;All&quot; channel. If you have a different name for it:
--
--demonnic.chat.config.Alltab = &quot;Bucket&quot;  
--
--And if you don't want it turned on at all:
--
--demonnic.chat.config.Alltab = false

demonnic.chat.config.Alltab = &quot;All&quot;



---------------------------------------------------------------------------------
--                                                                             --
--The infamous blinking stuff!!!                                               --
--                                                                             --
---------------------------------------------------------------------------------

--[[
Do you want tabs to blink when you get new messages, until you click on the tab?
True if yes, false if no.
]]
demonnic.chat.config.blink = false

--How long (in seconds) between blinks? For example, 1 would mean a 1 second pause in between blinks.
demonnic.chat.config.blinkTime = 3

--Blink if the bucket tab (&quot;All&quot; by default, but configured above) is in focus?
demonnic.chat.config.blinkFromAll = false




--Font size for the chat messages

demonnic.chat.config.fontSize = 9

--[[
Should we preserve the formatting of the text. 
Or should we set the background of it to match the window color?
Set this to false if you want the background for all chat to match the background of the window.
Useful if you change the background from black, and don't like the way the pasted chat makes blocks in it
]]

demonnic.chat.config.preserveBackground = false

--[[
Gag the chat lines in the main window?
defaults to false, set to true if you want to gag.
]]

demonnic.chat.config.gag = false

--[[
Number of lines of chat visible at once. 
Will determine how tall the window for the chats is.
]]

demonnic.chat.config.lines = 30

--[[
Number of characters to wrap the chatlines at.
This will also determine how wide the chat windows are.
]]

demonnic.chat.config.width = 65

--[[
Set the color for the active tab. R,G,B format.
The default here is a brightish green
]]

demonnic.chat.config.activeColors = {
  r = 0,
  g = 180,
  b = 0,
}

--[[
Set the color for the inactive tab. R,G,B format.
The default here is a drab grey
]]

demonnic.chat.config.inactiveColors = {
  r = 60,
  g = 60,
  b = 60,
}

--[[
Set the color for the chat window itself. R,G,B format.
Defaulted to the black of my twisted hardened soul. Or something.
]]

demonnic.chat.config.windowColors = {
  r = 0,
  g = 0,
  b = 0,
}

--[[
Set the color for the text on the active tab. Uses color names.
Set the default to purple. So the tab you're looking at, by default will be purple on bright green. 
Did I mention I'm a bit colorblind?
]]

demonnic.chat.config.activeTabText = &quot;purple&quot;

--[[
Set the color for the text on the inactive tabs. Uses color names.
Defaulted this to white. So the tabs you're not looking at will be white text on boring grey background.
]]

demonnic.chat.config.inactiveTabText = &quot;white&quot;

--[[
have to make sure a currentTab is set... 
so we'll use the one for the bucket, or the first one in the channels table
Or, you know... what it's currently set to, if it's already set.
]]
demonnic.chat.currentTab = demonnic.chat.currentTab or demonnic.chat.config.Alltab or demonnic.chat.config.channels[1]
</script>
                            <eventHandlerList/>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>Code</name>
                            <packageName></packageName>
                            <script>--[[
If the label callbacks ever decide to start taking a function which is part of a table, 0then this will change.
Or if it's modified to take actual functions. Anonymouse function clickcallback would be awfully nice.
]]

function demonnicChatSwitch(chat)
  local r = demonnic.chat.config.inactiveColors.r
  local g = demonnic.chat.config.inactiveColors.g
  local b = demonnic.chat.config.inactiveColors.b
  local newr = demonnic.chat.config.activeColors.r
  local newg = demonnic.chat.config.activeColors.g
  local newb = demonnic.chat.config.activeColors.b
  local oldchat = demonnic.chat.currentTab
  if demonnic.chat.currentTab ~= chat then
    demonnic.chat.windows[oldchat]:hide()
    demonnic.chat.tabs[oldchat]:setColor(r,g,b)
    demonnic.chat.tabs[oldchat]:echo(oldchat, demonnic.chat.config.inactiveTabText, &quot;c&quot;)
    if demonnic.chat.config.blink and demonnic.chat.tabsToBlink[chat] then
      demonnic.chat.tabsToBlink[chat] = nil
    end
    if demonnic.chat.config.blink and chat == demonnic.chat.config.Alltab then
      demonnic.chat.tabsToBlink = {}
    end
  end
  demonnic.chat.tabs[chat]:setColor(newr,newg,newb)
  demonnic.chat.tabs[chat]:echo(chat, demonnic.chat.config.activeTabText, &quot;c&quot;)
  demonnic.chat.windows[chat]:show()
  demonnic.chat.currentTab = chat  
end

function demonnic.chat:resetUI()
  demonnic.chat.container = Geyser.Container:new(demonnic.chat[demonnic.chat.config.location](),GUI.ChatBox1)
  demonnic.chat.tabBox = Geyser.HBox:new({
    x=0,
    y=0,
    width = &quot;100%&quot;,
    height = &quot;20px&quot;,
    name = &quot;DemonChatTabs&quot;,
--},demonnic.chat.container)
},GUI.ChatBox1)

end

function demonnic.chat:create()
  --reset the UI
  demonnic.chat:resetUI()
  --Set some variables locally to increase readability
  local r = demonnic.chat.config.inactiveColors.r
  local g = demonnic.chat.config.inactiveColors.g
  local b = demonnic.chat.config.inactiveColors.b
  local winr = demonnic.chat.config.windowColors.r
  local wing = demonnic.chat.config.windowColors.g
  local winb = demonnic.chat.config.windowColors.b

  --iterate the table of channels and create some windows and tabs
  for i,tab in ipairs(demonnic.chat.config.channels) do
    demonnic.chat.tabs[tab] = Geyser.Label:new({
      name=string.format(&quot;tab%s&quot;, tab),
    }, demonnic.chat.tabBox)
    demonnic.chat.tabs[tab]:echo(tab, demonnic.chat.config.inactiveTabText, &quot;c&quot;)
    demonnic.chat.tabs[tab]:setColor(r,g,b)
    demonnic.chat.tabs[tab]:setClickCallback(&quot;demonnicChatSwitch&quot;, tab)
    demonnic.chat.windows[tab] = Geyser.MiniConsole:new({
--      fontSize = demonnic.chat.config.fontSize,
      x = 0,
      y = 25,
      height = &quot;90%&quot;,
      width = &quot;100%&quot;,
      name = string.format(&quot;win%s&quot;, tab),
    }, demonnic.chat.container)
    demonnic.chat.windows[tab]:setFontSize(demonnic.chat.config.fontSize)
    demonnic.chat.windows[tab]:setColor(winr,wing,winb)
    demonnic.chat.windows[tab]:setWrap(demonnic.chat.config.width)
    demonnic.chat.windows[tab]:hide()
  end
  local showme = demonnic.chat.config.Alltab or demonnic.chat.config.channels[1]
  demonnicChatSwitch(showme)
  --start the blink timers, if enabled
  if demonnic.chat.config.blink and not demonnic.chat.blinkTimerOn then
    demonnic.chat:blink()
  end
end

function demonnic.chat:append(chat)
  local r = demonnic.chat.config.windowColors.r
  local g = demonnic.chat.config.windowColors.g
  local b = demonnic.chat.config.windowColors.b
  selectCurrentLine()
  local ofr,ofg,ofb = getFgColor()
  local obr,obg,obb = getBgColor()
  if demonnic.chat.config.preserveBackground then
    setBgColor(r,g,b)
  end
  copy()
  if demonnic.chat.config.timestamp then
    local timestamp = getTime(true, demonnic.chat.config.timestamp)
    local tsfg = {}
    local tsbg = {}
    local colorLeader = &quot;&quot;
    if demonnic.chat.config.timestampCustomColor then
      if type(demonnic.chat.config.timestampFG) == &quot;string&quot; then
        tsfg = color_table[demonnic.chat.config.timestampFG]
      else
        tsfg = demonnic.chat.config.timestampFG
      end
      if type(demonnic.chat.config.timestampBG) == &quot;string&quot; then
        tsbg = color_table[demonnic.chat.config.timestampBG]
      else
        tsbg = demonnic.chat.config.timestampBG
      end
      colorLeader = string.format(&quot;&lt;%s,%s,%s:%s,%s,%s&gt;&quot;,tsfg[1],tsfg[2],tsfg[3],tsbg[1],tsbg[2],tsbg[3])
    else
      colorLeader = string.format(&quot;&lt;%s,%s,%s:%s,%s,%s&gt;&quot;,ofr,ofg,ofb,obr,obg,obb)
    end
    local fullstamp = string.format(&quot;%s%s&quot;,colorLeader,timestamp)
      demonnic.chat.windows[chat]:decho(fullstamp)
      demonnic.chat.windows[chat]:echo(&quot; &quot;)
      if demonnic.chat.config.Alltab then 
        demonnic.chat.windows[demonnic.chat.config.Alltab]:decho(fullstamp)
        demonnic.chat.windows[demonnic.chat.config.Alltab]:echo(&quot; &quot;)
      end
  end
  demonnic.chat.windows[chat]:append()
  if demonnic.chat.config.gag then 
    deleteLine() 
    tempLineTrigger(1,1, [[if isPrompt() then deleteLine() end]])
  end
  if demonnic.chat.config.Alltab then appendBuffer(string.format(&quot;win%s&quot;, demonnic.chat.config.Alltab)) end
  if demonnic.chat.config.blink and chat ~= demonnic.chat.currentTab then 
    if (demonnic.chat.config.Alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end



function demonnic.chat:blink()
  if demonnic.chat.blinkID then killTimer(demonnic.chat.blinkID) end
  if not demonnic.chat.config.blink then 
    demonnic.chat.blinkTimerOn = false
    return 
  end
  for tab,_ in pairs(demonnic.chat.tabsToBlink) do
    demonnic.chat.tabs[tab]:flash()
  end
  demonnic.chat.blinkID = tempTimer(demonnic.chat.config.blinkTime, function () demonnic.chat:blink() end)
end

function demonnic.chat:topright()
  return {
    fontSize = demonnic.chat.config.fontSize,
    x=string.format(&quot;-%sc&quot;,demonnic.chat.config.width + 2),
    y=0,
    width=&quot;-15px&quot;,
    height=string.format(&quot;%ic&quot;, demonnic.chat.config.lines + 2),
  }
end

function demonnic.chat:topleft()
  return {
    fontSize = demonnic.chat.config.fontSize,
    x=0,
    y=0,
    width=string.format(&quot;%sc&quot;,demonnic.chat.config.width),
    height=string.format(&quot;%ic&quot;, demonnic.chat.config.lines + 2),
  }
end

function demonnic.chat:bottomright()
  return {
    fontSize = demonnic.chat.config.fontSize,
    x=string.format(&quot;-%sc&quot;,demonnic.chat.config.width + 2),
    y=string.format(&quot;-%sc&quot;,demonnic.chat.config.lines + 2),
    width=&quot;-15px&quot;,
    height=string.format(&quot;%ic&quot;, demonnic.chat.config.lines + 2),
  }
end

function demonnic.chat:bottomleft()
  return {
    fontSize = demonnic.chat.config.fontSize,
    x=0,
    y=string.format(&quot;-%sc&quot;,demonnic.chat.config.lines + 2),
    width=string.format(&quot;%sc&quot;,demonnic.chat.config.width),
    height=string.format(&quot;%ic&quot;, demonnic.chat.config.lines + 2),
  }
end</script>
                            <eventHandlerList/>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>demonnicOnStart</name>
                            <packageName></packageName>
                            <script>function demonnicOnStart()
  if demonnic.chat.use then
    demonnic.chat:create()
  end
end</script>
                            <eventHandlerList>
                                <string>sysLoadEvent</string>
                            </eventHandlerList>
                        </Script>
                        <Script isActive="yes" isFolder="no">
                            <name>echo functions</name>
                            <packageName></packageName>
                            <script>
function demonnic.chat:cecho(chat, message)
  local alltab = demonnic.chat.config.Alltab
  local blink = demonnic.chat.config.blink
  cecho(string.format(&quot;win%s&quot;,chat), message)
  if alltab and chat ~= alltab then 
    cecho(string.format(&quot;win%s&quot;, alltab), message)
  end
  if blink and chat ~= demonnic.chat.currentTab then
    if (alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end

function demonnic.chat:decho(chat, message)
  local alltab = demonnic.chat.config.Alltab
  local blink = demonnic.chat.config.blink
  decho(string.format(&quot;win%s&quot;,chat), message)
  if alltab and chat ~= alltab then 
    decho(string.format(&quot;win%s&quot;, alltab), message)
  end
  if blink and chat ~= demonnic.chat.currentTab then
    if (alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end

function demonnic.chat:hecho(chat, message)
  local alltab = demonnic.chat.config.Alltab
  local blink = demonnic.chat.config.blink
  hecho(string.format(&quot;win%s&quot;,chat), message)
  if alltab and chat ~= alltab then 
    hecho(string.format(&quot;win%s&quot;, alltab), message)
  end
  if blink and chat ~= demonnic.chat.currentTab then
    if (alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end

function demonnic.chat:echo(chat, message)
  local alltab = demonnic.chat.config.Alltab
  local blink = demonnic.chat.config.blink
  echo(string.format(&quot;win%s&quot;,chat), message)
  if alltab and chat ~= alltab then 
    echo(string.format(&quot;win%s&quot;, alltab), message)
  end
  if blink and chat ~= demonnic.chat.currentTab then
    if (alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then
      return
    else
      demonnic.chat.tabsToBlink[chat] = true
    end
  end
end</script>
                            <eventHandlerList/>
                        </Script>
                    </ScriptGroup>
                </ScriptGroup>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>DB_Lua</name>
                <packageName></packageName>
                <script>----------------------------------------------------------------------------------
--- Mudlet DB
----------------------------------------------------------------------------------


-- TODO will be already loaded in LuaGlobal
-----------------------------------------------------------------------------
-- General-purpose useful tools that were needed during development:
-----------------------------------------------------------------------------
if package.loaded[&quot;rex_pcre&quot;] then rex = require&quot;rex_pcre&quot; end

if not display then require&quot;DebugTools&quot; end
if not table.contains then require&quot;TableUtils&quot; end
if not string.trim then require&quot;StringUtils&quot; end

-- TODO those funciton are already definde elsewhere
-- Tests if a table is empty: this is useful in situations where you find
-- yourself wanting to do 'if my_table == {}' and such.
function table.is_empty(tbl)
   return next(tbl) == nil
end

function string.starts(String,Start)
   return string.sub(String,1,string.len(Start))==Start
end

function string.ends(String,End)
   return End=='' or string.sub(String,-string.len(End))==End
end




-- TODO move to StringUtils?
-----------------------------------------------------------------------------
-- Some Date / Time parsing functions.
-----------------------------------------------------------------------------
datetime = {
   _directives = {
      [&quot;%b&quot;] = &quot;(?P&lt;abbrev_month_name&gt;jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)&quot;,
      [&quot;%B&quot;] = &quot;(?P&lt;month_name&gt;january|febuary|march|april|may|june|july|august|september|october|november|december)&quot;,
      [&quot;%d&quot;] = &quot;(?P&lt;day_of_month&gt;\\d{2})&quot;,
      [&quot;%H&quot;] = &quot;(?P&lt;hour_24&gt;\\d{2})&quot;,
      [&quot;%I&quot;] = &quot;(?P&lt;hour_12&gt;\\d{2})&quot;,
      [&quot;%m&quot;] = &quot;(?P&lt;month&gt;\\d{2})&quot;,
      [&quot;%M&quot;] = &quot;(?P&lt;minute&gt;\\d{2})&quot;,
      [&quot;%p&quot;] = &quot;(?P&lt;ampm&gt;am|pm)&quot;,
      [&quot;%S&quot;] = &quot;(?P&lt;second&gt;\\d{2})&quot;,
      [&quot;%y&quot;] = &quot;(?P&lt;year_half&gt;\\d{2})&quot;,
      [&quot;%Y&quot;] = &quot;(?P&lt;year_full&gt;\\d{4})&quot;
   },
   _pattern_cache = {},
   _month_names = {
      [&quot;january&quot;] = 1,
      [&quot;febuary&quot;] = 2,
      [&quot;march&quot;] = 3,
      [&quot;april&quot;] = 4,
      [&quot;may&quot;] = 5,
      [&quot;june&quot;] = 6,
      [&quot;july&quot;] = 7,
      [&quot;august&quot;] = 8,
      [&quot;september&quot;] = 9,
      [&quot;october&quot;] = 10,
      [&quot;november&quot;] = 11,
      [&quot;december&quot;] = 12
   },
   _abbrev_month_names = {
      [&quot;jan&quot;] = 1,
      [&quot;feb&quot;] = 2,
      [&quot;mar&quot;] = 3,
      [&quot;apr&quot;] = 4,
      [&quot;may&quot;] = 5,
      [&quot;jun&quot;] = 6,
      [&quot;jul&quot;]= 7,
      [&quot;aug&quot;]= 8,
      [&quot;sep&quot;] = 9,
      [&quot;oct&quot;] = 10,
      [&quot;nov&quot;] = 11,
      [&quot;dec&quot;] = 12
   }
}

-- the timestamp is stored in UTC time, so work out the difference in seconds
-- from local to UTC time. Credit: https://github.com/stevedonovan/Penlight/blob/master/lua/pl/Date.lua#L85
function datetime:calculate_UTCdiff(ts)
   local date, time = os.date, os.time
   local utc = date('!*t',ts)
   local lcl = date('*t',ts)
   lcl.isdst = false
   return os.difftime(time(lcl), time(utc))
end

-- NOT LUADOC
-- The rex.match function does not return named patterns even if you use named capture
-- groups, but the r:tfind does -- but this only operates on compiled patterns. So,
-- we are caching the conversion of 'simple format' date patterns into a regex, and
-- then compiling them.
function datetime:_get_pattern(format)
   if not datetime._pattern_cache[format] then
      local fmt = rex.gsub(format, &quot;(%[A-Za-z])&quot;,
         function(m)
               return datetime._directives[m] or m
         end
         )

      datetime._pattern_cache[format] = rex.new(fmt, rex.flags().CASELESS)
   end

   return datetime._pattern_cache[format]
end



--- Parses the specified source string, according to the format if given, to return a representation of
--- the date/time. The default format if not specified is: &quot;^%Y-%m-%d %H:%M:%S$&quot; &lt;br/&gt;&lt;br/&gt;
---
--- If as_epoch is provided and true, the return value will be a Unix epoch -- the number
--- of seconds since 1970. This is a useful format for exchanging date/times with other systems. If as_epoch
--- is false, then a Lua time table will be returned. Details of the time tables are provided
--- in the http://www.lua.org/pil/22.1.html. &lt;br/&gt;&lt;br/&gt;
---
--- Supported Format Codes
---   &lt;/pre&gt;
---   %b   Abbreviated Month Name
---   %B   Full Month Name
---   %d   Day of Month
---   %H   Hour (24-hour format)
---   %I   Hour (12-hour format, requires %p as well)
---   %p   AM or PM
---   %m   2-digit month (01-12)
---   %M   2-digit minutes (00-59)
---   %S   2-digit seconds (00-59)
---   %y   2-digit year (00-99), will automatically prepend 20 so 10 becomes 2010 and not 1910.
---   %Y   4-digit year.
---   &lt;/pre&gt;
function datetime:parse(source, format, as_epoch)
   if not format then
      format = &quot;^%Y-%m-%d %H:%M:%S$&quot;
   end

   local fmt = datetime:_get_pattern(format)
   local m = {fmt:tfind(source)}

   if m and m[3] then
      m = m[3]
      dt = {}

      if m.year_half then
         dt.year = tonumber(&quot;20&quot;..m.year_half)
      elseif m.year_full then
         dt.year = tonumber(m.year_full)
      end

      if m.month then
         dt.month = tonumber(m.month)
      elseif m.month_name then
         dt.month = datetime._month_names[m.month_name:lower()]
      elseif m.abbrev_month_name then
         dt.month = datetime._abbrev_month_names[m.abbrev_month_name:lower()]
      end

      dt.day = m.day_of_month

      if m.hour_12 then
         assert(m.ampm, &quot;You must use %p (AM|PM) with %I (12-hour time)&quot;)
         if m.ampm == &quot;PM&quot; then
            dt.hour = 12 + tonumber(m.hour_12)
         else
            dt.hour = tonumber(m.hour_12)
         end
      else
         dt.hour = tonumber(m.hour_24)
      end

      dt.min = tonumber(m.minute)
      dt.sec = tonumber(m.second)
      dt.isdst = false

      if as_epoch then
         return os.time(dt)
      else
         return dt
      end
   else
      return nil
   end
end



-----------------------------------------------------------------------------
-- The database wrapper library
-----------------------------------------------------------------------------
if package.loaded[&quot;luasql.sqlite3&quot;] then luasql = require &quot;luasql.sqlite3&quot; end

db = {}
db.__autocommit = {}
db.__schema = {}
db.__conn = {}

db.debug_sql = false



-- NOT LUADOC
-- Converts the type of a lua object to the equivalent type in SQL
function db:_sql_type(value)
   local t = type(value)

   if t == &quot;number&quot; then
      return &quot;REAL&quot;
   elseif t == &quot;nil&quot; then
      return &quot;NULL&quot;
   elseif t == &quot;table&quot; and value._timestamp ~= nil then
      return &quot;INTEGER&quot;
   else
      return &quot;TEXT&quot;
   end
end



-- NOT LUADOC
-- Converts a data value in Lua to its SQL equivalent; notably it will also escape single-quotes to
-- prevent inadvertant SQL injection.
-- called when generating the schema
function db:_sql_convert(value)
   local t = db:_sql_type(value)

   if value == nil then
      return &quot;NULL&quot;
   elseif t == &quot;TEXT&quot; and type(value) == &quot;string&quot; then
      return '&quot;'..value:gsub(&quot;'&quot;, &quot;''&quot;)..'&quot;'
   elseif t == &quot;NULL&quot; then
      return &quot;NULL&quot;
   elseif t == &quot;INTEGER&quot; then
      -- With db.Timestamp's, a value of false should be interpreted as nil.
      if value._timestamp == false then
         return &quot;NULL&quot;
      end
      return tostring(value._timestamp)
   else
      return tostring(value)
   end
end



-- NOT LUADOC
-- Given a sheet name and the details of an index, this function will return a unique index name to
-- add to the database. The purpose of this is to create unique index names as indexes are tested
-- for existance on each call of db:create and not only on creation. That way new indexes can be
-- added after initial creation.
function db:_index_name(tbl_name, params)
   local t = type(params)

   if t == &quot;string&quot; then
      return &quot;idx_&quot; .. tbl_name .. &quot;_c_&quot; .. params
   elseif assert(t == &quot;table&quot;, &quot;Indexes must be either a string or a table.&quot;) then
      local parts = {&quot;idx&quot;, tbl_name, &quot;c&quot;}
      for _, v in pairs(params) do
         parts[#parts+1] = v
      end
      return table.concat(parts, &quot;_&quot;)
   end
end



-- NOT LUADOC
-- This function returns true if all of the columns referenced in index_columns also exist within
-- the sheet_columns table array. The purpose of this is to raise an error if someone tries to index
-- a column which doesn't currently exist in the schema.
function db:_index_valid(sheet_columns, index_columns)
   if type(index_columns) == &quot;string&quot; then
      if sheet_columns[index_columns] ~= nil then
         return true
      else
         return false
      end
   else
      for _, v in ipairs(index_columns) do
         if sheet_columns[v] == nil then
            db:echo_sql(&quot;\n--&gt; Bad index &quot;..v)
            return false
         end
      end
   end
   return true
end



-- NOT LUADOC
-- The column_spec is either a string or an indexed table. This function returns either &quot;column&quot; or
-- &quot;column1&quot;, &quot;column2&quot; for use in the column specification of INSERT.
function db:_sql_columns(value)
   local colstr = ''
   local t = type(value)

   if t == &quot;table&quot; then
      col_chunks = {}
      for _, v in ipairs(value) do
         -- see https://www.sqlite.org/syntaxdiagrams.html#ordering-term
         if v:lower() == &quot;desc&quot; or v:lower() == &quot;asc&quot; then
            col_chunks[#col_chunks] = col_chunks[#col_chunks] .. &quot; &quot; .. v
         else
            col_chunks[#col_chunks+1] = '&quot;'..v:lower()..'&quot;'
         end
      end

      colstr = table.concat(col_chunks, ',')
   elseif assert(t == &quot;string&quot;,
         &quot;Must specify either a table array or string for index, not &quot;..type(value)) then
      colstr = '&quot;'..value:lower()..'&quot;'
   end
   return colstr
end



-- NOT LUADOC
-- This serves as a very similar function to db:_sql_columns, quoting column names properly but for
-- uses outside of INSERTs.
function db:_sql_fields(values)
   local sql_fields = {}

   for k, v in pairs(values) do
      sql_fields[#sql_fields+1] = '&quot;'..k..'&quot;'
   end

   return   &quot;(&quot;..table.concat(sql_fields, &quot;,&quot;)..&quot;)&quot;
end



-- NOT LUADOC
-- This quotes values to be passed into an INSERT or UPDATE operation in a SQL list. Meaning, it turns
-- {x=&quot;this&quot;, y=&quot;that&quot;, z=1} into ('this', 'that', 1).
-- It is intelligent with data-types; strings are automatically quoted (with internal single quotes
-- escaped), nil turned into NULL, timestamps converted to integers, and such.
function db:_sql_values(values)
   local sql_values = {}

   for k, v in pairs(values) do
      local t = type(v)
      local s = &quot;&quot;

      if t == &quot;string&quot; then
         s = &quot;'&quot;..v:gsub(&quot;'&quot;, &quot;''&quot;)..&quot;'&quot;
      elseif t == &quot;nil&quot; then
         s = &quot;NULL&quot;
      elseif t == &quot;table&quot; and t._timestamp ~= nil then
         if not t._timestamp then
            return &quot;NULL&quot;
         else
            s = &quot;datetime('&quot;..t._timestamp..&quot;', 'unixepoch')&quot;
         end
      else
         s = tostring(v)
      end

      sql_values[#sql_values+1] = s
   end

   return &quot;(&quot;..table.concat(sql_values, &quot;,&quot;)..&quot;)&quot;
end



--- &lt;b&gt;&lt;u&gt;TODO&lt;/u&gt;&lt;/b&gt; db:safe_name(name)
--   On a filesystem level, names are restricted to being alphanumeric only. So, &quot;my_database&quot; becomes
--   &quot;mydatabase&quot;, and &quot;../../../../etc/passwd&quot; becomes &quot;etcpasswd&quot;. This prevents any possible
--   security issues with database names.
function db:safe_name(name)
   name = name:gsub(&quot;[^%ad]&quot;, &quot;&quot;)
   name = name:lower()
   return name
end



--- Creates and/or modifies an existing database. This function is safe to define at a top-level of a Mudlet
--- script: in fact it is reccommended you run this function at a top-level without any kind of guards.
--- If the named database does not exist it will create it. If the database does exist then it will add
--- any columns or indexes which didn't exist before to that database. If the database already has all the
--- specified columns and indexes, it will do nothing. &lt;br/&gt;&lt;br/&gt;
---
--- The database will be called Database_&lt;sanitized database name&gt;.db and will be stored in the
--- Mudlet configuration directory. &lt;br/&gt;&lt;br/&gt;
---
--- Database 'tables' are called 'sheets' consistently throughout this documentation, to avoid confusion
--- with Lua tables. &lt;br/&gt;&lt;br/&gt;
---
--- The schema table must be a Lua table array containing table dictionaries that define the structure and
--- layout of each sheet. &lt;br/&gt;&lt;br/&gt;
---
--- For sheets with unique indexes, you may specify a _violations key to indicate how the db layer handle
--- cases where the unique index is violated. The options you may use are:
---   &lt;pre&gt;
---   FAIL - the default. A hard error is thrown, cancelling the script.
---   IGNORE - The command that would add a record that violates uniqueness just fails silently.
---   REPLACE - The old record which matched the unique index is dropped, and the new one is added to replace it.
---   &lt;/pre&gt;
---
--- @usage Example bellow will create a database with two sheets; the first is kills and is used to track every successful kill,
---   with both where and when the kill happened. It has one index, a compound index tracking the combination of name and area.
---   The second sheet has two indexes, but one is unique: it isn't possible to add two items to the enemies sheet with the same name.
---   &lt;pre&gt;
---   local mydb = db:create(&quot;combat_log&quot;,
---     {
---       kills = {
---         name = &quot;&quot;,
---         area = &quot;&quot;,
---         killed = db:Timestamp(&quot;CURRENT_TIMESTAMP&quot;),
---         _index = {{&quot;name&quot;, &quot;area&quot;}}
---       },
---       enemies = {
---         name = &quot;&quot;,
---         city = &quot;&quot;,
---         reason = &quot;&quot;,
---         enemied = db:Timestamp(&quot;CURRENT_TIMESTAMP&quot;),
---         _index = { &quot;city&quot; },
---         _unique = { &quot;name&quot; },
---         _violations = &quot;IGNORE&quot;
---       }
---     }
---   )
---   &lt;/pre&gt;
---   Note that you have to use double {{ }} if you have composite index/unique constrain.
function db:create(db_name, sheets)
   if not db.__env then
      db.__env = luasql.sqlite3()
   end

   db_name = db:safe_name(db_name)

   if not db.__conn[db_name] then
      db.__conn[db_name] = db.__env:connect(getMudletHomeDir() .. &quot;/Database_&quot; .. db_name .. &quot;.db&quot;)
      db.__conn[db_name]:setautocommit(false)
      db.__autocommit[db_name] = true
   end

   db.__schema[db_name] = {}

   -- We need to separate the actual column configuration from the meta-configuration of the desired
   -- sheet. {sheet={&quot;column&quot;}} verses {sheet={&quot;column&quot;}, _index={&quot;column&quot;}}. In the former we are
   -- creating a database with a single field; in the latter we are also adding an index on that
   -- field. The db package reserves any key that begins with an underscore to be special and syntax
   -- for its own use.
   for s_name, sht in pairs(sheets) do
      options = {}

      if sht[1] ~= nil then         -- in case the sheet was provided in the sheet = {&quot;column1&quot;, &quot;column2&quot;} format:
         local t = {}               --   assume field types are text, and should default to &quot;&quot;
         for k, v in pairs(sht) do
            t[v] = &quot;&quot;
         end
         sht = t
      else                          -- sheet provided in the sheet = {&quot;column1&quot; = default} format
         local opts = {}
         for k, v in pairs(sht) do
            if string.starts(k, &quot;_&quot;) then
               options[k] = v
               opts[#opts + 1] = k
            end
         end
         for _, v in ipairs(opts) do
            sht[v] = nil
         end
      end

      if not options._violations then
         options._violations = &quot;FAIL&quot;
      end

      db.__schema[db_name][s_name] = {columns=sht, options=options}
      db:_migrate(db_name, s_name)
   end
   return db:get_database(db_name)
end



-- NOT LUADOC
-- The migrate function is meant to upgrade an existing database live, to maintain a consistant
-- and correct set of sheets and fields, along with their indexes. It should be safe to run
-- at any time, and must not cause any data loss. It simply adds to what is there: in perticular
-- it is not capable of removing indexes, columns, or sheets after they have been defined.
function db:_migrate(db_name, s_name)
   local conn = db.__conn[db_name]
   local schema = db.__schema[db_name][s_name]

   local current_columns = {}

   -- The PRAGMA table_info command is a query which returns all of the columns currently
   -- defined in the specified table. The purpose of this section is to see if any new columns
   -- have been added.
   local cur = conn:execute(&quot;PRAGMA table_info('&quot;..s_name..&quot;')&quot;) -- currently broken - LuaSQL bug, needs to be upgraded for new sqlite API

   if type(cur) ~= &quot;number&quot; then
      local row = cur:fetch({}, &quot;a&quot;)
      if row then
         while row do
            current_columns[row.name] = row.type
            row = cur:fetch({}, &quot;a&quot;)
         end
      else
         ---------------  GETS ALL COLUMNS FROM SHEET IF IT EXISTS
         db:echo_sql(&quot;SELECT * FROM &quot;..s_name)
         local get_sheet_cur = conn:execute(&quot;SELECT * FROM &quot;..s_name)  -- select the sheet

         if get_sheet_cur and get_sheet_cur ~= 0 then
            local row = get_sheet_cur:fetch({}, &quot;a&quot;) -- grab the first row, if any
            if not row then -- if no first row then
               local tried_cols, contains, found_something, col = {}, table.contains, false

               while not found_something do -- guarded by the error below from infinite looping
                  col = false
                  for k,v in pairs(schema.columns) do -- look through sheet schema to find the first column that is text
                     if type(k) == &quot;number&quot; then
                        if string.sub(v,1,1) ~= &quot;_&quot; and not contains(tried_cols, v) then col = v break end
                     else
                        if string.sub(k,1,1) ~= &quot;_&quot; and type(v) == &quot;string&quot; and not contains(tried_cols, k) then col = k break end
                     end
                  end

                  if not col then error(&quot;db:_migrate: cannot find a suitable column for testing a new row with.&quot;) end

                  -- add row with found column set as &quot;test&quot;
                  db:add({_db_name = db_name, _sht_name = s_name},{[col] = &quot;test&quot;})

                  db:echo_sql(&quot;SELECT * FROM &quot;..s_name)
                  local get_row_cur = conn:execute(&quot;SELECT * FROM &quot;..s_name) -- select the sheet
                  row = get_row_cur:fetch({}, &quot;a&quot;) -- grab the newly created row
                  get_row_cur:close()

                  -- delete the newly created row. If we picked a row that doesn't exist yet and we're
                  -- trying to add, the delete will fail - remember this, and try another row
                  local worked, msg = pcall(db.delete, db, {_db_name = db_name, _sht_name = s_name},db:eq({database = db_name, sheet = s_name, name = col, type = &quot;string&quot;},&quot;test&quot;))

                  if not worked then
                     tried_cols[#tried_cols+1] = col
                  else
                     found_something = true
                  end
               end
            end

            if row then -- add each column from row to current_columns table
               for k,v in pairs(row) do
                  current_columns[k] = &quot;&quot;
               end
            end
            get_sheet_cur:close()
         end
      end
   end

   if type(cur) == &quot;userdata&quot; then
      cur:close()
   end

   -- The SQL definition of a column is:
   --    &quot;column_name&quot; column_type NULL
   -- The db module does not presently support columns that are required. Everything is optional,
   -- everything may be NULL / nil.
   -- If you specify a column's type, you also specify its default value.
   if table.is_empty(current_columns) then
      -- At this point, we know that the specified table does not exist in the database and so we
      -- should create it.

      -- Every sheet has an implicit _row_id column. It is not presently (and likely never will be)
      -- supported to define the primary key of any sheet.
      local sql = db:_build_create_table_sql(schema, s_name)
      db:echo_sql(sql)
      conn:execute(sql)

   else
      -- At this point we know that the sheet already exists, but we are concerned if the current
      -- definition includes columns which may be added.
      local missing = {}

      for k, v in pairs(schema.columns) do

         -- Here we test it a given column exists in the sheet already, and if not, we add that
         -- column.
         if not current_columns[k] then
            missing[#missing + 1] = { name = k, default = v }
         end
      end

      if #missing &gt; 0 and 
         table.size(current_columns) + #missing == table.size(schema.columns)+1
         -- We have changes and when we did those changes, we have exactly
         -- the number of columns we need. The &quot;+1&quot; is for the _row_id
         -- which is not in the schema.
      then
         local sql_add = 'ALTER TABLE %s ADD COLUMN &quot;%s&quot; %s NULL DEFAULT %s'
         for _, v in ipairs(missing) do
            local t = db:_sql_type(v.default)
            local def = db:_sql_convert(v.default)
            local sql = sql_add:format(s_name, v.name, t, def)
            conn:execute(sql)
            db:echo_sql(sql)
         end
      elseif 
         #missing + table.size(current_columns) &gt; table.size(schema.columns) + 1
         -- if we add all missing columns and we have more columns than we want
         -- then there are currently some columns we don't want anymore.
      then
         local get_create = &quot;SELECT sql FROM sqlite_master &quot; ..
                            &quot;WHERE type = 'table' AND &quot; ..
                            &quot;name = '&quot; .. s_name ..&quot;'&quot;
         local ret_str
         cur, ret_str = conn:execute(get_create)
         assert(cur, ret_str)
         if type(cur) ~= &quot;number&quot; then
            local row = cur:fetch({}, &quot;a&quot;);
            cur:close()
            local create_tmp = row.sql:gsub(s_name, s_name .. &quot;_bak&quot;)
            local sql_chunks = {}
            local fields = { &quot;_row_id&quot; }
            local sql

            create_tmp = create_tmp:gsub(&quot;TABLE&quot;, &quot;TEMPORARY TABLE&quot;)

            for k, _ in pairs(schema.columns) do
              fields[#fields + 1] = string.format('&quot;%s&quot;', k)
            end
            local fields_sql = table.concat(fields, &quot;, &quot;)

            sql_chunks[#sql_chunks + 1] = create_tmp .. &quot;;&quot;
            sql_chunks[#sql_chunks + 1] = &quot;INSERT INTO &quot; .. s_name .. &quot;_bak &quot; ..
                                          &quot;SELECT * FROM &quot; .. s_name .. &quot;;&quot;
            sql_chunks[#sql_chunks + 1] = &quot;DROP TABLE &quot; .. s_name .. &quot;;&quot;
            sql_chunks[#sql_chunks + 1] = db:_build_create_table_sql(schema,
                                               s_name) .. &quot;;&quot;
            sql_chunks[#sql_chunks + 1] = string.format(
                 &quot;INSERT INTO %s SELECT %s FROM %s_bak;&quot;, s_name, fields_sql,
                 s_name)
            sql_chunks[#sql_chunks + 1] = &quot;DROP TABLE &quot; .. s_name .. &quot;_bak;&quot;

            for _, sql in ipairs(sql_chunks) do
               db:echo_sql(sql)
               local ret, str = conn:execute(sql)
               assert(ret, str)
            end
         end
      end
   end

   -- On every invocation of db:create we run the code that creates indexes, as that code will
   -- do nothing if the specific indexes already exist. This is enforced by the db:_index_name
   -- function creating a unique index.
   --
   -- Note that in no situation will an existing index be deleted.

   -- make up current_columns, as pragma_info currently does not populate it, due to luasql bug
   for key, value in pairs(schema.columns) do
      current_columns[key] =  db:_sql_type(value)
   end

   db:_migrate_indexes(conn, s_name, schema, current_columns)
   db:echo_sql(&quot;COMMIT&quot;)
   conn:commit()
   conn:execute(&quot;VACUUM&quot;)
end

function db:_build_create_table_sql(schema, s_name)

   local sql_column = ', &quot;%s&quot; %s NULL'
   local sql_column_default = sql_column..' DEFAULT %s'


   local sql_chunks = {&quot;CREATE TABLE &quot;, s_name,  '(&quot;_row_id&quot; INTEGER PRIMARY KEY AUTOINCREMENT'}

      -- We iterate over every defined column, and add a line which creates it.
   for key, value in pairs(schema.columns) do
      local sql = &quot;&quot;
      if value == nil then
         sql = sql_column:format(key, db:_sql_type(value))
      else
         sql = sql_column_default:format(key, db:_sql_type(value), db:_sql_convert(value))
      end
      if (type(schema.options._unique) == &quot;table&quot; and table.contains(schema.options._unique, key))
         or (type(schema.options._unique) == &quot;string&quot; and schema.options._unique == key) then
         sql = sql .. &quot; UNIQUE&quot;
      end
      sql_chunks[#sql_chunks+1] = sql
   end

   sql_chunks[#sql_chunks+1] = &quot;)&quot;

   return table.concat(sql_chunks, &quot;&quot;)
end


-- NOT LUADOC
-- Creates any indexes which do not yet exist in the given database.
function db:_migrate_indexes(conn, s_name, schema, current_columns)
   local sql_create_index = &quot;CREATE %s IF NOT EXISTS %s ON %s (%s);&quot;
   local opt = {_unique = &quot;UNIQUE INDEX&quot;, _index = &quot;INDEX&quot;} -- , _check = &quot;CHECK&quot;}

   for option_type, options in pairs(schema.options) do
      if option_type == &quot;_unique&quot; or option_type == &quot;_index&quot; then
         for _, value in pairs(options) do

            -- If an index references a column which does not presently exist within the schema
            -- this will fail.

            if db:_index_valid(current_columns, value) then
               --assert(db:_index_valid(current_columns, value),
               --      &quot;In sheet &quot;..s_name..&quot; an index field is specified that does not exist.&quot;)

               local sql = sql_create_index:format(
                     opt[option_type], db:_index_name(s_name, value), s_name, db:_sql_columns(value)
               )
               db:echo_sql(sql)
               conn:execute(sql)
            end
         end
      end
   end
end



--- Adds one or more new rows to the specified sheet. If any of these rows would violate a UNIQUE index,
--- a lua error will be thrown and execution will cancel. As such it is advisable that if you use a UNIQUE
--- index, you test those values before you attempt to insert a new row. &lt;br/&gt;&lt;br/&gt;
---
--- Each table is a series of key-value pairs to set the values of the sheet, but if any keys do not exist
--- then they will be set to nil or the default value. As you can see, all fields are optional.
---
--- @usage Adding one record.
---   &lt;pre&gt;
---   db:add(mydb.enemies, {name=&quot;Bob Smith&quot;, city=&quot;San Francisco&quot;})
---   &lt;/pre&gt;
--- @usage Adding multiple records.
---   &lt;pre&gt;
---   db:add(mydb.enemies,
---     {name=&quot;John Smith&quot;, city=&quot;San Francisco&quot;},
---     {name=&quot;Jane Smith&quot;, city=&quot;San Francisco&quot;},
---     {name=&quot;Richard Clark&quot;}
---   )
---   &lt;/pre&gt;
function db:add(sheet, ...)
   local db_name = sheet._db_name
   local s_name = sheet._sht_name
   assert(s_name, &quot;First argument to db:add must be a proper Sheet object.&quot;)

   local conn = db.__conn[db_name]
   local sql_insert = &quot;INSERT OR %s INTO %s %s VALUES %s&quot;

   for _, t in ipairs({...}) do
      if t._row_id then
         -- You are not permitted to change a _row_id
         t._row_id = nil
      end

      local sql = sql_insert:format(db.__schema[db_name][s_name].options._violations, s_name, db:_sql_fields(t), db:_sql_values(t))
      db:echo_sql(sql)

      local result, msg = conn:execute(sql)
      if not result then return nil, msg end
   end
   if db.__autocommit[db_name] then
      conn:commit()
   end
   return true
end



--- Execute SQL select query against database. This only useful for some very specific cases. &lt;br/&gt;
--- Use db:fetch if possible instead - this function should not be normally used!
---
--- @release post Mudlet 1.1.1 (&lt;b&gt;&lt;u&gt;TODO update before release&lt;/u&gt;&lt;/b&gt;)
---
--- @usage Following will select all distinct area from my kills DB.
---   &lt;pre&gt;
---   db:fetch_sql(mydb.kills, &quot;SELECT distinct area FROM kills&quot;)
---   &lt;/pre&gt;
---
--- @see db:fetch
function db:fetch_sql(sheet, sql)
   local db_name = sheet._db_name
   local conn = db.__conn[db_name]

   db:echo_sql(sql)
   local cur = conn:execute(sql)

   -- if we had a syntax error in our SQL, cur will be nil
   if cur and cur ~= 0 then
      local results = {}
      local row = cur:fetch({}, &quot;a&quot;)

      while row do
         results[#results+1] = db:_coerce_sheet(sheet, row)
         row = cur:fetch({}, &quot;a&quot;)
      end
      cur:close()
      return results
   else
      return nil
   end
end



--- Returns a table array containing a table for each matching row in the specified sheet. All arguments
--- but sheet are optional. If query is nil, the entire contents of the sheet will be returned. &lt;br/&gt;&lt;br/&gt;
---
--- Query is a string which should be built by calling the various db: expression functions, such as db:eq,
--- db:AND, and such. You may pass a SQL WHERE clause here if you wish, but doing so is very dangerous.
--- If you don't know SQL well, its best to build the expression.&lt;br/&gt;&lt;br/&gt;
---
--- Query may also be a table array of such expressions, if so they will be AND'd together implicitly.&lt;br/&gt;&lt;br/&gt;
---
--- The results that are returned are not in any guaranteed order, though they are usually the same order
--- as the records were inserted. If you want to rely on the order in any way, you must pass a value to the
--- order_by field. This must be a table array listing the fields you want to sort by.
--- It can be { mydb.kills.area }, or { mydb.kills.area, mydb.kills.name } &lt;br/&gt;&lt;br/&gt;
---
--- The results are returned in ascending (smallest to largest) order; to reverse this pass true into the final field.
---
--- @usage The first will fetch all of your enemies, sorted first by the city they reside in and then by their name.
---   &lt;pre&gt;
---   db:fetch(mydb.enemies, nil, {mydb.enemies.city, mydb.enemies.name})
---   &lt;/pre&gt;
--- @usage The second will fetch only the enemies which are in San Francisco.
---   &lt;pre&gt;
---   db:fetch(mydb.enemies, db:eq(mydb.enemies.city, &quot;San Francisco&quot;))
---   &lt;/pre&gt;
--- @usage The third will fetch all the things you've killed in Undervault which have Drow in their name.
---   &lt;pre&gt;
---   db:fetch(mydb.kills,
---      {
---         db:eq(mydb.kills.area, &quot;Undervault&quot;),
---         db:like(mydb.kills.name, &quot;%Drow%&quot;)
---      }
---   )
---   &lt;/pre&gt;
---
--- @see db:fetch_sql
function db:fetch(sheet, query, order_by, descending)
   local s_name = sheet._sht_name

   local sql = &quot;SELECT * FROM &quot;..s_name

   if query then
      if type(query) == &quot;table&quot; then
         sql = sql..&quot; WHERE &quot;..db:AND(unpack(query))
      else
         sql = sql..&quot; WHERE &quot;..query
      end
   end

   if order_by then
      local o = {}
      for _, v in ipairs(order_by) do
         assert(v.name, &quot;You must pass field instances (as obtained from yourdb.yoursheet.yourfield) to sort.&quot;)
         o[#o+1] = v.name

         if descending then
            o[#o+1] = &quot;DESC&quot;
         end
      end

      sql = sql..&quot; ORDER BY &quot;..db:_sql_columns(o)
   end

   return db:fetch_sql(sheet, sql)
end



--- Returns the result of calling the specified aggregate function on the field and its sheet. &lt;br/&gt;&lt;br/&gt;
---
--- The supported aggregate functions are:
---   &lt;pre&gt;
---   COUNT - Returns the total number of records that are in the sheet or match the query.
---   AVG   - Returns the average of all the numbers in the specified field.
---   MAX   - Returns the highest number in the specified field.
---   MIN   - Returns the lowest number in the specified field.
---   TOTAL - Returns the value of adding all the contents of the specified field.
---   &lt;/pre&gt;
---
--- @param query optional
---
--- @usage Example:
---   &lt;pre&gt;
---   local mydb = db:get_database(&quot;my database&quot;)
---   echo(db:aggregate(mydb.enemies.name, &quot;count&quot;))
---   &lt;/pre&gt;
function db:aggregate(field, fn, query, distinct)
   local db_name = field.database
   local s_name = field.sheet
   local conn = db.__conn[db_name]

   assert(type(field) == &quot;table&quot;, &quot;Field must be a field reference.&quot;)
   assert(field.name, &quot;Field must be a real field reference.&quot;)

   local sql_chunks = {&quot;SELECT&quot;, fn, &quot;(&quot;, distinct and &quot;DISTINCT&quot; or &quot;&quot;, field.name, &quot;)&quot;, &quot;AS&quot;, fn, &quot;FROM&quot;, s_name}

   if query then
      sql_chunks[#sql_chunks+1] = &quot;WHERE&quot;
      if type(query) == &quot;table&quot; then
         sql_chunks[#sql_chunks+1] = db:AND(unpack(query))
      else
         sql_chunks[#sql_chunks+1] = query
      end
   end

   local sql = table.concat(sql_chunks, &quot; &quot;)

   db:echo_sql(sql)
   local cur = conn:execute(sql)

   if cur ~= 0 then
      local row = cur:fetch({}, &quot;a&quot;)
      local count = row[fn]
      cur:close()
      
      -- give back the correct data type. see http://www.sqlite.org/lang_aggfunc.html
      if (fn:upper() ~= &quot;MIN&quot; and fn:upper() ~= &quot;MAX&quot;) or field.type == &quot;number&quot; then
         return tonumber(count)
      end
      if field.type == &quot;string&quot; then
        return count
      end
      -- Only datetime left
      -- the value, count, is currently in a UTC timestamp
      local localtime = datetime:parse(count, nil, true)
      -- convert it into a UTC timestamp as datetime:parse parses it in the local time context
      count = db:Timestamp(localtime + datetime:calculate_UTCdiff(localtime))
      return count
   else
      return 0
   end
end



--- Deletes rows from the specified sheet. The argument for query tries to be intelligent: &lt;br/&gt;
--- * if it is a simple number, it deletes a specific row by _row_id &lt;br/&gt;
--- * if it is a table that contains a _row_id (e.g., a table returned by db:get) it deletes just that record. &lt;br/&gt;
--- * Otherwise, it deletes every record which matches the query pattern which is specified as with db:get. &lt;br/&gt;
--- * If the query is simply true, then it will truncate the entire contents of the sheet. &lt;br/&gt;
---
--- @usage When passed an actual result table that was obtained from db:fetch, it will delete the record for that table.
---   &lt;pre&gt;
---   enemies = db:fetch(mydb.enemies)
---   db:delete(mydb.enemies, enemies[1])
---   &lt;/pre&gt;
--- @usage When passed a number, will delete the record for that _row_id. This example shows getting the row id from a table.
---   &lt;pre&gt;
---   enemies = db:fetch(mydb.enemies)
---   db:delete(mydb.enemies, enemies[1]._row_id)
---   &lt;/pre&gt;
--- @usage As above, but this example just passes in the row id directly.
---   &lt;pre&gt;
---   db:delete(mydb.enemies, 5)
---   &lt;/pre&gt;
--- @usage Here, we will delete anything which matches the same kind of query as db:fetch uses - namely,
---   anyone who is in the city of San Francisco.
---   &lt;pre&gt;
---   db:delete(mydb.enemies, db:eq(mydb.enemies.city, &quot;San Francisco&quot;))
---   &lt;/pre&gt;
--- @usage And finally, we will delete the entire contents of the enemies table.
---   &lt;pre&gt;
---   db:delete(mydb.enemies, true)
---   &lt;/pre&gt;
function db:delete(sheet, query)
   local db_name = sheet._db_name
   local s_name = sheet._sht_name

   local conn = db.__conn[db_name]

   assert(query, &quot;must pass a query argument to db:delete()&quot;)
   if type(query) == &quot;number&quot; then
      query = &quot;_row_id = &quot;..tostring(query)
   elseif type(query) == &quot;table&quot; then
      assert(query._row_id, &quot;Passed a non-result table to db:delete, need a _row_id field to continue.&quot;)
      query = &quot;_row_id = &quot;..tostring(query._row_id)
   end

   local sql = &quot;DELETE FROM &quot;..s_name

   if query ~= true then
      sql = sql..&quot; WHERE &quot;..query
   end

   db:echo_sql(sql)
   assert(conn:execute(sql))
   if db.__autocommit[db_name] then
      conn:commit()
   end
end



--- Merges the specified table array into the sheet, modifying any existing rows and adding any that don't exist.
---
--- This function is a convenience utility that allows you to quickly modify a sheet, changing
--- existing rows and add new ones as appropriate. It ONLY works on sheets which have a unique
--- index, and only when that unique index is only on a single field. For more complex situations
--- you'll have to do the logic yourself.
---
--- The table array may contain tables that were either returned previously by db:fetch, or new tables
--- that you've constructed with the correct fields, or any mix of both. Each table must have a value
--- for the unique key that has been set on this sheet.
---
--- @usage For example, consider this database:
---   &lt;pre&gt;
---   local mydb = db:create(&quot;peopledb&quot;,
---     {
---       friends = {
---         name = &quot;&quot;,
---         race = &quot;&quot;,
---         level = 0,
---         city = &quot;&quot;,
---         _index = { &quot;city&quot; },
---         _unique = { &quot;name&quot; }
---       }
---     }
---   )
---   &lt;/pre&gt;
---
---   Here you have a database with one sheet, which contains your friends, their race, level,
---   and what city they live in. Let's say you want to fetch everyone who lives in San Francisco, you could do:
---   &lt;pre&gt;
---   local results = db:fetch(mydb.friends, db:eq(mydb.friends.city, &quot;San Francisco&quot;))
---   &lt;/pre&gt;
---
---   The tables in results are static, any changes to them are not saved back to the database.
---   But after a major radioactive cataclysm rendered everyone in San Francisco a mutant,
---   you could make changes to the tables as so:
---   &lt;pre&gt;
---   for _, friend in ipairs(results) do
---     friend.race = &quot;Mutant&quot;
---   end
---   &lt;/pre&gt;
---
---   If you are also now aware of a new arrival in San Francisco, you could add them to that existing table array:
---   &lt;pre&gt;
---   results[#results+1] = {name=&quot;Bobette&quot;, race=&quot;Mutant&quot;, city=&quot;San Francisco&quot;}
---   &lt;/pre&gt;
---
---   And commit all of these changes back to the database at once with:
---   &lt;pre&gt;
---   db:merge_unique(mydb.friends, results)
---   &lt;/pre&gt;
---
---   The db:merge_unique function will change the 'city' values for all the people who we previously fetched, but then add a new record as well.
function db:merge_unique(sheet, tables)
   assert(type(tables) == &quot;table&quot;, &quot;db:merge_unique: missing the required table of data to merge&quot;)

   local db_name = sheet._db_name
   local s_name = sheet._sht_name

   local unique_options = db.__schema[db_name][s_name].options._unique
   assert(unique_options, &quot;db:merge_unique only works on a sheet with a unique index.&quot;)
   assert(#unique_options == 1, &quot;db:merge_unique only works on a sheet with a single unique index.&quot;)

   local unique_index = unique_options[1]
   local unique_key = &quot;&quot;
   if type(unique_index) == &quot;table&quot; then
      assert(#unique_index == 1, &quot;db:merge_unique currently only supports sheets with a single unique index with a single column.&quot;)
      unique_key = unique_index[1]
   else
      unique_key = unique_index
   end

   db:echo_sql(&quot;:: Unique index = &quot;..unique_key)

   local conn = db.__conn[db_name]
   local mydb = db:get_database(db_name)
   mydb:_begin()

   for _, tbl in ipairs(tables) do
      assert(tbl[unique_key], &quot;attempting to db:merge_unique with a table that does not have the unique key.&quot;)

      local results = db:fetch(sheet, db:eq(sheet[unique_key], tbl[unique_key]))
      if results and results[1] then
         local t = results[1]
         for k, v in pairs(tbl) do
            t[k] = v
         end

         db:update(sheet, t)
      else
         db:add(sheet, tbl)
      end
   end

   mydb:_commit()
   mydb:_end()
end



--- This function updates a row in the specified sheet, but only accepts a row which has been previously
--- obtained by db:fetch. Its primary purpose is that if you do a db:fetch, then change the value of a field
--- or tow, you can save back that table.
---
--- @usage This obtains a database reference, and queries the friends sheet for someone named Bob. As this
---   returns a table array containing only one item, it assigns that one item to the local variable named bob.
---   We then change the notes on Bob, and pass it into db:update() to save the changes back.
---   &lt;pre&gt;
---   local mydb = db:get_database(&quot;my database&quot;)
---   local bob = db:fetch(mydb.friends, db:eq(mydb.friends.name, &quot;Bob&quot;))[1]
---   bob.notes = &quot;He's a really awesome guy.&quot;
---   db:update(mydb.friends, bob)
---   &lt;/pre&gt;
function db:update(sheet, tbl)
   assert(tbl._row_id, &quot;Can only update a table with a _row_id&quot;)
   assert(not table.is_empty(tbl), &quot;An empty table was passed to db:update&quot;)

   local db_name = sheet._db_name
   local s_name = sheet._sht_name

   local conn = db.__conn[db_name]

   local sql_chunks = {&quot;UPDATE OR&quot;, db.__schema[db_name][s_name].options._violations, s_name, &quot;SET&quot;}

   local set_chunks = {}
   local set_block = [[&quot;%s&quot; = %s]]

   for k, v in pairs(db.__schema[db_name][s_name]['columns']) do
      if tbl[k] then
         local field = sheet[k]
         set_chunks[#set_chunks+1] = set_block:format(k, db:_coerce(field, tbl[k]))
      end
   end

   sql_chunks[#sql_chunks+1] = table.concat(set_chunks, &quot;,&quot;)
   sql_chunks[#sql_chunks+1] = &quot;WHERE _row_id = &quot;..tbl._row_id

   local sql = table.concat(sql_chunks, &quot; &quot;)
   db:echo_sql(sql)
   assert(conn:execute(sql))
   if db.__autocommit[db_name] then
      conn:commit()
   end
end



--- The db:set function allows you to set a certain field to a certain value across an entire sheet.
--- Meaning, you can change all of the last_read fields in the sheet to a certain value, or possibly only
--- the last_read fields which are in a certain city. The query argument can be any value which is appropriate
--- for db:fetch, even nil which will change the value for the specified column for EVERY row in the sheet.
---
--- For example, consider a situation in which you are tracking how many times you find a certain
--- type of egg during Easter. You start by setting up your database and adding an Eggs sheet, and
--- then adding a record for each type of egg.
---   &lt;pre&gt;
---   local mydb = db:create(&quot;egg database&quot;, {eggs = {color = &quot;&quot;, last_found = db.Timestamp(false), found = 0}})
---   db:add(mydb.eggs,
---     {color = &quot;Red&quot;},
---     {color = &quot;Blue&quot;},
---     {color = &quot;Green&quot;},
---     {color = &quot;Yellow&quot;},
---     {color = &quot;Black&quot;}
---   )
---   &lt;/pre&gt;
---
--- Now, you have three columns. One is a string, one a timestamp (that ends up as nil in the database),
--- and one is a number. &lt;br/&gt;&lt;br/&gt;
---
--- You can then set up a trigger to capture from the mud the string, &quot;You pick up a (.*) egg!&quot;, and you
--- end up arranging to store the value of that expression in a variable called &quot;myegg&quot;. &lt;br/&gt;&lt;br/&gt;
---
--- To increment how many we found, we will do this:
---   &lt;pre&gt;
---   myegg = &quot;Red&quot; -- We will pretend a trigger set this.
---   db:set(mydb.eggs.found, db:exp(&quot;found + 1&quot;), db:eq(mydb.eggs.color, myegg))
---   db:set(mydb.eggs.last_found, db.Timestamp(&quot;CURRENT_TIMESTAMP&quot;), db:eq(mydb.eggs.color, myegg))
---   &lt;/pre&gt;
---
--- This will go out and set two fields in the Red egg sheet; the first is the found field, which will
--- increment the value of that field (using the special db:exp function). The second will update the
--- last_found field with the current time. &lt;br/&gt;&lt;br/&gt;
---
--- Once this contest is over, you may wish to reset this data but keep the database around.
--- To do that, you may use a more broad use of db:set as such:
---   &lt;pre&gt;
---   db:set(mydb.eggs.found, 0)
---   db:set(mydb.eggs.last_found, nil)
---   &lt;/pre&gt;
function db:set(field, value, query)
   local db_name = field.database
   local s_name = field.sheet

   local conn = db.__conn[db_name]

   local sql_update = [[UPDATE OR %s %s SET &quot;%s&quot; = %s]]
   if query then
       sql_update = sql_update .. [[ WHERE %s]]
   end

   local sql = sql_update:format(db.__schema[db_name][s_name].options._violations, s_name, field.name, db:_coerce(field, value), query)

   db:echo_sql(sql)
   assert(conn:execute(sql))
   if db.__autocommit[db_name] then
      conn:commit()
   end
end



--- This is a debugging function, which echos any SQL commands if db.debug_sql is true.
--- You should not call this function directly from Mudlet.
---
--- @usage Set following lua variable to enable SQL echos.
---   &lt;pre&gt;
---   db.debug_sql=true
---   &lt;/pre&gt;
function db:echo_sql(sql)
   if db.debug_sql then
      print(sql)
   end
end



-- NOT LUADOC
-- After a table so retrieved from the database, this function coerces values to
-- their proper types. Specifically, numbers and datetimes become the proper
-- types.
function db:_coerce_sheet(sheet, tbl)
   if tbl then
      tbl._row_id = tonumber(tbl._row_id)

      for k, v in pairs(tbl) do
         if k ~= &quot;_row_id&quot; then
            local field = sheet[k]
            if field.type == &quot;number&quot; then
               tbl[k] = tonumber(tbl[k]) or tbl[k]
            elseif field.type == &quot;datetime&quot; then
               -- the value, tbl[k], is currently in a UTC timestamp
               local localtime = datetime:parse(tbl[k], nil, true)
               -- convert it into a UTC timestamp as datetime:parse parses it in the local time context
               tbl[k] = db:Timestamp(localtime + datetime:calculate_UTCdiff(localtime))
            end
         end
      end
      return tbl
   end
end



-- NOT LUADOC
-- The function converts a Lua value into its SQL representation, depending on the
-- type of the specified field. Strings will be single-quoted (and single-quotes
-- within will be properly escaped), numbers will be rendered properly, and such.
function db:_coerce(field, value)
   if field.type == &quot;number&quot; then
      return tonumber(value) or &quot;'&quot;..value..&quot;'&quot;
   elseif field.type == &quot;datetime&quot; then
      if value._timestamp == false then
         return &quot;NULL&quot;
      else
         return &quot;datetime('&quot;..value._timestamp..&quot;', 'unixepoch')&quot; or &quot;'&quot;..value..&quot;'&quot;
      end
   else
      return &quot;'&quot;..tostring(value):gsub(&quot;'&quot;, &quot;''&quot;)..&quot;'&quot;
   end
end



--- Returns a database expression to test if the field in the sheet is equal to the value.
---
--- @see db:fetch
function db:eq(field, value, case_insensitive)
   local fieldname = field.name
   -- escape column names as per https://www.sqlite.org/lang_expr.html
   fieldname = '&quot;'..fieldname:gsub(&quot;'&quot;, &quot;''&quot;)..'&quot;'
   if case_insensitive then
      local v = db:_coerce(field, value):lower()
      return &quot;lower(&quot;..fieldname..&quot;) == &quot;..v
   else
      local v = db:_coerce(field, value)
      return fieldname..&quot; == &quot;..v
   end
end



--- Returns a database expression to test if the field in the sheet is NOT equal to the value.
---
--- @see db:fetch
function db:not_eq(field, value, case_insensitive)
   if case_insensitive then
      local v = db:_coerce(field, value):lower()
      return &quot;lower(&quot;..field.name..&quot;) != &quot;..v
   else
      local v = db:_coerce(field, value)
      return field.name..&quot; != &quot;..v
   end
end



--- Returns a database expression to test if the field in the sheet is less than the value.
---
--- @see db:fetch
function db:lt(field, value)
   local v = db:_coerce(field, value)
   return field.name..&quot; &lt; &quot;..v
end



--- Returns a database expression to test if the field in the sheet is less than or equal to the value.
---
--- @see db:fetch
function db:lte(field, value)
   local v = db:_coerce(field, value)
   return field.name..&quot; &lt;= &quot;..v
end



--- Returns a database expression to test if the field in the sheet is greater than to the value.
---
--- @see db:fetch
function db:gt(field, value)
   local v = db:_coerce(field, value)
   return field.name..&quot; &gt; &quot;..v
end



--- Returns a database expression to test if the field in the sheet is greater than or equal to the value.
---
--- @see db:fetch
function db:gte(field, value)
   local v = db:_coerce(field, value)
   return field.name..&quot; &gt;= &quot;..v
end



--- Returns a database expression to test if the field in the sheet is nil.
---
--- @see db:fetch
function db:is_nil(field)
   return field.name..&quot; IS NULL&quot;
end



--- Returns a database expression to test if the field in the sheet is not nil.
---
--- @see db:fetch
function db:is_not_nil(field)
   return field.name..&quot; IS NOT NULL&quot;
end



--- Returns a database expression to test if the field in the sheet matches the specified pattern. &lt;br/&gt;&lt;br/&gt;
---
--- LIKE patterns are not case-sensitive, and allow two wild cards. The first is an underscore which matches
--- any single one character. The second is a percent symbol which matches zero or more of any character.
---   &lt;pre&gt;
---   LIKE with &quot;_&quot; is therefore the same as the &quot;.&quot; regular expression.
---   LIKE with &quot;%&quot; is therefore the same as &quot;.*&quot; regular expression.
---   &lt;/pre&gt;
---
--- @see db:not_like
--- @see db:fetch
function db:like(field, value)
   local v = db:_coerce(field, value)
   return field.name..&quot; LIKE &quot;..v
end



--- Returns a database expression to test if the field in the sheet does not match the specified pattern.
---
--- LIKE patterns are not case-sensitive, and allow two wild cards. The first is an underscore which matches
--- any single one character. The second is a percent symbol which matches zero or more of any character.
---   &lt;pre&gt;
---   LIKE with &quot;_&quot; is therefore the same as the &quot;.&quot; regular expression.
---   LIKE with &quot;%&quot; is therefore the same as &quot;.*&quot; regular expression.
---   &lt;/pre&gt;
---
--- @see db:like
--- @see db:fetch
function db:not_like(field, value)
   local v = db:_coerce(field, value)
   return field.name..&quot; NOT LIKE &quot;..v
end



--- Returns a database expression to test if the field in the sheet is a value between lower_bound and upper_bound.
--- This only really makes sense for numbers and Timestamps.
---
--- @see db:not_between
--- @see db:fetch
function db:between(field, left_bound, right_bound)
   local x = db:_coerce(field, left_bound)
   local y = db:_coerce(field, right_bound)
   return field.name..&quot; BETWEEN &quot;..x..&quot; AND &quot;..y
end



--- Returns a database expression to test if the field in the sheet is NOT a value between lower_bound and upper_bound.
--- This only really makes sense for numbers and Timestamps.
---
--- @see db:between
--- @see db:fetch
function db:not_between(field, left_bound, right_bound)
   local x = db:_coerce(field, left_bound)
   local y = db:_coerce(field, right_bound)
   return field.name..&quot; NOT BETWEEN &quot;..x..&quot; AND &quot;..y
end



--- Returns a database expression to test if the field in the sheet is one of the values in the table array. &lt;br/&gt;&lt;br/&gt;
---
--- First, note the trailing underscore carefully! It is required.
---
--- @usage The following example illustrates the use of &lt;b&gt;in_&lt;/b&gt;:
---   This will obtain all of your kills which happened in the Undervault, Hell or Purgatory. Every db:in_ expression
---   can be written as a db:OR, but that quite often gets very complex.
---   &lt;pre&gt;
---   local mydb = db:get_database(&quot;my database&quot;)
---   local areas = {&quot;Undervault&quot;, &quot;Hell&quot;, &quot;Purgatory&quot;}
---   db:fetch(mydb.kills, db:in_(mydb.kills.area, areas))
---   &lt;/pre&gt;
---
--- @see db:fetch
function db:in_(field, tbl)
   local parts = {}
   for _, v in ipairs(tbl) do
      parts[#parts+1] = db:_coerce(field, v)
   end

   return field.name..&quot; IN (&quot;..table.concat(parts, &quot;,&quot;)..&quot;)&quot;
end



--- Returns a database expression to test if the field in the sheet is not one of the values in the table array.
---
--- @see db:in_
--- @see db:fetch
function db:not_in(field, tbl)
   local parts = {}
   for _, v in ipairs(tbl) do
      parts[#parts+1] = db:_coerce(field, v)
   end

   return field.name..&quot; NOT IN (&quot;..table.concat(parts, &quot;,&quot;)..&quot;)&quot;
end



--- Returns the string as-is to the database. &lt;br/&gt;&lt;br/&gt;
---
--- Use this function with caution, but it is very useful in some circumstances. One of the most
--- common of such is incrementing an existing field in a db:set() operation, as so:
---   &lt;pre&gt;
---   db:set(mydb.enemies, db:exp(&quot;kills + 1&quot;), db:eq(mydb.enemies.name, &quot;Ixokai&quot;))
---   &lt;/pre&gt;
---
--- This will increment the value of the kills field for the row identified by the name Ixokai. &lt;br/&gt;&lt;br/&gt;
---
--- But there are other uses, as the underlining database layer provides many functions you can call
--- to do certain things. If you want to get a list of all your enemies who have a name longer then
--- 10 characters, you may do:
---   &lt;pre&gt;
---   db:fetch(mydb.enemies, db:exp(&quot;length(name) &gt; 10&quot;))
---   &lt;/pre&gt;
---
--- Again, take special care with this, as you are doing SQL syntax directly and the library can't
--- help you get things right.
---
--- @see db:fetch
function db:exp(text)
   return text
end



--- Returns a compound database expression that combines all of the simple expressions passed into it.
--- These expressions should be generated with other db: functions such as db:eq, db:like, db:lt and the like. &lt;br/&gt;&lt;br/&gt;
---
--- This compound expression will only find items in the sheet if all sub-expressions match.
---
--- @see db:fetch
function db:AND(...)
   local parts = {}

   for _, expression in ipairs({...}) do
      parts[#parts+1] = &quot;(&quot;..expression..&quot;)&quot;
   end

   return &quot;(&quot;..table.concat(parts, &quot; AND &quot;)..&quot;)&quot;
end



--- Returns a compound database expression that combines both of the simple expressions passed into it.
--- These expressions should be generated with other db: functions such as db:eq, db:like, db:lt and the like. &lt;br/&gt;&lt;br/&gt;
---
--- This compound expression will find any item that matches either the first or the second sub-expression.
---
--- @see db:fetch
function db:OR(left, right)
   if not string.starts(left, &quot;(&quot;) then
      left = &quot;(&quot;..left..&quot;)&quot;
   end

   if not string.starts(right, &quot;(&quot;) then
      right = &quot;(&quot;..right..&quot;)&quot;
   end

   return left..&quot; OR &quot;..right
end



--- &lt;b&gt;&lt;u&gt;TODO&lt;/u&gt;&lt;/b&gt;
function db:close()
   for _, c in pairs(db.__conn) do
      c:close()
   end
   db.__conn = {}
   db.__env:close()
   db.__env = nil
end



-- Timestamp support
db.__Timestamp = {}



db.__TimestampMT = {
   __index = db.__Timestamp
}


function db.__Timestamp:as_string(format)
   if not format then
      format = &quot;%m-%d-%Y %H:%M:%S&quot;
   end

   -- given how we have an as_string function, having to wrap it in tostring() is a bit silly. So in this case, return nil as a string
   if type(self._timestamp) ~= &quot;number&quot; then return &quot;nil&quot;, &quot;db.Timestamp:as_string: timestamp seems to be invalid and isn't a number&quot; end

   return os.date(format, self._timestamp)
end

function db.__Timestamp:as_table()
   if type(self._timestamp) ~= &quot;number&quot; then return nil, &quot;db.Timestamp:as_table: timestamp seems to be invalid and isn't a number&quot; end

   return os.date(&quot;*t&quot;, self._timestamp)
end

function db.__Timestamp:as_number()
   if type(self._timestamp) ~= &quot;number&quot; then return nil, &quot;db.Timestamp:as_number: timestamp seems to be invalid and isn't a number&quot; end

   return self._timestamp
end

function db.__Timestamp:set(timestamp)
   assert(type(timestamp) == &quot;number&quot;, &quot;db.Timestamp:set: timestamp needs to be a number&quot;)

   self._timestamp = timestamp
end


--- &lt;b&gt;&lt;u&gt;TODO&lt;/u&gt;&lt;/b&gt;
function db:Timestamp(ts, fmt)
   local dt = {}
   if type(ts) == &quot;table&quot; then
      dt._timestamp = os.time(ts)
   elseif type(ts) == &quot;number&quot; then
      dt._timestamp = ts
   elseif type(ts) == &quot;string&quot; and
           assert(ts == &quot;CURRENT_TIMESTAMP&quot;, &quot;The only strings supported by db.DateTime:new is CURRENT_TIMESTAMP&quot;) then
      dt._timestamp = &quot;CURRENT_TIMESTAMP&quot;
   elseif ts == nil then
      dt._timestamp = false
   else
      assert(nil, &quot;Invalid value passed to db.Timestamp()&quot;)
   end
   return setmetatable(dt, db.__TimestampMT)
end



db.Field = {}
db.__FieldMT = {
   __index = db.Field
}



db.Sheet = {}
db.__SheetMT = {
   __index = function(t, k)
      local v = rawget(db.Sheet, k)
      if v then
         return v
      end

      local db_name = rawget(t, &quot;_db_name&quot;)
      local sht_name = rawget(t, &quot;_sht_name&quot;)
      local f_name = k

      local errormsg = &quot;Attempt to access field %s in sheet %s in database %s that does not exist.&quot;

      local field = db.__schema[db_name][sht_name]['columns'][f_name]
      if assert(field, errormsg:format(k, sht_name, db_name)) then
         type_ = type(field)
         if type_ == &quot;table&quot; and field._timestamp then
            type_ = &quot;datetime&quot;
         end

         rt = setmetatable({database=db_name, sheet=sht_name, type=type_, name=f_name}, db.__FieldMT)
         rawset(t,k,rt)
         return rt
      end

   end
}



db.Database = {}
db.__DatabaseMT = {
   __index = function(t, k)
      local v = rawget(t, k)
      if v then
         return v
      end

      local v = rawget(db.Database, k)
      if v then
         return v
      end

      local db_name = rawget(t, &quot;_db_name&quot;)
      if assert(db.__schema[db_name][k], &quot;Attempt to access sheet '&quot;..k..&quot;'in db '&quot;..db_name..&quot;' that does not exist.&quot;) then
         rt = setmetatable({_db_name = db_name, _sht_name = k}, db.__SheetMT)
         rawset(t,k,rt)
         return rt
      end
   end
}



function db.Database:_begin()
   db.__autocommit[self._db_name] = false
end



function db.Database:_commit()
   local conn = db.__conn[self._db_name]
   conn:commit()
end



function db.Database:_rollback()
   local conn = db.__conn[self._db_name]
   conn:rollback()
end



function db.Database:_end()
   db.__autocommit[self._db_name] = true
end



function db.Database._drop(s_name)
   local conn = db.__conn[self._db_name]
   local schema = db.__schema[self._db_name]

   if schema.options._index then
      for _, value in schema.options._index do
         conn:execute(&quot;DROP INDEX IF EXISTS &quot; .. db:_index_name(s_name, value))
      end
   end

   if schema.options._unique then
      for _, value in schema.options._unique do
         conn:execute(&quot;DROP INDEX IF EXISTS &quot; .. db:_index_name(s_name, value))
      end
   end

   conn:execute(&quot;DROP TABLE IF EXISTS &quot;..s_name)
   conn:commit()
end



--- Returns a reference of an already existing database. This instance can be used to get references
--- to the sheets (and from there, fields) that are defined within the database. You use these
--- references to construct queries. &lt;br/&gt;&lt;br/&gt;
---
--- These references do not contain any actual data, they only point to parts of the database structure.
---
--- @usage If a database has a sheet named enemies, you can obtain a reference to that sheet by simply doing:
---   &lt;pre&gt;
---   local mydb = db:get_database(&quot;my database&quot;)
---   local enemies_ref = mydb.enemies
---   local name_ref = mydb.enemies.name
---   &lt;/pre&gt;
function db:get_database(db_name)
   db_name = db:safe_name(db_name)
   assert(db.__schema[db_name], &quot;Attempt to access database that does not exist.&quot;)

   db_inst = {_db_name = db_name}
   return setmetatable(db_inst, db.__DatabaseMT)
end

--- Queries for database content matching the given example. Different fields of
--- the example are AND connected.
--- &lt;/br&gt;
--- Field values should be strings and can contain the following values:
--- &lt;ul&gt;
---   &lt;li&gt;literal strings to search for
---   &lt;li&gt;comparison terms prepended with &amp;lt;, &amp;gt;, &amp;gt;=, &amp;lt;=, !=, &amp;lt;&amp;gt;
---       for number and date comparisons
---   &lt;li&gt;ranges with :: between lower and upper bound
---   &lt;li&gt;different single values combined by || as OR
---   &lt;li&gt;strings containing % for a single and _ for multiple wildcard
---       characters
--- &lt;/ul&gt;
--- &lt;br/&gt;
--- @param database Reference to the database that should be queried.
--- @param example  Query prototype that should be searched for.
--- @usage This example shows, how to use this function:
---   &lt;pre&gt;
---      mydb = db:create(&quot;mydb&quot;,
---        {
---          sheet = {
---            name = &quot;&quot;, id = 0, city = &quot;&quot;,
---            _index = { &quot;name&quot; },
---            _unique = { &quot;id&quot; },
---            _violations = &quot;FAIL&quot;
---          }
---        })
---      test_data = {
---        {name=&quot;Ixokai&quot;, city=&quot;Magnagora&quot;, id=1},
---        {name=&quot;Vadi&quot;, city=&quot;New Celest&quot;, id=2},
---        {name=&quot;Heiko&quot;, city=&quot;Hallifax&quot;, id=3},
---        {name=&quot;Keneanung&quot;, city=&quot;Hashan&quot;, id=4},
---        {name=&quot;Carmain&quot;, city=&quot;Mhaldor&quot;, id=5},
---        {name=&quot;Ixokai&quot;, city=&quot;Hallifax&quot;, id=6},
---      }
---      db:add(mydb.sheet, unpack(test_data))
---      res = db:query_by_example(mydb.sheet, { name = &quot;Ixokai&quot;})
---      display(res)
---      --[[
---      Prints
---      {
---        {
---          id = 1,
---          name = &quot;Ixokai&quot;,
---          city = &quot;Magnagora&quot;
---        },
---        {
---          id = 6,
---          name = &quot;Ixokai&quot;,
---          city = &quot;Hallifax&quot;
---        }
---      }
---      --]]
---   &lt;/pre&gt;
---
--- @usage This example shows, how to combine two fields:
---   &lt;pre&gt;
---      mydb = db:create(&quot;mydb&quot;,
---        {
---          sheet = {
---            name = &quot;&quot;, id = 0, city = &quot;&quot;,
---            _index = { &quot;name&quot; },
---            _unique = { &quot;id&quot; },
---            _violations = &quot;FAIL&quot;
---          }
---        })
---      test_data = {
---        {name=&quot;Ixokai&quot;, city=&quot;Magnagora&quot;, id=1},
---        {name=&quot;Vadi&quot;, city=&quot;New Celest&quot;, id=2},
---        {name=&quot;Heiko&quot;, city=&quot;Hallifax&quot;, id=3},
---        {name=&quot;Keneanung&quot;, city=&quot;Hashan&quot;, id=4},
---        {name=&quot;Carmain&quot;, city=&quot;Mhaldor&quot;, id=5},
---      }
---      db:add(mydb.sheet, unpack(test_data))
---      res = db:query_by_example(mydb.sheet, { name = &quot;Ixokai&quot;, id = &quot;1&quot;})
---      display(res)
---      --[[
---      Prints
---      {
---        id = 1,
---        name = &quot;Ixokai&quot;,
---        city = &quot;Magnagora&quot;
---      }
---      --]]
---   &lt;/pre&gt;
function db:query_by_example(database, example)

   if table.is_empty(example) then return nil end

   local topLevel = {}
   local find = string.find
   local match = string.match

   for key, value in pairs(example) do

      value = string.trim(value)

      local op, exp = match(value, &quot;^%s*([&lt;&gt;=!]*)%s*(.*)$&quot;)

      if op == &quot;&lt;&quot; then
         topLevel[#topLevel + 1] = db:lt(database[key], exp)
      elseif op == &quot;&gt;&quot; then
         topLevel[#topLevel + 1] = db:gt(database[key], exp)
      elseif op == &quot;&gt;=&quot; then
         topLevel[#topLevel + 1] = db:gte(database[key], exp)
      elseif op == &quot;&lt;=&quot; then
         topLevel[#topLevel + 1] = db:lte(database[key], exp)
      elseif op == &quot;!=&quot; or op == &quot;&lt;&gt;&quot; then
         if find(exp, &quot;__NULL__&quot;, 1, true) then
            topLevel[#topLevel + 1] = db:is_not_nil(database[key])
         else
            topLevel[#topLevel + 1] = db:not_eq(database[key], exp)
         end
      else
         if find(value, &quot;%s*||%s*&quot;) then
            topLevel[#topLevel + 1] = db:in_(database[key], string.split(value,
&quot;%s*||%s*&quot;))
         elseif find(value, &quot;__NULL__&quot;, 1, true) then
            topLevel[#topLevel + 1] = db:is_nil(database[key])
         elseif find(value, &quot;_&quot;, 1, true) or find(value, &quot;%&quot;, 1, true) then
            topLevel[#topLevel + 1] = db:like(database[key], value)
         elseif find(value, &quot;::&quot;, 1, true) then
            topLevel[#topLevel + 1] = db:between(database[key], match(value, &quot;^(.-)::(.+)$&quot;))
         else
            topLevel[#topLevel + 1] = db:eq(database[key], value)
         end
      end

   end

   return db:AND(unpack(topLevel))
end
</script>
                <eventHandlerList/>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>DurisScripts</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>Gauge Updaters</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>HEALTH</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function HEALTH(hp, hpmax)
	if hp&gt;hpmax then myHpPer = 100
	else
		myHpPer = math.floor((hp/hpmax)*100)
	end

	if (myHpPer &gt;= 100) then
    --brightGreen
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#00FF00&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho(&quot;&lt;black&gt;HPS: &quot; ..myHpPer..&quot;%&quot;)
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 90) then
	--darkGreen
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#009900&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho(&quot;&lt;black&gt;HPS: &quot; ..myHpPer..&quot;%&quot;)
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 80) then
    --brightYellow
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#FFFF00&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho(&quot;&lt;black&gt;HPS: &quot; ..myHpPer..&quot;%&quot;)	
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 70) then
    --darkYellow
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#999900&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho(&quot;&lt;black&gt;HPS: &quot; ..myHpPer..&quot;%&quot;)
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 60) then
    --brightMagenta
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#FF00FF&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho(&quot;&lt;black&gt;HPS: &quot; ..myHpPer..&quot;%&quot;)	
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 50) then
    --darkMagenta
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#990099&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo(&quot;HPS: &quot; ..myHpPer..&quot;%&quot;)	
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 40) then
    --brightRed
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#FF0000&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo(&quot;HPS: &quot; ..myHpPer..&quot;%&quot;)		
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 30) then
    --brightRed
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#FF0000&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo(&quot;HPS: &quot; ..myHpPer..&quot;%&quot;)			
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 20) then
    --darkRed
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#990000&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo(&quot;HPS: &quot; ..myHpPer..&quot;%&quot;)						
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 10) then
    --darkRed
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#990000&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo(&quot;HPS: &quot; ..myHpPer..&quot;%&quot;)			
		GUI.Health:setValue(myHpPer,100)
	else
    --darkRed
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;#990000&quot;)
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo(&quot;HPS: &quot; ..myHpPer..&quot;%&quot;)		
		GUI.Health:setValue(myHpPer,100)
	end

end -- HEALTH</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>EXPERIENCE</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function EXP(expPer)
GUI.Experience:setValue(expPer,100)
GUI.Experience.front:echo(&quot;EXP: &quot; ..expPer..&quot;%&quot;)
--darkward.gauge2a:setValue(maPer,100)
--darkward.gauge2b:setValue(100,100,&quot;&lt;left&gt;&quot;..ma..&quot;/&quot;..mamax..&quot; EXP&lt;/left&gt;&quot;)


end -- EXP



function EXPTEXT(expText)
GUI.Experience:setValue(100,100)
GUI.Experience.front:echo(&quot;EXP_REM: &quot; ..expText)
--darkward.gauge2a:setValue(maPer,100)
--darkward.gauge2b:setValue(100,100,&quot;&lt;left&gt;&quot;..ma..&quot;/&quot;..mamax..&quot; EXP&lt;/left&gt;&quot;)


end -- EXP</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>MOVES</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function MOVES(mv, mvmax)
	mvPer = math.floor((mv/mvmax)*100)

	if (mvPer &gt;= 100) then
    --	Gold
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;gold&quot;)
		GUI.GaugeFrontCSS:set(&quot;color&quot;,&quot;black&quot;)	
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 90) then
	--	Gold
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;gold&quot;)
		GUI.GaugeFrontCSS:set(&quot;color&quot;,&quot;black&quot;)	
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 80) then
    --DarkKhaki
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;darkkhaki&quot;)
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)	
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 70) then
    --DarkKhaki
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;darkkhaki&quot;)
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 60) then
    --Goldenrod
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;Goldenrod&quot;)
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)	
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 50) then
    --Goldenrod
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;Goldenrod&quot;)
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)	
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 40) then
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;DarkGoldenrod&quot;)
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)		
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 30) then
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;DarkGoldenrod&quot;)
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)			
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 20) then
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;DarkGoldenrod&quot;)
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)						
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 10) then
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;DarkGoldenrod&quot;)
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)			
		GUI.Endurance:setValue(mvPer,100)
	else
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set(&quot;background-color&quot;,&quot;DarkGoldenrod&quot;)
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho(&quot;&lt;black&gt;MVS: &quot; ..mvPer..&quot;%&quot;)		
		GUI.Endurance:setValue(mvPer,100)
	end

end -- MOVES
</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>Spell Casting from Table</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>castSpell</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function castSpell(charClass, spellname, target)
	local c = charClass
	local s = c[spellname]
	local t = target or false
   if s and t then
		send(&quot;cast '&quot;..s..&quot;'&quot;..t)
   elseif s then
		send(&quot;cast '&quot;..s..&quot;'&quot;)
	else
      for k, v in pairs(c) do
         print(k , v)
		end
   end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Druid Spell Table</name>
                        <packageName></packageName>
                        <script>-- Druid Spell Table

druid = {
ani = &quot;Animal Friendship&quot;,
af = &quot;Awaken Forest&quot;,
ag = &quot;Animal Growth&quot;,
aid = &quot;Aid&quot;,
as = &quot;Acid Stream&quot;,
av = &quot;Animal Vision&quot;,
bark = &quot;Barkskin&quot;,
blade = &quot;Flame Blade&quot;,
bs = &quot;Blood to Stone&quot;,
bw = &quot;Binding Wind&quot;,
call = &quot;Call woodland beings&quot;,
cd = &quot;Creeping Doom&quot;,
land = &quot;Consecrate Land&quot;,
cl = &quot;Call Lightning&quot;,
cs = &quot;Create Spring&quot;,
cy = &quot;Cyclone&quot;,
dis = &quot;Disease&quot;,
dm = &quot;Dispel Magic&quot;,
ea = &quot;Elemental Aura&quot;,
em = &quot;Earthen Maul&quot;,
en = &quot;Entangle&quot;,
endu = &quot;Endurance&quot;,
eq = &quot;Earthquake&quot;,
es = &quot;Earth Spike&quot;,
els = &quot;Elemental Swarm&quot;,
ff = &quot;Faerie Fire&quot;,
fog = &quot;Faerie Fog&quot;,
fort = &quot;Fortitude&quot;,
fs = &quot;Firestorm&quot;,
g = &quot;Grow&quot;,
hu = &quot;Hurricane&quot;,
iw = &quot;Ironwood&quot;,
lb = &quot;Lightning Bolt&quot;,
lc = &quot;Lightning Curtain&quot;,
moon = &quot;Moonstone&quot;,
nb = &quot;Natures Blessing&quot;,
nova = &quot;Nova&quot;,
nt = &quot;Natures Touch&quot;,
po = &quot;Poison&quot;,
prota = &quot;Protection from Animals&quot;,
pul = &quot;Pulchritude&quot;,
pwt = &quot;Pass Without Trace&quot;,
reg = &quot;Regeneration&quot;,
si = &quot;Summon insects&quot;,
sb = &quot;spore burst&quot;,
ser = &quot;Serendipity&quot;,
sg = &quot;Spike Growth&quot;,
sr = &quot;Sunray&quot;,
ss = &quot;Sticks to Snakes&quot;,
storm = &quot;Storm Shield&quot;,
tran = &quot;Tranquility&quot;,
v = &quot;Vines&quot;,
well = &quot;Moonwell&quot;,
wt = &quot;Wind Tunnel&quot;,
ww = &quot;Wandering Woods&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Necromancer Spell Table</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
Necromancer = {
detm = &quot;Detect Magic&quot;,
mm = &quot;Magic Missile&quot;,
mc = &quot;Minor Creation&quot;,
pres = &quot;Preserve&quot;,
protu = &quot;Protection from Undead&quot;,
ct = &quot;Chill Touch&quot;,
protc = &quot;Protection from Cold&quot;,
protl = &quot;Protection from Living&quot;,
sl = &quot;Sleep&quot;,
vto = &quot;Vampiric Touch&quot;,
ad = &quot;Animate Dead&quot;,
dm = &quot;Dispel Magic&quot;,
emb = &quot;Embalm&quot;,
sense = &quot;Sense Follower&quot;,
rmin = &quot;Rejuvenate Minor&quot;,
str = &quot;Strength&quot;,
wit = &quot;Wither&quot;,
ll = &quot;Life Leech&quot;,
unm = &quot;Unmaking&quot;,
cs = &quot;Coldshield&quot;,
conc = &quot;Concealment&quot;,
fe = &quot;Feeblemind&quot;,
fs = &quot;Fireshield&quot;,
hu = &quot;Heal Undead&quot;,
lev = &quot;Levitate&quot;,
rs = &quot;Raise Spectre&quot;,
qq = &quot;Teleport&quot;,
cc = &quot;Cone of Cold&quot;,
mg = &quot;Minor Globe of Invulnerability&quot;,
rmaj = &quot;Rejuvenate Major&quot;,
vu = &quot;Vitalize Undead&quot;,
en = &quot;Enervation&quot;,
pu = &quot;Protect Undead&quot;,
rw = &quot;Raise Wraith&quot;,
rtn = &quot;Reveal True Name&quot;,
knock = &quot;Knock&quot;,
di = &quot;Detect Invisibility&quot;,
disi = &quot;Dispel Invisible&quot;,
has = &quot;Haste&quot;,
invis = &quot;Improved Invisibility&quot;,
nc = &quot;Negative Concussion Blast&quot;,
age = &quot;Age&quot;,
dim = &quot;Dimension Door&quot;,
rv = &quot;Raise Vampire&quot;,
ud = &quot;Undeath to Death&quot;,
ed = &quot;Energy Drain&quot;,
cof = &quot;Cloak of Fear&quot;,
fly = &quot;Fly&quot;,
me = &quot;Mass Embalm&quot;,
rl = &quot;Raise Lich&quot;,
tran = &quot;Vampiric Trance&quot;,
wb = &quot;Wall of Bones&quot;,
cf = &quot;Corpseform&quot;,
cd = &quot;Create Dracolich&quot;,
pwk = &quot;Power Word Kill&quot;,
bm = &quot;Blackmantle&quot;,
sg = &quot;Summon Ghasts&quot;,
cgd = &quot;Create Greater Dracolich&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Summoner Spell Table</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

Summoner = {
detm = &quot;Detect Magic&quot;,
mm = &quot;Magic Missile&quot;,
mc = &quot;Minor Creation&quot;,
ct = &quot;Chill Touch&quot;,
bh = &quot;Burning Hands&quot;,
mi = &quot;Mirror Image&quot;,
sleep = &quot;Sleep&quot;,
ai = &quot;Acidimmolate&quot;,
agi = &quot;Agility&quot;,
conc = &quot;Concealment&quot;,
dm = &quot;Dispel Magic&quot;,
mf = &quot;Mage Flame&quot;,
sg = &quot;Shocking Grasp&quot;,
str = &quot;Strength&quot;,
ew = &quot;Enchant Weapon&quot;,
infra = &quot;Infravision&quot;,
lev = &quot;Levitate&quot;,
lb = &quot;Lightning Bolt&quot;,
ray = &quot;Ray of Enfeeblement&quot;,
rtn = &quot;Reveal True Name&quot;,
wall = &quot;Wall of Force&quot;,
cs = &quot;Coldshield&quot;,
cb = &quot;Contain Being&quot;,
fs = &quot;Fireshield&quot;,
id = &quot;Identify&quot;,
sf = &quot;Sense Follower&quot;,
slow = &quot;Slowness&quot;,
color = &quot;Color Spray&quot;,
fe = &quot;Feeblemind&quot;,
mglobe = &quot;Minor Globe of Invulnerability&quot;,
ss = &quot;Stoneskin&quot;,
qq = &quot;Teleport&quot;,
aw = &quot;Airy Water&quot;,
cc = &quot;Cone of Cold&quot;,
dim = &quot;Dimension Door&quot;,
fb = &quot;Fireball&quot;,
has = &quot;Haste&quot;,
is = &quot;Icestorm&quot;,
wallf = &quot;Wall of Flames&quot;,
walli = &quot;Wall of Ice&quot;,
web = &quot;Web&quot;,
di = &quot;Detect Invisibility&quot;,
globe = &quot;Globe of Invulnerability&quot;,
invis = &quot;Improved Invisibility&quot;,
ps = &quot;Prismatic Spray&quot;,
relo = &quot;Relocate&quot;,
far = &quot;Farsee&quot;,
gss = &quot;Group Stone Skin&quot;,
gglobe = &quot;Group Globe of Invulnerability&quot;,
cube = &quot;Prismatic Cube&quot;,
cc = &quot;Prismatic Cube&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Conjurer Spell Table</name>
                        <packageName></packageName>
                        <script>Conjurer = {
agi = &quot;agility&quot;,
aw = &quot;airy water&quot;,
bh = &quot;burning hands&quot;,
ce = &quot;conjure elemental&quot;,
cge = &quot;conjure greater elemental&quot;,
conc = &quot;concealment&quot;,
cone = &quot;cone of cold&quot;,
cs = &quot;coldshield&quot;,
cs = &quot;color spray&quot;,
ct = &quot;chill touch&quot;,
cube = &quot;prismatic cube&quot;,
detm = &quot;detect magic&quot;,
di = &quot;detect invisibility&quot;,
dim = &quot;dimension door&quot;,
dis = &quot;disintegrate&quot;,
dm = &quot;dispel magic&quot;,
ew = &quot;enchant weapon&quot;,
farsee = &quot;farsee&quot;,
fb = &quot;fireball&quot;,
feeb = &quot;feeblemind&quot;,
fly = &quot;fly&quot;,
fs = &quot;fireshield&quot;,
gate = &quot;gate&quot;,
gglobe = &quot;group globe of invulnerability&quot;,
globe = &quot;globe of invulnerability&quot;,
gss = &quot;group stornogs spheres&quot;,
gstone = &quot;group stone skin&quot;,
has = &quot;haste&quot;,
id = &quot;identify&quot;,
ii = &quot;improved invisibility&quot;,
infra = &quot;infravision&quot;,
is = &quot;ice storm&quot;,
lb = &quot;lightning bolt&quot;,
lev = &quot;levitate&quot;,
mc = &quot;minor creation&quot;,
mf = &quot;mage flame&quot;,
mglobe = &quot;minor globe of invulnerability&quot;,
mi = &quot;mirror image&quot;,
mm = &quot;magic missile&quot;,
pris = &quot;prismatic spray&quot;,
ray = &quot;ray of enfeeblement&quot;,
relo = &quot;relocate&quot;,
rtn = &quot;reveal true name&quot;,
sf = &quot;sense follower&quot;,
sg = &quot;shocking grasp&quot;,
shroud = &quot;stornogs metamagic shroud&quot;,
sle = &quot;sleep&quot;,
slow = &quot;slowness&quot;,
ss = &quot;stornogs spheres&quot;,
shell = &quot;stornogs shimmering starshell&quot;,
stone = &quot;stone skin&quot;,
str = &quot;strength&quot;,
tel = &quot;teleport&quot;,
web = &quot;web&quot;,
wf = &quot;wall of force&quot;,
fw = &quot;wall of flames&quot;,
iw = &quot;wall of iron&quot;,
wi = &quot;wall of ice&quot;,
ws = &quot;wall of stone&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Ethermancer Spell Table</name>
                        <packageName></packageName>
                        <script>Ethermancer = {
aw = &quot;arcane whirlwind&quot;,
beacon = &quot;frost beacon&quot;,
blur = &quot;blur&quot;,
cc = &quot;cone of cold&quot;,
cold = &quot;coldshield&quot;,
cs = &quot;cold snap&quot;,
ct = &quot;chill touch&quot;,
detm = &quot;detect magic&quot;,
dm = &quot;dispel magic&quot;,
ef = &quot;ethereal form&quot;,
er = &quot;ethereal recharge&quot;,
fb = &quot;frost bolt&quot;,
ff = &quot;faerie fire&quot;,
fog = &quot;faerie fog&quot;,
frost = &quot;frostbite&quot;,
fs = &quot;faerie sight&quot;,
im = &quot;ice missile&quot;,
is = &quot;ice storm&quot;,
it = &quot;induce tupor&quot;,
lb = &quot;lightning bolt&quot;,
lc = &quot;lightning curtain&quot;,
ls = &quot;lightning shield&quot;,
mfly = &quot;mass fly&quot;,
purs = &quot;purify spirit&quot;,
ps = &quot;plane shift&quot;,
purge = &quot;purge&quot;,
sd = &quot;static discharge&quot;,
se = &quot;storm empathy&quot;,
tt = &quot;tempest terrain&quot;,
va = &quot;vapor armor&quot;,
vs = &quot;vapor strike&quot;,
wb = &quot;wind blade&quot;,
wind = &quot;windwalk&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Illusionist Spell Table</name>
                        <packageName></packageName>
                        <script>Illusionist = {
as = &quot;asphyxiate&quot;,
b = &quot;blindness&quot;,
bb = &quot;boulder&quot;,
bh = &quot;burning hands&quot;,
cd = &quot;darkness&quot;,
cl = &quot;continual light&quot;,
clone = &quot;clone form&quot;,
conc = &quot;concealment&quot;,
del = &quot;delirium&quot;,
deti = &quot;detect illusion&quot;,
detm = &quot;detect magic&quot;,
dim = &quot;shadow travel&quot;,
dis = &quot;dispel invisible&quot;,
dm = &quot;dispel magic&quot;,
drag = &quot;dragon&quot;,
dt = &quot;dream travel&quot;,
f = &quot;hammer&quot;,
farsee = &quot;farsee&quot;,
fl = &quot;flicker&quot;,
fly = &quot;fly&quot;,
ii = &quot;insects&quot;,
imp = &quot;imprisonment&quot;,
infra = &quot;infravision&quot;,
iq = &quot;illusionary wall&quot;,
lev = &quot;levitate&quot;,
mask = &quot;mask&quot;,
massi = &quot;mass invisibility&quot;,
mc = &quot;minor creation&quot;,
mi = &quot;mirror image&quot;,
mir = &quot;mirage&quot;,
mm = &quot;magic missile&quot;,
nm = &quot;nightmare&quot;,
non = &quot;nonexistence&quot;,
pa = &quot;phantom armor&quot;,
ref = &quot;reflection&quot;,
rtn = &quot;reveal true name&quot;,
sle = &quot;sleep&quot;,
sm = &quot;shadow monster&quot;,
ss = &quot;shadow shield&quot;,
sv = &quot;stunning visions&quot;,
titan = &quot;titan&quot;,
v = &quot;vanish&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Paladin Spell Table</name>
                        <packageName></packageName>
                        <script>Paladin = {
ah = &quot;accelerated healing&quot;,
bless = &quot;bless&quot;,
ca = &quot;armor&quot;,
cb = &quot;cure blind&quot;,
cc = &quot;cure critic&quot;,
cd = &quot;cure disease&quot;,
cl = &quot;cure light&quot;,
light = &quot;continual light&quot;,
cs = &quot;cure serious&quot;,
de = &quot;dispel evil&quot;,
dh = &quot;dharma&quot;,
du = &quot;destroy undead&quot;,
gh = &quot;group heal&quot;,
h = &quot;heal&quot;,
hw = &quot;holy word&quot;,
inv = &quot;invigorate&quot;,
j = &quot;judgement&quot;,
prote = &quot;protection from evil&quot;,
ra = &quot;righteous aura&quot;,
rc = &quot;remove curse&quot;,
rp = &quot;remove poison&quot;,
sanc = &quot;sanctuary&quot;,
ss = &quot;soulshield&quot;,
tu = &quot;turn undead&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Psionicist Spell Table</name>
                        <packageName></packageName>
                        <script>Psionicist = {
ac = &quot;adrenaline control&quot;,
as = &quot;aura sight&quot;,
ba = &quot;ballistic attack&quot;,
bio = &quot;biofeedback&quot;,
ca = &quot;cell adjustment&quot;,
cs = &quot;create sound&quot;,
df = &quot;death field&quot;,
ea = &quot;enhance agility&quot;,
eb = &quot;ego blast&quot;,
ec = &quot;enhance constitution&quot;,
ed = &quot;enhance dexterity&quot;,
ef = &quot;ectoplasmic form&quot;,
en = &quot;enrage&quot;,
energy = &quot;energy containment&quot;,
eq = &quot;ether warp&quot;,
es = &quot;enhance strength&quot;,
ew = &quot;ego whip&quot;,
ex = &quot;excogitate&quot;,
f = &quot;detonate&quot;,
farsee = &quot;flesh armor&quot;,
fly = &quot;flight&quot;,
intf = &quot;intellect fortress&quot;,
ip = &quot;inflict pain&quot;,
iw = &quot;tower of iron will&quot;,
lh = &quot;lend health&quot;,
ma = &quot;molecular agitation&quot;,
mc = &quot;molecular control&quot;,
pc = &quot;psychic crush&quot;,
worm = &quot;wormhole&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="no" isFolder="yes">
                    <name>EXPBOT</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>doCombat</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function doCombat()
	if mySpellCount[10]&gt;0 then
		send(&quot;cast 'creeping doom' &quot;..myTarget)
		mySpellCount[10] = mySpellCount[10]-1
	elseif mySpellCount[9]&gt;0 then
		send(&quot;cast 'sunray' &quot;..myTarget)
		mySpellCount[9] = mySpellCount[9]-1
	elseif mySpellCount[7]&gt;0 then
		send(&quot;cast 'cyclone' &quot;..myTarget)
		mySpellCount[7] = mySpellCount[7]-1		
	elseif mySpellCount[6]&gt;0 then
		send(&quot;cast 'earthen maul' &quot;..myTarget)
		mySpellCount[6] = mySpellCount[6]-1			
	elseif mySpellCount[4]&gt;0 then
		send(&quot;cast 'lightning bolt' &quot;..myTarget)
		mySpellCount[4] = mySpellCount[4]-1
	elseif mySpellCount[2]&gt;0 then
		send(&quot;cast 'sticks to snakes' &quot;..myTarget)
		mySpellCount[2] = mySpellCount[2]-1
	end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>checkRoom</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function checkRoom()
	send(&quot;look room&quot;)
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>checkSpells</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function checkSpells()
	if spellsMissing then
		send(&quot;commune&quot;)
	else
		checkHealth()
	end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>checkHealth</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function checkHealth()
	if myHEALTH &lt; myHealthMax then
		doHealSelf()
	else
		checkRoom()
	end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>doHealSelf</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function doHealSelf()
	if tonumber(myLevel)&gt;20 then
		send(&quot;cast 'natures touch' me&quot;)
	elseif tonumber(myLevel)&gt;15 then
		if checkSpring then
			send(&quot;drink spring&quot;)
		else
			send(&quot;cast 'create spring'&quot;)
			send(&quot;drink spring&quot;)
		end
	else
		send(&quot;rest&quot;)
	end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>XPBOT</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function XPBot()
	if myCombatStatus then
		doCombat()
	else
		checkSpells()
	end
end	</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>TableFunctions</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------



</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>MinValue</name>
                        <packageName></packageName>
                        <script>function table.min( myTable)
   local minValue
   for name, value in ipairs( myTable) do
      minValue = ((not minValue or value &lt; minValue) and value)  or minValue
   end
   return minValue
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>spairs</name>
                        <packageName></packageName>
                        <script>function spairs(t, order)
    -- collect the keys
    local keys = {}
    for k in pairs(t) do keys[#keys+1] = k end

    -- if order function given, sort by it by passing the table and keys a, b,
    -- otherwise just sort the keys 
    if order then
        table.sort(keys, function(a,b) return order(t, a, b) end)
    else
        table.sort(keys)
    end

    -- return the iterator function
    local i = 0
    return function()
        i = i + 1
        if keys[i] then
            return keys[i], t[keys[i]]
        end
    end
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="no" isFolder="no">
                        <name>spairs_print_ascending</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function spairs_print(tableName, order)
		for k,v in spairs(tableName, function(t,a,b) return t[b] &gt; t[a] end) do
   			cecho(&quot;Left3&quot;, &quot;&lt;green&gt;&quot;..k..&quot; (&lt;yellow&gt;&quot;..v..&quot;)\n&quot;)
		end
end
</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Assign Heal Targets</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
healT={}
function spairs_var(tableName, order)
		i=1
		for k,v in spairs(tableName, function(t,a,b) return t[b] &gt; t[a] end) do
   			--cecho(&quot;Left2&quot;, &quot;&lt;green&gt;&quot;..k..&quot;&lt;yellow&gt;&quot;..v..&quot;\n&quot;)
			healT[&quot;healTarget&quot;..i] = k
			i = i+1
		end
end
</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Table Contains</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function table.contains(table, element)
  for _, value in pairs(table) do
    if value == element then
      return true
    end
  end
  return false
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Sets</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function addToSet(set, key)
    set[key] = true
end

function removeFromSet(set, key)
    set[key] = nil
end

function setContains(set, key)
    return set[key] ~= nil
end</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>findString</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function findString(str, word)

	if string.find(str, word) then
		print (&quot;The word was found.&quot;)
	else
		print (&quot;The word was not found.&quot;)
	end
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>Variables</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>myVariables</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
myName=&quot;Idor&quot;
myLevel=&quot;10&quot;
myClass=&quot;Paladin&quot;
myRace=&quot;Halfling&quot;
myRacewar=&quot;Good&quot;
myInstrument=&quot;drums&quot;
mySong=&quot;SongOfSleep&quot;
myBag=&quot;satchel&quot;
myTank=&quot;Drella&quot;
myTankCond=&quot;&quot;
myTankPos=&quot;&quot;
myEnemy=&quot;&quot;
myEnemyCond=&quot;&quot;
myEnemyPos=&quot;&quot;
myWeapon=&quot;sword&quot;
LootVar=&quot;all&quot;
autoId = false
mySkills= mySkills or {}
Dismount_Flag = 1

target_select = 1

CombatMiss = CombatMiss or 0
CombatHit = CombatHit or 0
CombatDodge = CombatDodge or 0

myPrevExp = myPrevExp or nil
myCurExp = myCurExp or nil

myInRoom = myInRoom or {}
listInRoom = listInRoom or {}
myActiveSpells = myActiveSpells or {}
myRescueList= myRescueList or {}
myTankList= myTankList or {}
mySpellCount = mySpellCount or {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

myCombatStatus=false
spellsMissing = true
checkSpring = false


BardSongList=[[Songs
========================
 
&lt;khaki&gt;Sleep          &lt;DodgerBlue&gt;Flute
&lt;khaki&gt;Calming        &lt;DodgerBlue&gt;Harp
&lt;khaki&gt;Discord        &lt;DodgerBlue&gt;Flute
&lt;khaki&gt;Harmony        &lt;DodgerBlue&gt;Flute
&lt;khaki&gt;Protection     &lt;DodgerBlue&gt;Horn
&lt;khaki&gt;Forgetfulness  &lt;DodgerBlue&gt;Mandolin
&lt;khaki&gt;Cowardice      &lt;DodgerBlue&gt;Drums
&lt;khaki&gt;Peace          &lt;DodgerBlue&gt;Harp
&lt;khaki&gt;Dissonance     &lt;DodgerBlue&gt;Horn
&lt;khaki&gt;Flight         &lt;DodgerBlue&gt;Horn
&lt;khaki&gt;Dragons        &lt;DodgerBlue&gt;Horn
&lt;khaki&gt;Healing        &lt;DodgerBlue&gt;Lyre
&lt;khaki&gt;Harming        &lt;DodgerBlue&gt;Lyre
&lt;khaki&gt;Storms         &lt;DodgerBlue&gt;Drums
&lt;khaki&gt;Heroism        &lt;DodgerBlue&gt;Drums
&lt;khaki&gt;Revelation     &lt;DodgerBlue&gt;Mandolin
&lt;khaki&gt;Chaos          &lt;DodgerBlue&gt;Drums
&lt;khaki&gt;Charming       &lt;DodgerBlue&gt;Flute
 
]]

Skill_List = {&quot;1h Bludgeon&quot;,&quot;1h piercing&quot;,&quot;1h slashing&quot;,&quot;2h bludgeon&quot;,&quot;2h slashing&quot;,&quot;appraise&quot;,&quot;Attack&quot;,&quot;Aura of Battle Lust&quot;,&quot;Aura of Endurance&quot;,&quot;Aura of Improved Healing&quot;,&quot;Aura of Precision&quot;,&quot;Aura of Protection&quot;,&quot;awareness&quot;,&quot;backstab&quot;,&quot;Bandage&quot;,&quot;Bash&quot;,&quot;Blindfighting&quot;,&quot;Carve&quot;,&quot;Circle&quot;,&quot;Cleave&quot;,&quot;Climb&quot;,&quot;concentration&quot;,&quot;Control Flee&quot;,&quot;Detect Evil&quot;,&quot;Detect Good&quot;,&quot;Dirttoss&quot;,&quot;Disarm&quot;,&quot;disguise&quot;,&quot;Dodge&quot;,&quot;Double&quot;,&quot;double attack&quot;,&quot;drums&quot;,&quot;Dual Wield&quot;,&quot;Evade&quot;,&quot;First Aid&quot;,&quot;Fishing&quot;,&quot;flute&quot;,&quot;Garrote&quot;,&quot;Guard&quot;,&quot;Hamstring&quot;,&quot;harp&quot;,&quot;hide&quot;,&quot;horn&quot;,&quot;Instant Kill&quot;,&quot;Kick&quot;,&quot;Lay Hands&quot;,&quot;listen&quot;,&quot;lore&quot;,&quot;lyre&quot;,&quot;mandolin&quot;,&quot;Meditate&quot;,&quot;Mine&quot;,&quot;Mount&quot;,&quot;Parry&quot;,&quot;Pick Lock&quot;,&quot;Quick Chant&quot;,&quot;Quick Step&quot;,&quot;Ranged Weapons&quot;,&quot;Rescue&quot;,&quot;Retreat&quot;,&quot;riff&quot;,&quot;Riposte&quot;,&quot;Safe Fall&quot;,&quot;salvage&quot;,&quot;scribe&quot;,&quot;Shadowstep&quot;,&quot;shield block&quot;,&quot;Skewer&quot;,&quot;Slip&quot;,&quot;sneak&quot;,&quot;sneaky strike&quot;,&quot;song of calming&quot;,&quot;song of chaos&quot;,&quot;song of charming&quot;,&quot;song of cowardice&quot;,&quot;song of discord&quot;,&quot;song of dissonance&quot;,&quot;song of dragons&quot;,&quot;song of flight&quot;,&quot;song of forgetfulness&quot;,&quot;song of harming&quot;,&quot;song of harmony&quot;,&quot;song of healing&quot;,&quot;song of heroism&quot;,&quot;song of peace&quot;,&quot;song of protection&quot;,&quot;song of revelation&quot;,&quot;song of sleep&quot;,&quot;song of storms&quot;,&quot;sorcerous spell knowledge&quot;,&quot;Spinal Tap&quot;,&quot;Steal&quot;,&quot;Subterfuge&quot;,&quot;Summon Mount&quot;,&quot;Swim&quot;,&quot;Switch Opponents&quot;,&quot;Trap&quot;,&quot;trip&quot;,&quot;Triple Attack&quot;,&quot;Unarmed Damage&quot;,&quot;Vicious Attack&quot;}
</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Prompt_Variables</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
myHEALTH = 100
myHEALTH_MAX = 100</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Direction Lookup</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
flee_Dir = {north = &quot;South&quot;,
	east = &quot;West&quot;,
	south = &quot;North&quot;,
	west = &quot;east&quot;,
	up = &quot;down&quot;,
	down = &quot;up&quot;,
	northwest = &quot;southeast&quot;,
	northeast = &quot;southwest&quot;,
	southeast = &quot;northwest&quot;,
	southwest = &quot;northeast&quot;,
	n = &quot;S&quot;,
	e = &quot;W&quot;,
	s = &quot;N&quot;,
	w = &quot;E&quot;,
	u = &quot;D&quot;,
	d = &quot;U&quot;,
	nw = &quot;SE&quot;,
	ne = &quot;SW&quot;,
	se = &quot;NW&quot;,
	sw = &quot;NE&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Items with Proc</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


Proc_Items = {
&quot;a gleaming dwarven warhammer covered with runic script&quot;,
&quot;a long slime-covered tendril with an unblinking eye&quot;,
&quot;a two-handed adamantite dwarven battle-hammer&quot;,
&quot;an ancient adamantium warhammer of dwarven kings&quot;,
&quot;the black dagger of reckoning&quot;,
&quot;the mithril axe of the dwarven lords&quot;,
&quot;the righteous warhammer of Clangeddin Silverbeard&quot;,
&quot;the smouldering forge hammer of Urtengor&quot;,
&quot;a cold steel axe called 'Brainripper'&quot;,
&quot;a diamondine short spear called 'Mankiller'&quot;,
&quot;the jewel of the Spider Queen&quot;,
&quot;its razor sharp talons&quot;,
&quot;Sunlash, the barbed whip of Injustice and Pain&quot;,
&quot;the bastard sword 'Stalker'&quot;,
&quot;the flaming whip of Mrinlor&quot;,
&quot;the granite dagger 'BloodFeast'&quot;,
&quot;the great claymore 'Mist'&quot;,
&quot;the helm of the dragonlords&quot;,
&quot;the platemail of the DragonLord&quot;,
&quot;a searing two-handed sword of lightning&quot;,
&quot;a massive spiked demon mace of the tanar'ri&quot;,
&quot;Pek'Nasisk, the venom lash&quot;,
&quot;Shokurung'otaghe'rakag'onk'rakag, the axe of ill repute&quot;,
&quot;the sword of scourging&quot;,
&quot;the tome of Strahd&quot;,
&quot;'Einjar' the titan shield of purity&quot;,
&quot;the writhing serpent of miracles&quot;,
&quot;a massive black steel club called Crusher&quot;,
&quot;a shard of bluestone called Freeze&quot;,
&quot;'B'ardingol', The Foe Hammer&quot;,
&quot;a dagger called 'Domination'&quot;,
&quot;a dagger called 'Submission'&quot;,
&quot;a huge double-bladed axe called 'Skull Splitter'&quot;,
&quot;a sacrificial blood dagger of Kvasir&quot;,
&quot;the mystic axe of the dragonkind&quot;,
&quot;the totem of the ancient dragon riders&quot;,
&quot;a black morningstar&quot;,
&quot;a drusus named 'Fade to Black'&quot;,
&quot;a falchion named 'Magebane'&quot;,
&quot;a longsword named 'Elfdawn'&quot;,
&quot;a massive sword named 'Lightning Bolt'&quot;,
&quot;a scimitar named 'Woundhealer'&quot;,
&quot;an ancient blade of paladins&quot;,
&quot;the blade of the Golden Flame&quot;,
&quot;a black-bladed dagger&quot;,
&quot;a fierce blade of doom&quot;,
&quot;Krazakan, the githyanki slayer&quot;,
&quot;a blood red sword named 'Death Rider'&quot;,
&quot;Tiamat's poison tail stinger&quot;,
&quot;the rod of Dispator&quot;,
&quot;a blazing longsword dubbed 'Rising Sun'&quot;,
&quot;a blazing mace dubbed 'Rising Sun'&quot;,
&quot;a massive longsword dubbed 'Dusk and Dawn'&quot;,
&quot;an icy longsword dubbed 'Rising Frost'&quot;,
&quot;an icy mace dubbed 'Rising Frost'&quot;,
&quot;the titan warhammer, 'Purelight'&quot;,
&quot;a mace of para-elemental ice&quot;,
&quot;a flaming sword of the valkyrie&quot;,
&quot;a great axe named 'Frostbite'&quot;,
&quot;Khildarak's war hammer&quot;,
&quot;a mace named 'Vengeance'&quot;,
&quot;a warhammer of the frozen north&quot;,
&quot;a longsword named 'Cinder'&quot;,
&quot;a fragment of moonstone heart&quot;,
&quot;a MaDMaNs slasher&quot;,
&quot;a MaDMaNs stabber&quot;,
&quot;a katana called 'Retribution'&quot;,
&quot;the lost sword of Cymrych Hugh&quot;,
&quot;a black longsword named 'Cauterizer'&quot;,
&quot;a cloak of Elvenkind&quot;,
&quot;a pair of pale, misty gloves&quot;,
&quot;a sleek adamantium dagger named 'Blight'&quot;,
&quot;an elaborate rune covered sword named 'Mournblade'&quot;,
&quot;the death-mask of Nakral&quot;,
&quot;a bloodblade called 'Lifereaver'&quot;,
&quot;a frost brand named 'Stormbringer'&quot;,
&quot;a ring of regeneration&quot;,
&quot;the legendary platemail of defense&quot;,
&quot;the shield of the earthwyrm&quot;,
&quot;a gold and ivory mace named 'Dragondeath'&quot;,
&quot;a severed tail spike&quot;,
&quot;the demonic warmace 'Pure-Dark'&quot;,
&quot;the icecrown of the frost revenants&quot;,
&quot;the sphere of wind&quot;,
&quot;a pair of dusty boots&quot;,
&quot;a pair of gauntlets formed of dust&quot;,
&quot;a pair of stone gauntlets&quot;,
&quot;the mace of the earth&quot;,
&quot;the orb of the sea&quot;,
&quot;the hammer of titankind&quot;,
&quot;a blood dagger of Tezcatlipoca&quot;,
&quot;a staff of power&quot;,
&quot;the doubling sword of Chaos&quot;,
&quot;Tsunami, the trident of storms&quot;,
&quot;the ice mace of Sevenoaks&quot;,
&quot;the unholy avenger named 'Bloodlust'&quot;,
&quot;something&quot;,
&quot;Illyn's Holy Sword&quot;,
&quot;Avernus the life stealer&quot;,
&quot;a black staff headed with a goat skull&quot;,
&quot;the huge bone broadsword 'Desecration'&quot;,
&quot;a runestone dagger&quot;,
&quot;'Starlight' the gold-linked morning star&quot;,
&quot;a strange scroll of enchantment&quot;,
&quot;an earring of wonderous power&quot;,
&quot;the heart of Bahamut&quot;,
&quot;the heart of Dragonnia&quot;,
&quot;the heart of Tiamat&quot;,
&quot;the infamous crystal dagger named 'Venom'&quot;,
&quot;the Legend of The Lore Keeper&quot;,
&quot;the neatly wrapped gift of the cosmos&quot;,
&quot;a flaming mace of the Ruzdo&quot;,
&quot;a jagged obsidian dagger with a sapphire hilt&quot;,
&quot;a faded-red dagger called 'Silencer'&quot;,
&quot;the crown of Aramus&quot;,
&quot;the stone mace 'Godsfury'&quot;,
&quot;the holy warhammer 'Discipline'&quot;,
&quot;a pair of aboleth leggings&quot;,
&quot;Chaos, The Unholy Avenger&quot;,
&quot;the pendant of the aboleth&quot;,
&quot;the totem of Mox&quot;,
&quot;the Soulrender&quot;,
&quot;Silence, the dagger of anguish&quot;,
&quot;an electium katar dubbed 'Miasma'&quot;,
&quot;an obsidian buckle named Rage&quot;,
&quot;the humming sword named 'Blaze'&quot;,
&quot;the lost blade of the Astral Dancer, 'Ender'&quot;,
&quot;a caustic dagger&quot;,
&quot;a flaming axe of the Azer&quot;,
&quot;a diorite shard named 'Seeker'&quot;,
&quot;a rune-covered svalich wood quarterstaff&quot;,
&quot;the rod of summoning&quot;,
&quot;a darkened blade bearing a Thieves Guild insignia&quot;,
&quot;a black bladed longsword&quot;,
&quot;a dagger named 'Fade'&quot;,
&quot;a giant longsword named 'Disintegrator'&quot;,
&quot;the three-headed flail of Yeenoghu&quot;,
&quot;a barbed whip dubbed 'Cometstrike'&quot;,
&quot;the staff of the storm&quot;,
&quot;a two-handed black minotaur axe&quot;,
&quot;grenadier proc&quot;,
&quot;a great warhammer named 'Fearfrost'&quot;,
&quot;a tricksters dagger of deception and illusions&quot;,
&quot;a crumpled note&quot;,
&quot;the globe of shadows&quot;,
&quot;trash&quot;,
&quot;a massive blackrock hammer named 'Searing Fist'&quot;,
&quot;a saber of the Felwood Kings&quot;,
&quot;the claw of Krizzix&quot;,
&quot;a cold saber called 'icicle'&quot;,
&quot;the Soulsword&quot;,
&quot;an adamantium dirk&quot;,
&quot;a large glowing sword of the tundra&quot;,
&quot;a sword named Snakebite&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Class Epic Skills</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
Epic_Skills = {&quot;empower song&quot;,
&quot;enchant&quot;,
&quot;epic agility&quot;,
&quot;epic charisma&quot;,
&quot;epic constitution&quot;,
&quot;epic dexterity&quot;,
&quot;epic intelligence&quot;,
&quot;epic luck&quot;,
&quot;epic power&quot;,
&quot;epic strength&quot;,
&quot;epic wisdom&quot;,
&quot;indomitable rage&quot;,
&quot;infuse life&quot;,
&quot;infuse magical device&quot;,
&quot;jin touch&quot;,
&quot;ki strike&quot;,
&quot;silent spell&quot;,
&quot;smelt&quot;,
&quot;spell penetration&quot;,
&quot;spellbind&quot;,
&quot;summon blizzard&quot;,
&quot;summon familiar&quot;,
&quot;toughness&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>shamanVariables</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
myTotem = &quot;obsidian&quot;
AnimalTotem = &quot;firwood&quot;
ElementalTotem = &quot;obsidian&quot;
SpiritualTotem = &quot;quartz&quot;</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>DurisClasses</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
Duris_Classes = {&quot;Warrior&quot;,&quot;Mercenary&quot;,&quot;Rogue&quot;,&quot;Bard&quot;,&quot;Conjurer&quot;,&quot;Summoner&quot;,&quot;Sorcerer&quot;,&quot;Psionicist&quot;,&quot;Druid&quot;,&quot;Cleric&quot;,&quot;Ethermancer&quot;,&quot;Monk&quot;,&quot;Paladin&quot;,&quot;Anti-Paladin&quot;,&quot;Berserker&quot;,&quot;Ranger&quot;,&quot;Reaver&quot;,&quot;Illusionist&quot;,&quot;Alchemist&quot;,&quot;Shaman&quot;,&quot;Necromancer&quot;,&quot;Blighter&quot;,&quot;Dreadlord&quot;,&quot;Avenger&quot;}</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Necro variables</name>
                        <packageName></packageName>
                        <script>--Necro Variables
Pet_1 = &quot;1.wraith&quot;
Pet_2 = &quot;2.wraith&quot;
Pet_3 = &quot;3.wraith&quot;
Pet_4 = &quot;4.wraith&quot;</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Evil_Race_List</name>
                        <packageName></packageName>
                        <script>-- Evil Race List
Evil_Races = {
	&quot;Drow&quot;,
	&quot;Duergar&quot;,
	&quot;Githyanki&quot;,
	&quot;Goblin&quot;,
	&quot;Kobold&quot;,
	&quot;Lich&quot;,
	&quot;Minotaur&quot;,
	&quot;Ogre&quot;,
	&quot;Orc&quot;,
	&quot;Thrikreen&quot;,
	&quot;Troll&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>Load Duris Database</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--- Initialize the duris db
db:create(&quot;durisdata&quot;, {stats={&quot;VNUM&quot;, &quot;TYPE&quot;, &quot;SLOT&quot;, &quot;NAME&quot;, &quot;LOCATIONLOWERCASE&quot;, &quot;LOCATION&quot;, &quot;STATS&quot;, &quot;ITEMVALUE&quot;}})
</script>
                    <eventHandlerList/>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>StringStuff</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>Title Case</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function titlecase(str)
    local buf = {}
    for word in string.gfind(str, &quot;%S+&quot;) do          
        local first, rest = string.sub(word, 1, 1), string.sub(word, 2)
        table.insert(buf, string.upper(first) .. string.lower(rest))
    end    
    return table.concat(buf, &quot; &quot;)
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>DurisClassList</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>ClassList</name>
                        <packageName></packageName>
                        <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
DurisClassList = {
&quot;Warrior&quot;,
&quot;Ranger&quot;,
&quot;Paladin&quot;,
&quot;Anti-Paladin&quot;,
&quot;Monk&quot;,
&quot;Reaver&quot;,
&quot;Berserker&quot;,
&quot;Dreadlord&quot;,
&quot;Avenger&quot;,
&quot;Cleric&quot;,
&quot;Druid&quot;,
&quot;Shaman&quot;,
&quot;Ethermancer&quot;,
&quot;Rogue&quot;,
&quot;Bard&quot;,
&quot;Mercenary&quot;,
&quot;Sorcerer&quot;,
&quot;Conjurer&quot;,
&quot;Illusionist&quot;,
&quot;Alchemist&quot;,
&quot;Psionicist&quot;,
&quot;Necromancer&quot;,
&quot;Theurgist&quot;,
&quot;Summoner&quot;
}

ActiveClass = &quot;None&quot;




</script>
                        <eventHandlerList/>
                    </Script>
                    <Script isActive="yes" isFolder="no">
                        <name>Decho Class List</name>
                        <packageName></packageName>
                        <script>DurisClassListDecho = {
Warrior = &quot;&lt;0,0,255:0,0,0&gt;Warrior&quot;,
Swordsman = &quot;&lt;0,0,255:0,0,0&gt;Swordsman&quot;,
Guardian = &quot;&lt;128,128,0:0,0,0&gt;Guardian&quot;,
Swashbuckler = &quot;&lt;85,85,255:0,0,0&gt;Swa&lt;0,0,255:0,0,0&gt;sh&lt;255,255,255:0,0,0&gt;buc&lt;0,0,255:0,0,0&gt;kler&quot;,
Ranger = &quot;&lt;0,255,0:0,0,0&gt;Ranger&quot;,
Blademaster = &quot;&lt;0,128,128:0,0,0&gt;Blademaster&quot;,
Huntsman = &quot;&lt;0,179,0:0,0,0&gt;Huntsman&quot;,
Marshall = &quot;&lt;0,179,0:0,0,0&gt;Ma&lt;128,128,0:0,0,0&gt;rsha&lt;0,179,0:0,0,0&gt;ll&quot;,
Psionicist = &quot;&lt;85,85,255:0,0,0&gt;Psionicist&quot;,
Pyrokinetic = &quot;&lt;128,0,0:0,0,0&gt;Pyr&lt;255,0,0:0,0,0&gt;okine&lt;128,0,0:0,0,0&gt;tic&quot;,
Enslaver = &quot;&lt;255,0,255:0,0,0&gt;En&lt;128,0,128:0,0,0&gt;slav&lt;255,0,255:0,0,0&gt;er&quot;,
Psycheporter = &quot;&lt;85,85,255:0,0,0&gt;Psyche&lt;128,128,128:0,0,0&gt;porter&quot;,
Paladin = &quot;&lt;255,255,255:0,0,0&gt;Paladin&quot;,
Crusader = &quot;&lt;192,192,192:0,0,0&gt;Crusa&lt;255,255,255:0,0,0&gt;der&quot;,
Cavalier = &quot;&lt;255,255,255:0,0,0&gt;Cavalier&quot;,
[&quot;Anti-Paladin&quot;] = &quot;&lt;128,128,128:0,0,0&gt;Anti-Paladin&quot;,
[&quot;Dark Knight&quot;] =  &quot;&lt;128,128,128:0,0,0&gt;Dark Knight&quot;,
[&quot;Demonic Rider&quot;] = &quot;&lt;255,255,255:0,0,0&gt;&lt;128,128,128:0,0,0&gt;Dem&lt;128,0,0:0,0,0&gt;onic Ri&lt;128,128,128:0,0,0&gt;der&quot;,
Violator = &quot;&lt;128,128,128:0,0,0&gt;Vi&lt;128,0,0:0,0,0&gt;o&lt;128,128,128:0,0,0&gt;lat&lt;128,0,0:0,0,0&gt;or&quot;,
Cleric = &quot;&lt;0,128,128:0,0,0&gt;Cleric&quot;,
Zealot = &quot;&lt;255,255,0:0,0,0&gt;Zealot&quot;,
Healer = &quot;&lt;255,255,255:0,0,0&gt; Healer&quot;,
Holyman = &quot;&lt;0,128,128:0,0,0&gt;Holy&lt;255,255,255:0,0,0&gt;man&quot;,
Monk = &quot;&lt;128,128,128:0,0,0&gt;M&lt;255,255,255:0,0,0&gt;on&lt;128,128,128:0,0,0&gt;k&quot;,
[&quot;Red Dragon&quot;] = &quot;&lt;128,0,0:0,0,0&gt;Re&lt;255,0,0:0,0,0&gt;d Dra&lt;128,0,0:0,0,0&gt;gon:&quot;,
Elaphidist = &quot;&lt;0,179,0:0,0,0&gt;Elap&lt;0,255,0:0,0,0&gt;hi&lt;0,179,0:0,0,0&gt;dist:&quot;,
Druid = &quot;&lt;0,179,0:0,0,0&gt;Druid&quot;,
[&quot;Forest Druid&quot;] = &quot;&lt;0,179,0:0,0,0&gt;Fo&lt;0,255,0:0,0,0&gt;re&lt;0,179,0:0,0,0&gt;st Druid&quot;,
[&quot;Storm Druid&quot;] = &quot;&lt;0,128,128:0,0,0&gt;Storm &lt;0,255,255:0,0,0&gt;Druid&quot;,
Shaman = &quot;&lt;0,255,255:0,0,0&gt;Shaman&quot;,
Elementalist = &quot;&lt;128,0,0:0,0,0&gt;El&lt;255,0,0:0,0,0&gt;em&lt;128,128,128:0,0,0&gt;enta&lt;255,0,0:0,0,0&gt;li&lt;128,0,0:0,0,0&gt;st&quot;,
Spiritualist = &quot;&lt;255,255,255:0,0,0&gt;Spir&lt;0,255,255:0,0,0&gt;itua&lt;255,255,255:0,0,0&gt;list&quot;,
Animalist = &quot;&lt;128,128,0:0,0,0&gt;Ani&lt;255,255,0:0,0,0&gt;mal&lt;128,128,0:0,0,0&gt;ist&quot;,
Sorcerer = &quot;&lt;255,0,255:0,0,0&gt;Sorcerer&quot;,
Wildmage = &quot;&lt;255,0,255:0,0,0&gt;Wild&lt;128,0,128:0,0,0&gt;mage&quot;,
Wizard = &quot;&lt;128,128,128:0,0,0&gt;Wizard&quot;,
Shadowmage = &quot;&lt;128,128,128:0,0,0&gt;Shadow&lt;192,192,192:0,0,0&gt;mage&quot;,
Necromancer = &quot;&lt;128,0,128:0,0,0&gt;Necromancer&quot;,
Diabolis = &quot;&lt;128,0,128:0,0,0&gt;Dia&lt;128,0,0:0,0,0&gt;bolis&quot;,
Necrolyte = &quot;&lt;128,0,128:0,0,0&gt;Ne&lt;128,128,128:0,0,0&gt;cro&lt;128,0,128:0,0,0&gt;lyte&quot;,
Reaper = &quot;&lt;128,128,128:0,0,0&gt;Reap&lt;192,192,192:0,0,0&gt;er&quot;,
Conjurer = &quot;&lt;255,255,0:0,0,0&gt;Conjurer&quot;,
[&quot;Air Magus&quot;] = &quot;&lt;0,255,255:0,0,0&gt;Air Magus&quot;,
[&quot;Water Magus&quot;] = &quot;&lt;0,0,255:0,0,0&gt;Water Magus&quot;,
[&quot;Fire Magus&quot;] = &quot;&lt;128,0,0:0,0,0&gt;Fire Magus&quot;,
[&quot;Earth Magus&quot;] = &quot;&lt;128,128,0:0,0,0&gt;Earth Magus&quot;,
Rogue = &quot;&lt;128,0,0:0,0,0&gt;Rogue&quot;,
Assassin = &quot;&lt;128,0,0:0,0,0&gt;Assassin&quot;,
Thief = &quot;&lt;128,128,128:0,0,0&gt;Thief&quot;,
[&quot;Shadow Archer&quot;] = &quot;&lt;128,128,128:0,0,0&gt;Sh&lt;192,192,192:0,0,0&gt;a&lt;128,128,128:0,0,0&gt;dow &lt;0,0,255:0,0,0&gt;Arc&lt;85,85,255:0,0,0&gt;her&quot;,
Mercenary = &quot;&lt;128,128,0:0,0,0&gt;Mercenary&quot;,
Brigand = &quot;&lt;128,128,0:0,0,0&gt;Br&lt;128,128,128:0,0,0&gt;ig&lt;128,128,0:0,0,0&gt;and&quot;,
[&quot;Bounty Hunter&quot;] = &quot;&lt;128,128,0:0,0,0&gt;Bounty &lt;128,128,128:0,0,0&gt;Hunter&quot;,
Bard = &quot;&lt;128,128,128:0,0,0&gt;B&lt;85,85,255:0,0,0&gt;ar&lt;128,128,128:0,0,0&gt;d&quot;,
Disharmonist = &quot;&lt;128,0,0:0,0,0&gt;D&lt;128,0,128:0,0,0&gt;is&lt;0,179,0:0,0,0&gt;ha&lt;0,128,128:0,0,0&gt;rm&lt;128,128,0:0,0,0&gt;on&lt;85,85,255:0,0,0&gt;ist&quot;,
Scoundrel = &quot;&lt;255,0,0:0,0,0&gt;Scoundrel&quot;,
Minstrel = &quot;&lt;255,255,0:0,0,0&gt;Min&lt;128,128,0:0,0,0&gt;str&lt;255,255,0:0,0,0&gt;el&quot;,
Alchemist = &quot;&lt;0,255,255:0,0,0&gt;Alc&lt;0,128,128:0,0,0&gt;hem&lt;0,255,255:0,0,0&gt;ist&quot;,
[&quot;Battle-Forger&quot;] = &quot;&lt;0,255,255:0,0,0&gt;Bat&lt;0,128,128:0,0,0&gt;tle-For&lt;0,255,255:0,0,0&gt;ger&quot;,
Blacksmith = &quot;&lt;128,128,128:0,0,0&gt;Bla&lt;0,128,128:0,0,0&gt;cksm&lt;128,128,128:0,0,0&gt;ith&quot;,
BeRSeRKeR = &quot;&lt;128,0,0:0,0,0&gt;BeR&lt;255,0,0:0,0,0&gt;SeR&lt;128,0,0:0,0,0&gt;KeR&quot;,
MaUleR = &quot;&lt;128,0,0:0,0,0&gt;Ma&lt;255,0,0:0,0,0&gt;Ule&lt;128,0,0:0,0,0&gt;R&quot;,
RaGeloRd = &quot;&lt;255,0,0:0,0,0&gt;Ra&lt;128,0,0:0,0,0&gt;Ge&lt;255,0,0:0,0,0&gt;lo&lt;128,0,0:0,0,0&gt;Rd&quot;,
Reaver = &quot;&lt;128,128,128:0,0,0&gt;Re&lt;255,255,255:0,0,0&gt;av&lt;128,128,128:0,0,0&gt;er&quot;,
[&quot;Ice Reaver&quot;] = &quot;&lt;0,255,255:0,0,0&gt;I&lt;255,255,255:0,0,0&gt;c&lt;0,255,255:0,0,0&gt;e &lt;128,128,128:0,0,0&gt;Re&lt;192,192,192:0,0,0&gt;av&lt;128,128,128:0,0,0&gt;er&quot;,
[&quot;Flame Reaver&quot;] = &quot;&lt;255,255,255:0,0,0&gt;&lt;128,0,0:0,0,0&gt;F&lt;255,0,0:0,0,0&gt;l&lt;255,255,0:0,0,0&gt;a&lt;255,0,0:0,0,0&gt;m&lt;128,0,0:0,0,0&gt;e &lt;128,128,128:0,0,0&gt;Re&lt;192,192,192:0,0,0&gt;av&lt;128,128,128:0,0,0&gt;er&quot;,
[&quot;Shock Reaver&quot;] = &quot;&lt;85,85,255:0,0,0&gt;Sh&lt;0,0,255:0,0,0&gt;o&lt;255,255,255:0,0,0&gt;ck &lt;128,128,128:0,0,0&gt;Re&lt;192,192,192:0,0,0&gt;av&lt;128,128,128:0,0,0&gt;er&quot;,
[&quot;Earth Reaver&quot;] = &quot;&lt;128,128,128:0,0,0&gt;Ea&lt;128,128,0:0,0,0&gt;rt&lt;128,128,128:0,0,0&gt;h R&lt;128,128,0:0,0,0&gt;ea&lt;128,128,128:0,0,0&gt;ve&lt;128,128,0:0,0,0&gt;r&quot;,
Illusionist = &quot;&lt;255,255,255:0,0,0&gt;Il&lt;0,255,255:0,0,0&gt;lu&lt;0,128,128:0,0,0&gt;si&lt;0,255,255:0,0,0&gt;on&lt;255,255,255:0,0,0&gt;ist&quot;,
Magician = &quot;&lt;0,0,255:0,0,0&gt;M&lt;255,255,0:0,0,0&gt;ag&lt;0,0,255:0,0,0&gt;ic&lt;255,255,0:0,0,0&gt;ia&lt;0,0,255:0,0,0&gt;n&quot;,
[&quot;Dark Dreamer&quot;] = &quot;&lt;128,128,128:0,0,0&gt;Dark &lt;128,0,128:0,0,0&gt;Dreamer&quot;,
Blighter = &quot;&lt;128,128,128:0,0,0&gt;Bl&lt;128,128,0:0,0,0&gt;i&lt;0,179,0:0,0,0&gt;gh&lt;128,128,0:0,0,0&gt;t&lt;128,128,128:0,0,0&gt;er&lt;255,255,255:0,0,0&gt;&quot;,
[&quot;Storm Bringer&quot;] = &quot;&lt;255,255,0:0,0,0&gt;St&lt;128,128,0:0,0,0&gt;or&lt;255,255,0:0,0,0&gt;m &lt;128,128,128:0,0,0&gt;Bringer&quot;,
Scourge = &quot;&lt;0,255,0:0,0,0&gt;Sc&lt;0,179,0:0,0,0&gt;ou&lt;255,255,0:0,0,0&gt;rg&lt;0,255,0:0,0,0&gt;e&quot;,
Ruiner = &quot;&lt;128,128,128:0,0,0&gt;Ru&lt;192,192,192:0,0,0&gt;in&lt;128,128,128:0,0,0&gt;er&quot;,
Dreadlord = &quot;&lt;128,128,128:0,0,0&gt;Dread&lt;128,0,0:0,0,0&gt;lord&quot;,
Deathlord = &quot;&lt;128,128,128:0,0,0&gt;Death&lt;128,0,0:0,0,0&gt;lord&quot;,
Shadowlord = &quot;&lt;128,128,128:0,0,0&gt;Shadow&lt;128,0,0:0,0,0&gt;lord&quot;,
Ethermancer = &quot;&lt;192,192,192:0,0,0&gt;Ethermancer&quot;,
[&quot;Tempest Magus&quot;] = &quot;&lt;0,255,255:0,0,0&gt;Tem&lt;0,128,128:0,0,0&gt;pe&lt;0,255,255:0,0,0&gt;st Ma&lt;0,128,128:0,0,0&gt;gu&lt;0,255,255:0,0,0&gt;s&quot;,
[&quot;Frost Magus&quot;] = &quot;&lt;255,255,255:0,0,0&gt;Fro&lt;0,128,128:0,0,0&gt;st &lt;0,255,255:0,0,0&gt;Magus&quot;,
[&quot;Star Magus&quot;] = &quot;&lt;255,255,0:0,0,0&gt;St&lt;128,128,0:0,0,0&gt;a&lt;255,255,0:0,0,0&gt;r &lt;128,128,128:0,0,0&gt;Ma&lt;192,192,192:0,0,0&gt;gu&lt;128,128,128:0,0,0&gt;s&quot;,
Avenger = &quot;&lt;255,255,255:0,0,0&gt;Avenger&quot;,
Lightbringer = &quot;&lt;255,255,0:0,0,0&gt;Light&lt;255,255,255:0,0,0&gt;bringer&quot;,
Inquisitor = &quot;&lt;255,255,255:0,0,0&gt;Inq&lt;192,192,192:0,0,0&gt;uisi&lt;255,255,255:0,0,0&gt;tor&quot;,
Theurgist = &quot;&lt;0,128,128:0,0,0&gt;Th&lt;0,255,255:0,0,0&gt;eur&lt;255,255,255:0,0,0&gt;gist&quot;,
Medium = &quot;&lt;192,192,192:0,0,0&gt;Medium&quot;,
Templar = &quot;&lt;255,255,0:0,0,0&gt;T&lt;255,0,0:0,0,0&gt;e&lt;128,0,0:0,0,0&gt;mpl&lt;255,0,0:0,0,0&gt;a&lt;255,255,0:0,0,0&gt;r&quot;,
Thaumaturge = &quot;&lt;255,255,255:0,0,0&gt; T&lt;0,128,128:0,0,0&gt;h&lt;0,255,255:0,0,0&gt;a&lt;255,255,255:0,0,0&gt;u&lt;0,255,255:0,0,0&gt;m&lt;0,128,128:0,0,0&gt;a&lt;0,255,255:0,0,0&gt;t&lt;255,255,255:0,0,0&gt;u&lt;0,255,255:0,0,0&gt;r&lt;0,128,128:0,0,0&gt;g&lt;0,255,255:0,0,0&gt;e&quot;,
Summoner = &quot;&lt;255,0,0:0,0,0&gt;Summoner&quot;,
Controller = &quot;&lt;0,128,128:0,0,0&gt;Con&lt;0,255,255:0,0,0&gt;trol&lt;255,255,255:0,0,0&gt;ler&quot;,
Mentalist = &quot;&lt;128,0,0:0,0,0&gt;M&lt;255,0,0:0,0,0&gt;e&lt;255,255,0:0,0,0&gt;n&lt;255,255,255:0,0,0&gt;tal&lt;255,255,0:0,0,0&gt;i&lt;255,0,0:0,0,0&gt;s&lt;128,0,0:0,0,0&gt;t&quot;,
Naturalist = &quot;&lt;0,179,0:0,0,0&gt;Nat&lt;0,255,0:0,0,0&gt;ural&lt;128,128,0:0,0,0&gt;ist&quot;
}</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>WhoList</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function WhoClass(xname)

	if myWhoList[xname] ~= nil then
		return ( myWhoList[xname].Class )
	end

	return(nil)	
end</script>
                    <eventHandlerList/>
                </ScriptGroup>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>csvUtils</name>
                <packageName></packageName>
                <script>-- Used to escape &quot;'s by toCSV
function escapeCSV (s)
  if string.find(s, '[,&quot;]') then
    s = '&quot;' .. string.gsub(s, '&quot;', '&quot;&quot;') .. '&quot;'
  end
  return s
end

-- Convert from CSV string to table (converts a single line of a CSV file)
function fromCSV (s)
  s = s .. ','        -- ending comma
  local t = {}        -- table to collect fields
  local fieldstart = 1
  repeat
    -- next field is quoted? (start with `&quot;'?)
    if string.find(s, '^&quot;', fieldstart) then
      local a, c
      local i  = fieldstart
      repeat
        -- find closing quote
        a, i, c = string.find(s, '&quot;(&quot;?)', i+1)
      until c ~= '&quot;'    -- quote not followed by quote?
      if not i then error('unmatched &quot;') end
      local f = string.sub(s, fieldstart+1, i-1)
      table.insert(t, (string.gsub(f, '&quot;&quot;', '&quot;')))
      fieldstart = string.find(s, ',', i) + 1
    else                -- unquoted; find next comma
      local nexti = string.find(s, ',', fieldstart)
      table.insert(t, string.sub(s, fieldstart, nexti-1))
      fieldstart = nexti + 1
    end
  until fieldstart &gt; string.len(s)
  return t
end

-- Convert from table to CSV string
function toCSV (tt)
  local s = &quot;&quot;
  for _,p in pairs(tt) do
    s = s .. &quot;,&quot; .. escapeCSV(p)
  end
  return string.sub(s, 2)      -- remove first comma
end</script>
                <eventHandlerList/>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Math</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="no" isFolder="no">
                    <name>Round</name>
                    <packageName></packageName>
                    <script>--[[
round(numberToRound, numberOfSignificantDigits). 
So round(17246.18374, 3) would return 17200, 
with 6 significant digits it would return 17246.2, etc. 

]]
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function round(number, sigDigits)
  local decimalPlace = string.find(number, &quot;%.&quot;)
  if not decimalPlace or (sigDigits &lt; decimalPlace) then
    numberTable = {}
    count = 1
    for digit in string.gmatch(number, &quot;%d&quot;) do
      table.insert(numberTable, digit)
    end
    local endNumber = &quot;&quot;
    for i,digit in ipairs(numberTable) do
      if i &lt; sigDigits then
        endNumber = endNumber .. digit
      end
      if i == sigDigits then
        if tonumber(numberTable[i + 1]) &gt;= 5 then
          endNumber = endNumber .. digit + 1
        else
          endNumber = endNumber .. digit
        end
      end
      if i &gt; sigDigits and (not decimalPlace or (i &lt; decimalPlace)) then
        endNumber = endNumber .. &quot;0&quot;
      end
    end
    return tonumber(endNumber)      
  else
    local decimalDigits = sigDigits - decimalPlace + 1
    return tonumber(string.format(&quot;%&quot; .. decimalPlace - 1 .. &quot;.&quot; .. decimalDigits .. &quot;f&quot;, number))
  end
end</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>File Input Output</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

-- File IO Script
-- By: Zachary Hiland
-- 1/1/2014

fileIO = fileIO or {}
fileIO.__index = fileIO

function fileIO.fileDialog(title, target)
        if target == &quot;folder&quot; then target = false else target = true end
        local path = invokeFileDialog(target, title)
        return path
end

function fileIO.exists(filename)
        if type(filename) == &quot;table&quot; and filename.type == &quot;fileIO_file&quot; then filename = filename.name end
        local info = lfs.attributes(filename)
        if info.mode == &quot;file&quot; then
                return true
        else
                return false
        end
end

function fileIO.open(filename,mode)
        local errors
        mode = mode or &quot;read&quot;
        assert(table.contains({&quot;read&quot;,&quot;write&quot;,&quot;append&quot;,&quot;modify&quot;},mode),&quot;Invalid mode: must be 'read', 'write', 'append', or 'modify'.&quot;)
        if mode ~= &quot;write&quot; then
                local info = lfs.attributes(filename)
                if not info then
                        errors = &quot;Invalid filename: no such file.&quot;
                        return nil, errors
                end
                if info.mode ~= &quot;file&quot; then
                        errors = &quot;Invalid filename: path points to a directory.&quot;
                        return nil, errors
                end
        end
        local file = {}
        file.name = filename
        file.mode = mode
        file.type = &quot;fileIO_file&quot;
        file.contents = {}
        if file.mode == &quot;read&quot; or file.mode == &quot;modify&quot; then
                local tmp = io.open(file.name,&quot;r&quot;)
                local linenum = 1
                for line in tmp:lines() do
                        file.contents[linenum] = line
                        linenum = linenum + 1
                end
                tmp:close()
        end
        setmetatable(file,dslpnp.fileIO)
        return file, nil
end

function fileIO.read(file, line)
        assert(file.type == &quot;fileIO_file&quot;, &quot;Invalid file: must be file returned by fileIO.open.&quot;)
        assert(line == &quot;all&quot; or tonumber(line), &quot;Invalid argument: must be 'all' or the line number to be read.&quot;)
        local text = &quot;&quot;
        if line == &quot;all&quot; then
                for k, v in ipairs(file.contents) do
                        text = text .. v .. &quot;\n&quot;
                end
        else
                text = file.contents[line]
        end
        return text
end

function fileIO.lines(file)
        local line = 0
        return function ()
                line = line + 1
                if file.contents[line] then
                        return line, file.contents[line]
                else
                        return nil
                end
        end
end

function fileIO.write(file, text, line)
        assert(file.type == &quot;fileIO_file&quot;, &quot;Invalid file: must be file returned by fileIO.open.&quot;)
        assert(line == nil or tonumber(line), &quot;Invalid argument: must be the line number to write to or nil (to write at the end).&quot;)
        text = tostring(text)
        if line then
                file.contents[line] = text
        else
                table.insert(file.contents,text)
        end
        return file
end

function fileIO.delete(file, line)
        assert(file.type == &quot;fileIO_file&quot;, &quot;Invalid file: must be file returned by fileIO.open.&quot;)
        assert(line == &quot;all&quot; or tonumber(line), &quot;Invalid argument: must be 'all' or the line number to be deleted.&quot;)
        if line == &quot;all&quot; then
                file.contents = {}
        else
                table.remove(file.contents,line)
        end
        return file
end

function fileIO.close(file)
        assert(file.type == &quot;fileIO_file&quot;, &quot;Invalid file: must be file returned by fileIO.open.&quot;)
        local tmp
        if file.mode == &quot;write&quot; then
                tmp = io.open(file.name,&quot;w&quot;)
        elseif file.mode == &quot;append&quot; then
                tmp = io.open(file.name,&quot;a&quot;)
        elseif file.mode == &quot;modify&quot; then
                tmp = io.open(file.name,&quot;w+&quot;)
        end
        if tmp then
                for k,v in ipairs(file.contents) do
                        tmp:write(v .. &quot;\n&quot;)
                end
                tmp:flush()
                tmp:close()
                tmp = nil
        end
        return true
end</script>
                <eventHandlerList/>
            </ScriptGroup>
            <ScriptGroup isActive="no" isFolder="yes">
                <name>StatRoller</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
myRolls= myRolls or {}

scoreLookup = {
lame = 1, 
poor = 2, 
[&quot;below average&quot;] = 3, 
average = 4, 
[&quot;above average&quot;] = 5, 
good = 6, 
[&quot;very good&quot;] = 7, 
excellent = 8
}

RolledStr=&quot;&quot;
RolledPow=&quot;&quot;
RolledDex=&quot;&quot;
RolledInt=&quot;&quot;
RolledAgi=&quot;&quot;
RolledWis=&quot;&quot;
RolledCon=&quot;&quot;
RolledCha=&quot;&quot;
RolledLuc=&quot;&quot;
RolledUnu=&quot;&quot;</script>
                <eventHandlerList/>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>DurisHelp</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

-- Skills

durismudSkills = {
&quot;1h bludgeon&quot;,
&quot;1h flaying&quot;,
&quot;1h piercing&quot;,
&quot;1h slashing&quot;,
&quot;2h bludgeon&quot;,
&quot;2h flaying&quot;,
&quot;2h slashing&quot;,
&quot;Age Corpse&quot;,
&quot;Appraise&quot;,
&quot;Armlock&quot;,
&quot;Aura of Battle Lust&quot;,
&quot;Aura of Endurance&quot;,
&quot;Aura of Improved Healing&quot;,
&quot;Aura of Precision&quot;,
&quot;Aura of Protection&quot;,
&quot;Aura of Vigor&quot;,
&quot;Awareness&quot;,
&quot;Backstab&quot;,
&quot;Bandage&quot;,
&quot;Bash&quot;,
&quot;Battle Orders&quot;,
&quot;Battle Senses&quot;,
&quot;Bearhug&quot;,
&quot;Berserk&quot;,
&quot;Blade Barrage&quot;,
&quot;Blindfighting&quot;,
&quot;Call of the Grave&quot;,
&quot;Capture&quot;,
&quot;Carve&quot;,
&quot;Chant&quot;,
&quot;Circle&quot;,
&quot;Cleave&quot;,
&quot;Clerical Spell Knowledge&quot;,
&quot;Climb&quot;,
&quot;Combination Attack&quot;,
&quot;Command Aura&quot;,
&quot;Craft&quot;,
&quot;Decrepify&quot;,
&quot;Detect Evil&quot;,
&quot;Detect Good&quot;,
&quot;Disarm&quot;,
&quot;Disguise&quot;,
&quot;Dodge&quot;,
&quot;Double Attack&quot;,
&quot;Double Headbutt&quot;,
&quot;Dragonpunch&quot;,
&quot;Dread Wrath&quot;,
&quot;Dual Wield&quot;,
&quot;Feign Death&quot;,
&quot;First Aid&quot;,
&quot;Fishing&quot;,
&quot;Flank&quot;,
&quot;Gaze&quot;,
&quot;Grappler Combat&quot;,
&quot;Groundslam&quot;,
&quot;Guard&quot;,
&quot;Headbutt&quot;,
&quot;Headlock&quot;,
&quot;Hide&quot;,
&quot;Hitall&quot;,
&quot;Holy Blade&quot;,
&quot;Holy Smite&quot;,
&quot;Infuriate&quot;,
&quot;intercept&quot;,
&quot;Kick&quot;,
&quot;Lay Hands&quot;,
&quot;Leglock&quot;,
&quot;Listen&quot;,
&quot;Lore&quot;,
&quot;Martial Arts&quot;,
&quot;Maul&quot;,
&quot;Meditate&quot;,
&quot;Mine&quot;,
&quot;Mix&quot;,
&quot;Mount&quot;,
&quot;Mounted Combat&quot;,
&quot;Outdoor Sneak&quot;,
&quot;Parry&quot;,
&quot;Pick Lock&quot;,
&quot;Quadruple Attack&quot;,
&quot;Quick Chant&quot;,
&quot;Rage&quot;,
&quot;Rampage&quot;,
&quot;Ranged Weapons&quot;,
&quot;Reach Weapons&quot;,
&quot;Remix&quot;,
&quot;Rescue&quot;,
&quot;Retreat&quot;,
&quot;Riff&quot;,
&quot;Riposte&quot;,
&quot;Roundkick&quot;,
&quot;Rush&quot;,
&quot;Safe Fall&quot;,
&quot;Scribe&quot;,
&quot;Shaman Spell Knowledge&quot;,
&quot;Shield Block&quot;,
&quot;Skewer&quot;,
&quot;Sneak&quot;,
&quot;Sorcerous Spell Knowledge&quot;,
&quot;Springleap&quot;,
&quot;Subterfuge&quot;,
&quot;Summon Mount&quot;,
&quot;Surprise&quot;,
&quot;Swim&quot;,
&quot;Switch Opponents&quot;,
&quot;Tackle&quot;,
&quot;Tainted Blade&quot;,
&quot;Throat Crush&quot;,
&quot;Throwpotion&quot;,
&quot;Track&quot;,
&quot;Triple Attack&quot;,
&quot;Unarmed Damage&quot;,
&quot;Vampiric Touch&quot;,
&quot;Vicious Attack&quot;,
&quot;Vicious Strike&quot;,
&quot;War Cry&quot;,
}
</script>
                <eventHandlerList/>
            </ScriptGroup>
            <Script isActive="yes" isFolder="no">
                <name>MessageOut</name>
                <packageName></packageName>
                <script>function msgOut(myAlign, myText, myCap, mytextColor)
--cecho text to the screen with cap and colors specified
echo(&quot;\n&quot;)
cecho(calign(myText, {width = &quot;80&quot;, alignment = myAlign, cap = myCap, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;&quot;..mytextColor..&quot;&gt;&quot;}))
end --function</script>
                <eventHandlerList/>
            </Script>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>ZoneData</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>ZoneLinks</name>
                    <packageName></packageName>
                    <script>ZoneLinks = {[&quot;Ako Village&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/akovillage.jpg&quot;,
[&quot;Arbre's Forest&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/arbresforest.jpg&quot;,
[&quot;Arcium, the Plagued Kingdom&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/arcium.jpg&quot;,
[&quot;Bandit Camp&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/banditcamp.jpg&quot;,
[&quot;The Bandit Canyons&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/banditcanyon.jpg&quot;,
[&quot;BogenTok&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/Bogentok.jpg&quot;,
[&quot;Mini Zones&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/brokenbladetavern.jpg&quot;,
[&quot;Centaur Villages&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/centaurvillages.jpg&quot;,
[&quot;Charing&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/charing.jpg&quot;,
[&quot;The Cimmerian Nomad Encampment&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/cimmeriannomads.jpg&quot;,
[&quot;Darkfall Forest&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/darkfall.jpg&quot;,
[&quot;Quintaragon Castle&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/darkmore.jpg&quot;,
[&quot;Desolate&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/desolate.jpg&quot;,
[&quot;Du'Maathe Castle&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/dumaathe.jpg&quot;,
[&quot;The Elemental Groves&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/elementalgroves.jpg&quot;,
[&quot;Faerie Realm&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/faerierealms.jpg&quot;,
[&quot;Fishermans Wharf&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/fishermanswarf.jpg&quot;,
[&quot;The Fog Enshrouded Wood&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/fogenshroudedwoods.jpg&quot;,
[&quot;The Forgotten Forest&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/forgottenforest.jpg&quot;,
[&quot;Ashrumite Village&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/GnomeHometown.jpg&quot;,
[&quot;Golden Hall of the Crown&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/goldenhalls.jpg&quot;,
[&quot;Harrow -The Gnome Village&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/harrow.jpg&quot;,
[&quot;The Haunted Woods&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/hauntedwoods.jpg&quot;,
[&quot;The High Moor Forest&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/highmoor.jpg&quot;,
[&quot;Kimordril&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/kimordril.jpg&quot;,
[&quot;Defense of Longhollow&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/longhollow.jpg&quot;,
[&quot;Lylr-Meop&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/lylrmeop.jpg&quot;,
[&quot;Lylr-Meop&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/meopham.jpg&quot;,
[&quot;Southern Coastal Highway&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/mir.jpg&quot;,
[&quot;The Motte and Bailey of Duke Delwyn&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/MotteAndBailey.jpg&quot;,
[&quot;Myrabolus&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/myrabolus.jpg&quot;,
[&quot;Neverwind Valley&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/neverwindvalley.jpg&quot;,
[&quot;Neverwinter Woods&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/neverwinter.jpg&quot;,
[&quot;Newhaven&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/newhaven.jpg&quot;,
[&quot;The Village of New Hope&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/newhope.jpg&quot;,
[&quot;Nizari&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/nizari.jpg&quot;,
[&quot;The Outcasts Tower&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/outcasttower.jpg&quot;,
[&quot;Pits of Cerberus&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/pitofcerebus.jpg&quot;,
[&quot;Rift Valley Jungle&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/rift.jpg&quot;,
[&quot;The Savannah of Broken Trusts&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/savannah.jpg&quot;,
[&quot;Shadowclave&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/shadowclave.jpg&quot;,
[&quot;The Mountain Village of Tentro&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/tentro.jpg&quot;,
[&quot;Tharnadia - City of Humans&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/Tharnadia.jpg&quot;,
[&quot;City of Torrhan &quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/torhan.jpg&quot;,
[&quot;The Temple of the Sun&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/tos.jpg&quot;,
[&quot;The Ruins of Turolopolis&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/turolopolis.jpg&quot;,
[&quot;Twin Towers Forest&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/twintowers.jpg&quot;,
[&quot;A Dark and Twisted Wood&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/twistedwoods.jpg&quot;,
[&quot;Ugta&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/ugta.jpg&quot;,
[&quot;Valley of Crushk&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/valleyofcrushk.jpg&quot;,
[&quot;Vella's Bordello&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/vellasbordello.jpg&quot;,
[&quot;Wellvolen&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/wemics.jpg&quot;,
[&quot;Woodseer&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/woodseer.jpg&quot;,
[&quot;Pine Hollow&quot;] = &quot;https://sites.google.com/site/durisdarkward/home/files/Drevarr_Pinehollow.jpg&quot;}</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>animatedtimers-30</name>
                <packageName>animatedtimers-30</packageName>
                <script></script>
                <eventHandlerList/>
                <ScriptGroup isActive="yes" isFolder="yes">
                    <name>Animated Timers</name>
                    <packageName></packageName>
                    <script>--[[Based somewhat on code I found on the aetolia forums. The url I found the original code from was
http://dev.aetolia.com/node/14212?page=10#comment-486181 but I have modified it to work with geyser gauges]]
function demonnic:echo(msg)
 cecho(string.format(&quot;\n&lt;blue&gt;(&lt;green&gt;Demonnic&lt;blue&gt;):&lt;white&gt; %s&quot;, msg))
end</script>
                    <eventHandlerList/>
                    <Script isActive="yes" isFolder="no">
                        <name>code</name>
                        <packageName></packageName>
                        <script>demonnic = demonnic or {}
demonnic.anitimer = demonnic.anitimer or {}
demonnic.anitimer.timers = demonnic.anitimer.timers or {}
demonnic.anitimer.activeTimers = demonnic.anitimer.activeTimers or {}

function demonnic.anitimer:new(name, cons, time, options)
  if options and type(options) ~= &quot;table&quot; then
    error(&quot;demonnic.anitimer:new() -- if you provide a fourth parameter, it must be a table. Please see http://github.com/demonnic/animatedtimers for detailed usage information&quot;)
  end
  if not options then
    options = {}
  end
  if options.showTime == nil then options.showTime = true end 
  options.timerCaption = options.timerCaption or &quot;&quot;

  if not demonnic.anitimer.timers[name] then
    demonnic.anitimer.timers[name] = {}
    demonnic.anitimer.timers[name].gauge = Geyser.Gauge:new(cons, options.container)
    demonnic.anitimer.timers[name].watch = createStopWatch()
  else
    for k,v in pairs(cons) do
      demonnic.anitimer.timers[name].gauge[k] = v
    end
    if options.container then
      options.container:add(demonnic.anitimer.timers[name].gauge)
    else
      Geyser:add(demonnic.anitimer.timers[name].gauge)
    end
  end
    demonnic.anitimer.timers[name].max = time
    demonnic.anitimer.timers[name].current = time
    demonnic.anitimer.timers[name].showTime = options.showTime
    demonnic.anitimer.timers[name].timerCaption = options.timerCaption
    if options.cssFront then
      if not options.cssBack then
        options.cssBack = options.cssFront .. &quot;background-color: black;&quot;
      end
      demonnic.anitimer.timers[name].gauge:setStyleSheet(options.cssFront, options.cssBack)
    end
    if not table.contains(demonnic.anitimer.activeTimers, name) then table.insert(demonnic.anitimer.activeTimers, name) end
    resetStopWatch(demonnic.anitimer.timers[name].watch)
    startStopWatch(demonnic.anitimer.timers[name].watch)
    demonnic.anitimer:update(name)
end

function demonnic.anitimer:getTime(name)
  if not demonnic.anitimer.timers[name] then return 0 end
  local max = demonnic.anitimer.timers[name].max
  local current = getStopWatchTime(demonnic.anitimer.timers[name].watch)
  local newValue = max - current
  return newValue
end

function demonnic.anitimer:showTimers()
  demonnic:echo(&quot;&lt;yellow&gt;List of animated timers which have been created&quot;)
  for timer,_ in pairs(demonnic.anitimer.timers) do
    demonnic:echo(string.format(&quot;   %s&quot;, timer))
  end
  local actives = &quot;&quot;
  for _,timer in ipairs(demonnic.anitimer.activeTimers) do
    if actives == &quot;&quot; then
      actives = timer
    else
      actives = string.format(&quot;%s, %s&quot;, actives, timer)
    end
  end
  demonnic:echo(&quot;&lt;yellow&gt;Active timers: &lt;red&gt;&quot; .. actives)
end

function demonnic.anitimer:update(name)
  if not demonnic.anitimer.timers[name] then return nil end
  demonnic.anitimer.timers[name].current = demonnic.anitimer:getTime(name)
  local time = demonnic.anitimer.timers[name].current
  demonnic.anitimer.timers[name].text = (demonnic.anitimer.timers[name].showTime and string.format(&quot;%.1f %s&quot;, time, demonnic.anitimer.timers[name].timerCaption or &quot;&quot;)) or (demonnic.anitimer.timers[name].timerCaption or &quot;&quot;)
  demonnic.anitimer.timers[name].gauge:setValue(demonnic.anitimer.timers[name].current, demonnic.anitimer.timers[name].max, demonnic.anitimer.timers[name].text)
end

function demonnic.anitimer:stop(name)
  if not demonnic.anitimer.timers[name] then return nil end
  stopStopWatch(demonnic.anitimer.timers[name].watch)
  demonnic.anitimer.timers[name].gauge:hide()
  for i,v in pairs(demonnic.anitimer.activeTimers) do
    if demonnic.anitimer.timers[v] == demonnic.anitimer.timers[name] then
      table.remove(demonnic.anitimer.activeTimers, i)
      return
    end
  end
end

function demonnic.anitimer:stopAll()
  for _,name in pairs(demonnic.anitimer.activeTimers) do
    demonnic.anitimer:stop(name)
  end
end

function demonnic.anitimer:pause(name)
  if not demonnic.anitimer.timers[name] then return nil end
  stopStopWatch(demonnic.anitimer.timers[name].watch)
  for i,v in pairs(demonnic.anitimer.activeTimers) do
    if v == name then
      table.remove(demonnic.anitimer.activeTimers, i)
      return
    end
  end
end

function demonnic.anitimer:pauseAll()
  for name,_ in pairs(demonnic.anitimer.timers) do
    demonnic.anitimer:pause(name)
  end
end

function demonnic.anitimer:destroy(name)
  if not demonnic.anitimer.timers[name] then return nil end
  demonnic.anitimer:stop(name)
  demonnic.anitimer.timers[name] = nil
  return true
end

function demonnic.anitimer:destroyAll()
  for name,_ in pairs(demonnic.anitimer.timers) do
    demonnic.anitimer:destroy(name)
  end
end

function demonnic.anitimer:start(name)
  if not demonnic.anitimer.timers[name] then return nil end
  local current = demonnic.anitimer.timers[name].current
  if current == 0 then return nil end
  demonnic.anitimer.timers[name].max = current
  resetStopWatch(demonnic.anitimer.timers[name].watch)
  startStopWatch(demonnic.anitimer.timers[name].watch)
  if not table.contains(demonnic.anitimer.activeTimers, name) then table.insert(demonnic.anitimer.activeTimers, name) end
  demonnic.anitimer.timers[name].gauge:show()
  demonnic.anitimer:update(name)
end

function demonnic.anitimer:startAll()
  for name,_ in pairs(demonnic.anitimer.timers) do
    if not table.contains(demonnic.anitimer.activeTimers, name) then
      demonnic.anitimer:start(name)
    end
  end
end

function demonnic.anitimer:animate()
  for i,v in pairs(demonnic.anitimer.activeTimers) do
    name = v
    demonnic.anitimer:update(name)
    if demonnic.anitimer:getTime(name) &lt;= 0 then
      demonnic.anitimer.timers[name].gauge:hide()
      table.remove(demonnic.anitimer.activeTimers, i)
      stopStopWatch(demonnic.anitimer.timers[name].watch)
      demonnic.anitimer.timers[name].max = 0
      demonnic.anitimer.timers[name].current = 0
    end
  end
end</script>
                        <eventHandlerList/>
                    </Script>
                </ScriptGroup>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Colors</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
            </ScriptGroup>
            <Script isActive="yes" isFolder="no">
                <name>ANSI</name>
                <packageName></packageName>
                <script>--ANSI COLOR to HTML
ANSI = {
l = &quot;#000000&quot;,
r = &quot;#800000&quot;, 
g = &quot;#008000&quot;,
y = &quot;#808000&quot;,
b = &quot;#000080&quot;,
m = &quot;#800080&quot;,
c = &quot;#008080&quot;,
w = &quot;#C0C0C0&quot;,
L = &quot;#808080&quot;,
R = &quot;#FF0000&quot;,
G = &quot;#00FF00&quot;,
Y = &quot;#FFFF00&quot;,
B = &quot;#0000FF&quot;,
M = &quot;#FF00FF&quot;,
C = &quot;#00FFFF&quot;,
W = &quot;#EBEBEB&quot;
}</script>
                <eventHandlerList/>
            </Script>
        </ScriptGroup>
    </ScriptPackage>
    <KeyPackage>
        <KeyGroup isActive="yes" isFolder="yes">
            <name>DarkwardMudlet</name>
            <packageName>DarkwardMudlet</packageName>
            <script></script>
            <command></command>
            <keyCode>3080268</keyCode>
            <keyModifier>3735601</keyModifier>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>Duris Key Set</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
                <KeyGroup isActive="yes" isFolder="yes">
                    <name>FunctionKeys</name>
                    <packageName></packageName>
                    <script></script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                    <Key isActive="yes" isFolder="no">
                        <name>F8</name>
                        <packageName></packageName>
                        <script>send(&quot;kill &quot;..Target)</script>
                        <command></command>
                        <keyCode>16777271</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>F9</name>
                        <packageName></packageName>
                        <script>if myClass == &quot;Necromancer&quot; then
	expandAlias(&quot;ct &quot;..Target, false)
end

if myClass == &quot;Bard&quot; then
	send(&quot;cast 'mirror image'&quot;, true)
end</script>
                        <command></command>
                        <keyCode>16777272</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>F10</name>
                        <packageName></packageName>
                        <script>if myClass == &quot;Necromancer&quot; then
	expandAlias(&quot;li &quot;..Target, false)
end
</script>
                        <command></command>
                        <keyCode>16777273</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>F11</name>
                        <packageName></packageName>
                        <script>if myClass == &quot;Necromancer&quot; then
	expandAlias(&quot;ed &quot;..Target, false)
end</script>
                        <command></command>
                        <keyCode>16777274</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>F12</name>
                        <packageName></packageName>
                        <script>if myClass == &quot;Necromancer&quot; then
	expandAlias(&quot;f &quot;..Target, false)
end

if myClass == &quot;Paladin&quot; then
	send(&quot;rescue &quot;..myTank, true)
end

if myClass == &quot;Bard&quot; then
	send(&quot;backstab &quot;..Target, true)
end

if myClass == &quot;Rogue&quot; then
	send(&quot;backstab &quot;..Target, true)
end</script>
                        <command></command>
                        <keyCode>16777275</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>F1</name>
                        <packageName></packageName>
                        <script>if myClass == &quot;Necromancer&quot; then
	expandAlias(&quot;hu &quot;..Pet_1, false)
	expandAlias(&quot;pu &quot;..Pet_1, false)
end</script>
                        <command></command>
                        <keyCode>16777264</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>F2</name>
                        <packageName></packageName>
                        <script>if myClass == &quot;Necromancer&quot; then
	expandAlias(&quot;hu &quot;..Pet_2, false)
	expandAlias(&quot;pu &quot;..Pet_2, false)
end</script>
                        <command></command>
                        <keyCode>16777265</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>F3</name>
                        <packageName></packageName>
                        <script>if myClass == &quot;Necromancer&quot; then
	expandAlias(&quot;hu &quot;..Pet_3, false)
	expandAlias(&quot;pu &quot;..Pet_3, false)
end</script>
                        <command></command>
                        <keyCode>16777266</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>F4</name>
                        <packageName></packageName>
                        <script>if myClass == &quot;Necromancer&quot; then
	expandAlias(&quot;hu &quot;..Pet_4, false)
	expandAlias(&quot;pu &quot;..Pet_4, false)
end</script>
                        <command></command>
                        <keyCode>16777267</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                </KeyGroup>
                <KeyGroup isActive="yes" isFolder="yes">
                    <name>WalkKeys</name>
                    <packageName></packageName>
                    <script></script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                    <Key isActive="yes" isFolder="no">
                        <name>North</name>
                        <packageName></packageName>
                        <script>last_Dir = &quot;north&quot;</script>
                        <command>n</command>
                        <keyCode>56</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>South</name>
                        <packageName></packageName>
                        <script>last_Dir = &quot;south&quot;</script>
                        <command>s</command>
                        <keyCode>50</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>East</name>
                        <packageName></packageName>
                        <script>last_Dir = &quot;east&quot;</script>
                        <command>e</command>
                        <keyCode>54</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>West</name>
                        <packageName></packageName>
                        <script>last_Dir = &quot;west&quot;</script>
                        <command>w</command>
                        <keyCode>52</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Up</name>
                        <packageName></packageName>
                        <script>last_Dir = &quot;up&quot;</script>
                        <command>u</command>
                        <keyCode>57</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Down</name>
                        <packageName></packageName>
                        <script>last_Dir = &quot;down&quot;</script>
                        <command>d</command>
                        <keyCode>51</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Look</name>
                        <packageName></packageName>
                        <script></script>
                        <command>l</command>
                        <keyCode>53</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Flee</name>
                        <packageName></packageName>
                        <script></script>
                        <command>Flee</command>
                        <keyCode>55</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Scan</name>
                        <packageName></packageName>
                        <script></script>
                        <command>scan</command>
                        <keyCode>48</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Open North</name>
                        <packageName></packageName>
                        <script></script>
                        <command>open n</command>
                        <keyCode>56</keyCode>
                        <keyModifier>671088640</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Open South</name>
                        <packageName></packageName>
                        <script></script>
                        <command>open s</command>
                        <keyCode>50</keyCode>
                        <keyModifier>671088640</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Open East</name>
                        <packageName></packageName>
                        <script></script>
                        <command>open e</command>
                        <keyCode>54</keyCode>
                        <keyModifier>671088640</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Open West</name>
                        <packageName></packageName>
                        <script></script>
                        <command>open w</command>
                        <keyCode>52</keyCode>
                        <keyModifier>671088640</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Open Up</name>
                        <packageName></packageName>
                        <script></script>
                        <command>open u</command>
                        <keyCode>57</keyCode>
                        <keyModifier>671088640</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Open Down</name>
                        <packageName></packageName>
                        <script></script>
                        <command>open d</command>
                        <keyCode>51</keyCode>
                        <keyModifier>671088640</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Scan1</name>
                        <packageName></packageName>
                        <script></script>
                        <command>scan</command>
                        <keyCode>49</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>CloseNorth</name>
                        <packageName></packageName>
                        <script></script>
                        <command>close north</command>
                        <keyCode>56</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>CloseSouth</name>
                        <packageName></packageName>
                        <script></script>
                        <command>Close South</command>
                        <keyCode>50</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>CloseEast</name>
                        <packageName></packageName>
                        <script></script>
                        <command>Close East</command>
                        <keyCode>54</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>CloseWest</name>
                        <packageName></packageName>
                        <script></script>
                        <command>Close West</command>
                        <keyCode>52</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>CloseUp</name>
                        <packageName></packageName>
                        <script></script>
                        <command>Close Up</command>
                        <keyCode>57</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>CloseDown</name>
                        <packageName></packageName>
                        <script></script>
                        <command>Close Down</command>
                        <keyCode>51</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Close Direction</name>
                        <packageName></packageName>
                        <script>-- Close reverse of last direction
send(&quot;close &quot; ..flee_Dir[last_Dir])</script>
                        <command></command>
                        <keyCode>45</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Open Direction</name>
                        <packageName></packageName>
                        <script>send(&quot;open &quot; ..last_Dir)</script>
                        <command></command>
                        <keyCode>43</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Target_Select</name>
                        <packageName></packageName>
                        <script>myTarget = Evil_Races[target_select]
m1 = &quot;Targetting&quot;

echo(&quot;\n&quot;)
cecho(calign(&quot;Targetting&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[&quot;..myTarget..&quot;]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n\n&quot;)
cecho(calign(&quot;Targetting&quot;, {width = &quot;80&quot;, alignment = &quot;center&quot;, cap = &quot;[&quot;..myTarget..&quot;]&quot;, mirror = false, spacer = &quot;=&quot;, inside = false, capColor = &quot;&lt;khaki&gt;&quot;, spacerColor = &quot;&lt;DodgerBlue&gt;&quot;, textColor = &quot;&lt;red&gt;&quot;}))
echo(&quot;\n&quot;)

Target = myTarget


if target_select &gt;= #Evil_Races then
	target_select = 1
else
	target_select = target_select+1
end</script>
                        <command>myTarget_Toggle</command>
                        <keyCode>46</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                </KeyGroup>
                <KeyGroup isActive="no" isFolder="yes">
                    <name>ShipKeys</name>
                    <packageName></packageName>
                    <script></script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                    <Key isActive="yes" isFolder="no">
                        <name>Order North</name>
                        <packageName></packageName>
                        <script>send(&quot;order heading n&quot;)</script>
                        <command></command>
                        <keyCode>56</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Order South</name>
                        <packageName></packageName>
                        <script>send(&quot;order heading s&quot;)</script>
                        <command></command>
                        <keyCode>50</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Order East</name>
                        <packageName></packageName>
                        <script>send(&quot;order heading e&quot;)</script>
                        <command></command>
                        <keyCode>54</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Order West</name>
                        <packageName></packageName>
                        <script>send(&quot;order heading w&quot;)</script>
                        <command></command>
                        <keyCode>52</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Order NorthEast</name>
                        <packageName></packageName>
                        <script>send(&quot;order heading 45&quot;)</script>
                        <command></command>
                        <keyCode>57</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Order SouthEast</name>
                        <packageName></packageName>
                        <script>send(&quot;order heading 135&quot;)</script>
                        <command></command>
                        <keyCode>51</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Order SouthWest</name>
                        <packageName></packageName>
                        <script>send(&quot;order heading 225&quot;)</script>
                        <command></command>
                        <keyCode>49</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Order NorthWest</name>
                        <packageName></packageName>
                        <script>send(&quot;order heading 315&quot;)</script>
                        <command></command>
                        <keyCode>55</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Look Contact</name>
                        <packageName></packageName>
                        <script></script>
                        <command>Look Contacts</command>
                        <keyCode>53</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Order Speed 20</name>
                        <packageName></packageName>
                        <script></script>
                        <command>order speed 20</command>
                        <keyCode>45</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>order speed 100</name>
                        <packageName></packageName>
                        <script></script>
                        <command>order speed 100</command>
                        <keyCode>43</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                </KeyGroup>
                <KeyGroup isActive="no" isFolder="yes">
                    <name>DruidFunctionKeys</name>
                    <packageName></packageName>
                    <script>send(&quot;cast 'lightningbolt' &quot;..Target)</script>
                    <command></command>
                    <keyCode>16777275</keyCode>
                    <keyModifier>0</keyModifier>
                </KeyGroup>
            </KeyGroup>
        </KeyGroup>
    </KeyPackage>
    <VariablePackage>
        <HiddenVariables/>
    </VariablePackage>
</MudletPackage>
