<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<HostPackage>
		<Host autoClearCommandLineAfterSend="no" HighlightHistory="yes" printCommand="yes" USE_IRE_DRIVER_BUGFIX="yes" mUSE_FORCE_LF_AFTER_PROMPT="no" mUSE_UNIX_EOL="no" mNoAntiAlias="no" mEchoLuaErrors="no" runAllKeyMatches="no" AmbigousWidthGlyphsToBeWide="auto" mRawStreamDump="yes" mIsLoggingTimestamps="no" logDirectory="" logFileName="" logFileNameFormat="yyyy-MM-dd#HH-mm-ss" mAlertOnNewData="yes" mFORCE_NO_COMPRESSION="no" mFORCE_GA_OFF="no" mFORCE_SAVE_ON_EXIT="no" mEnableGMCP="yes" mEnableMSSP="yes" mEnableMSP="yes" mEnableMSDP="no" mMapStrongHighlight="no" mLogStatus="yes" mEnableSpellCheck="yes" mEnableUserDictionary="yes" mUseSharedDictionary="no" mShowInfo="yes" mAcceptServerGUI="yes" mAcceptServerMedia="yes" mMapperUseAntiAlias="yes" mFORCE_MXP_NEGOTIATION_OFF="no" mFORCE_CHARSET_NEGOTIATION_OFF="no" enableTextAnalyzer="no" mRoomSize="0.5" mLineSize="10.0" mBubbleMode="no" mShowRoomIDs="no" mShowPanel="yes" mHaveMapperScript="no" mEditorAutoComplete="yes" mEditorTheme="Mudlet" mEditorThemeFile="Mudlet.tmTheme" mThemePreviewItemID="4" mThemePreviewType="trigger" mSearchEngineName="Google" mTimerSupressionInterval="00:00:00.000" mUseProxy="no" mProxyAddress="" mProxyPort="0" mProxyUsername="" mProxyPassword="" mAutoReconnect="no" mSslTsl="no" mSslIgnoreExpired="no" mSslIgnoreSelfSigned="no" mSslIgnoreAll="no" mDiscordAccessFlags="2495" mRequiredDiscordUserName="" mRequiredDiscordUserDiscriminator="" mSGRCodeHasColSpaceId="no" mServerMayRedefineColors="no" playerRoomPrimaryColor="#ffff0000" playerRoomSecondaryColor="#ffffffff" playerRoomStyle="0" playerRoomOuterDiameter="120" playerRoomInnerDiameter="70" CompactInputLine="no" mDoubleClickIgnore="'&quot;" EditorSearchOptions="0" DebugShowAllProblemCodepoints="no">
			<name>2021 Duris</name>
			<mInstalledPackages>
				<string>echo</string>
				<string>deleteOldProfiles</string>
				<string>run-lua-code-v4</string>
				<string>send-text-to-all-games</string>
				<string>Duris_UI_Scripts</string>
				<string>Duris_Key_Sets_2021</string>
				<string>Duris_Alias_2021</string>
				<string>Duris_Gane_Scripts</string>
				<string>Duris_Triggers_2021</string>
				<string>EMCO-2.1</string>
				<string>fText-1.3.0</string>
				<string>ZoneData</string>
				<string>Bard Practice</string>
			</mInstalledPackages>
			<url>mud.durismud.com</url>
			<serverPackageName>nothing</serverPackageName>
			<serverPackageVersion>-1</serverPackageVersion>
			<port>7777</port>
			<borderTopHeight>46</borderTopHeight>
			<borderBottomHeight>61</borderBottomHeight>
			<borderLeftWidth>384</borderLeftWidth>
			<borderRightWidth>480</borderRightWidth>
			<wrapAt>100</wrapAt>
			<wrapIndentCount>0</wrapIndentCount>
			<mFgColor>#c0c0c0</mFgColor>
			<mBgColor>#000000</mBgColor>
			<mCommandFgColor>#717100</mCommandFgColor>
			<mCommandBgColor>#000000</mCommandBgColor>
			<mCommandLineFgColor>#808080</mCommandLineFgColor>
			<mCommandLineBgColor>#000000</mCommandLineBgColor>
			<mBlack>#343434</mBlack>
			<mLightBlack>#808080</mLightBlack>
			<mRed>#800000</mRed>
			<mLightRed>#ff0000</mLightRed>
			<mBlue>#0000ff</mBlue>
			<mLightBlue>#0055ff</mLightBlue>
			<mGreen>#008000</mGreen>
			<mLightGreen>#00ff00</mLightGreen>
			<mYellow>#808000</mYellow>
			<mLightYellow>#ffff00</mLightYellow>
			<mCyan>#008080</mCyan>
			<mLightCyan>#00ffff</mLightCyan>
			<mMagenta>#800080</mMagenta>
			<mLightMagenta>#ff00ff</mLightMagenta>
			<mWhite>#c0c0c0</mWhite>
			<mLightWhite>#ffffff</mLightWhite>
			<mDisplayFont>Bitstream Vera Sans Mono,10,-1,5,50,0,0,0,1,0</mDisplayFont>
			<mCommandLineFont>Bitstream Vera Sans Mono,14,-1,5,50,0,0,0,0,0</mCommandLineFont>
			<mCommandSeparator>;</mCommandSeparator>
			<commandLineMinimumHeight>30</commandLineMinimumHeight>
			<mFgColor2>#c0c0c0</mFgColor2>
			<mBgColor2>#000000</mBgColor2>
			<mBlack2>#000000</mBlack2>
			<mLightBlack2>#808080</mLightBlack2>
			<mRed2>#800000</mRed2>
			<mLightRed2>#ff0000</mLightRed2>
			<mBlue2>#000080</mBlue2>
			<mLightBlue2>#0000ff</mLightBlue2>
			<mGreen2>#008000</mGreen2>
			<mLightGreen2>#00ff00</mLightGreen2>
			<mYellow2>#808000</mYellow2>
			<mLightYellow2>#ffff00</mLightYellow2>
			<mCyan2>#008080</mCyan2>
			<mLightCyan2>#00ffff</mLightCyan2>
			<mMagenta2>#800080</mMagenta2>
			<mLightMagenta2>#ff00ff</mLightMagenta2>
			<mWhite2>#c0c0c0</mWhite2>
			<mLightWhite2>#ffffff</mLightWhite2>
			<mSpellDic>en_US</mSpellDic>
			<mLineSize>10.0</mLineSize>
			<mRoomSize>0.5</mRoomSize>
			<stopwatches />
		</Host>
	</HostPackage>
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Duris_Triggers_2021</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName>Duris_Triggers_2021</packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>DurisTriggers</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>AutoQuest</name>
					<script>myQuestMob = matches[2]
myQuestZone = matches[3]
myQuestMonth = matches[4]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Go ask (.*) in (.*) about the (.*).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>KillQuest</name>
						<script>QuestTarget = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Go kill (\d+)\s(.*) \(\d+ left\) in (.*)!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>AutoFish</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Caught Fish</name>
						<script>send("put all.fish bp;get all.pole bp;fish")
--Fish and Prac
--Uncomment below for BARD
send("play " ..mySong)
--Uncomment below for MONK
--send("chant regen;chant calm;chant hero")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You reel in (.*) on your(.*) fishing pole!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Restart Fish</name>
						<script>send("fish")
send("play " ..mySong)
--Fish and Prac
--Uncomment below for BARD
--send("play " ..mySong)
--Uncomment below for MONK
--send("chant regen;chant calm;chant hero")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You didn't catch a thing.</string>
							<string>Your father always told you that you couldn't catch a fish in a full barrel.</string>
							<string>What have you accomplished with your so-called life?</string>
							<string>Your inability to catch a fish in no way reflects upon your usefulness as a sentient being.</string>
							<string>They can smell you.  It's the only explanation why you aren't catching anything.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CombatStats</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stats</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Count Dodged</name>
							<script>CombatDodge = CombatDodge+1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>dodges your futile attack.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>CountHits</name>
							<script>CombatHit=CombatHit+1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[Damage:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>CountMisses</name>
							<script>CombatMiss = CombatMiss+1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You miss</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CombatGeneral</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fumble</name>
							<script>send("get "..myWeapon)
send("wield "..myWeapon)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You swing at your foe _really_ badly, sending your</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>BashWatch</name>
							<script>cecho("&lt;cyan&gt;&lt;========== STANDING: "..matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.*) clambers to (\w+) feet</string>
								<string>(.*) rises to (\w+) feet</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>whoTank</name>
							<script>RescueTarget = matches[3]
cecho("&lt;cyan&gt;&lt;===== "..RescueTarget.."&lt;cyan&gt; [F12]")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*) attacks (\w+).*(\d+) hits</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Target on Me</name>
							<script>Target = matches[2]
cecho("&lt;DodgerBlue&gt;&lt;==================== Target set to: &lt;khaki&gt;" ..Target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\w+) suddenly attacks YOU!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>XPBOT</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>WSPark</name>
						<script>if myCombatStatus then
	doCombat()
else
	send("kill "..matches[2])
end
disableTrigger("XPBOT")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(snapping|bee|box|duck|hummingbird|wasp)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Rogue</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Flee Backstab</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>FleeBac</name>
							<script>return_Dir = flee_Dir[matches[2]]
if FleeBacSet == "True" then
	cecho("&lt;cyan&gt;&lt;===== Return direction set to: "..return_Dir)
	send("save;save;"..return_Dir..";backstab "..Target)
	FleeBacSet = "False"
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You flee (\w+)ward!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>PromptTriggerGroup</name>
					<script>
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat Prompt</name>
						<script>if myCombatStatus==false then
	myCombatStatus = true
	cecho("&lt;cyan&gt;&lt;===== COMBAT STATUS ON =====&gt;")

end


if myTank ~= matches[2] then
	myTank=matches[2]
	cecho("&lt;cyan&gt;&lt;======== "..myTank.."&lt;cyan&gt; is TANKING")
end

myTank=matches[2]
myTankPos=matches[3]
MYTANKPOSITION(myTankPos)
myTankCond=matches[4]
myEnemy=matches[5]
myEnemyPos=matches[6]
MYENEMYPOSITION(myEnemyPos)
myEnemyCond=matches[7]
--[[
darkward.BottomStatus1:echo(myTank)
darkward.BottomStatus2:echo(myTankPos)
darkward.BottomStatus3:echo(myTankCond)
darkward.BottomStatus4:echo(myEnemy)
darkward.BottomStatus5:echo(myEnemyPos)
darkward.BottomStatus6:echo(myEnemyCond)
]]--

disableTrigger("Container Content")
disableTrigger("CaptureEquipmentWorn")
disableTrigger("Item Value on Inventory")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\&lt; T: (.*) TP: (.*) TC: (.*) E: (.*) EP: (.*) EC: (.*)\&gt; </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ManaPromptCapture</name>
						<script>HEALTH(tonumber(matches[2]), tonumber(matches[3]))
MANA(tonumber(matches[4]), tonumber(matches[5]))
MOVES(tonumber(matches[6]), tonumber(matches[7]))
deleteLine() 
if myCombatStatus==true then
	myCombatStatus = false
	cecho("&lt;cyan&gt;&lt;===== COMBAT STATUS OFF =====&gt;&lt;/cyan&gt;")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\&lt; (-{0,1}\d*\.{0,1}\d+)h\/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)m\/(\d+)M\s(-{0,1}\d*\.{0,1}\d+)v\/(\d+)V\sPos: (.*) &gt;</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>PromptCapture</name>
						<script>-- regex old: ^\&lt; (-{0,1}\d*\.{0,1}\d+)h/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)v/(\d+)V\sPos: (.*) &gt;$
HEALTH(tonumber(matches[2]), tonumber(matches[3]))
MOVES(tonumber(matches[4]), tonumber(matches[5]))
MYPOSITION(matches[6])


disableTrigger("Container Content")
disableTrigger("CaptureEquipmentWorn")
disableTrigger("Item Value on Inventory")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\&lt; (\d+)h/(\d+)H (\d+)v/(\d+)V Pos: (standing|kneeling|sitting|on your ass)&gt; $</string>
							<string>^\&lt; (-{0,1}\d*\.{0,1}\d+)h/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)v/(\d+)V\sPos: (.*) &gt;$</string>
							<string>^\&lt; (-{0,1}\d*\.{0,1}\d+)h\/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)m\/(\d+)M\s(-{0,1}\d*\.{0,1}\d+)v\/(\d+)V\sPos: (.*) &gt;</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>DeleteMSP Prompt</name>
						<script>deleteLine() </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>&lt;prompt&gt;</string>
							<string>&lt;/prompt&gt;</string>
							<string>&lt;map&gt;</string>
							<string>&lt;/map&gt;</string>
							<string>&lt;automap&gt;</string>
							<string>&lt;/automap&gt;</string>
							<string>&lt;group&gt;</string>
							<string>&lt;/group&gt;</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>PK</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>EvilEnters</name>
						<script>t = matches[2]:split(" ")
Target = t[1]
echo ("====================================Target set to: " .. Target .. "\n")
-- send("kill " .. Target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[A|An] (Drow Elf|Troll|Minotaur|Githyanki|Lich|Orc|Ogre|Duergar|Shadow Beast|Vampire|Death Knight|Goblin|Thri-kreen|Illithid) [enters|exits|sneaks|lands|trots|floats|flies|snaps|searches|rides]</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Misc</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>SetSpringTrue</name>
						<script>checkSpring = true
cecho("&lt;cyan&gt;&lt;===== CheckSpring set to TRUE =====&gt;")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A spring shoots up from the ground</string>
							<string>A tiny spring bubbles here from the ground</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>SetSpringFalse</name>
						<script>checkSpring = false
cecho("&lt;cyan&gt;&lt;===== CheckSpring set to FALSE =====&gt;")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A tiny bubbling spring rapidly shrinks in size until finally it disappears entirely</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>EXP_Tracker</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ExpTrackerOld</name>
						<script>myPrevExp = myCurExp
myCurExp = tonumber(matches[2])

cecho("\n&lt;magenta&gt;Experience gained since last check: "..myPrevExp-myCurExp)

myExpText = myCurExp..", ("..myPrevExp-myCurExp..")"

EXPTEXT(myExpText)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Experience till level: (\d+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ExpTracker</name>
						<script>if matches[1] == "You have just begun the trek to your next level!" then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 0%")
	EXP(0)
elseif  matches[1] == "You are still a very long way from your next level." then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 10%")
	EXP(10)
elseif  matches[1] == "You have gained some progress, but still have a ways to go yet towards your next level." then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 20%")
	EXP(20)
elseif  matches[1] == "You have gained some progress, and are nearing the half-way point in the trek to your next level." then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 30%")
	EXP(30)
elseif  matches[1] == "You are close to the half-way point in the journey towards your next level." then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 40%")
	EXP(40)
elseif  matches[1] == "You are at the half-way point towards this next level!" then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 50%")
	EXP(50)
elseif  matches[1] == "You have just passed the half-way point on the way towards your next level." then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 60%")
	EXP(60)
elseif  matches[1] == "You are well on your way towards your next level." then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 70%")
	EXP(70)
elseif  matches[1] == "You are three quarters the way to your next level." then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 75%")
	EXP(75)
elseif  matches[1] == "You are almost ready to attain your next level!" then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 80%")
	EXP(80)
elseif  matches[1] == "You should level anytime now!" then
	cecho("&lt;DodgerBlue&gt; ExpTracker:&lt;khaki&gt; 90%")
	EXP(90)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have just begun the trek to your next level!</string>
							<string>You are still a very long way from your next level.</string>
							<string>You have gained some progress, but still have a ways to go yet towards your next level.</string>
							<string>You have gained some progress, and are nearing the half-way point in the trek to your next level.</string>
							<string>You are close to the half-way point in the journey towards your next level.</string>
							<string>You are at the half-way point towards this next level!</string>
							<string>You have just passed the half-way point on the way towards your next level.</string>
							<string>You are well on your way towards your next level.</string>
							<string>You are almost ready to attain your next level!</string>
							<string>You should level anytime now!</string>
							<string>You are three quarters the way to your next level.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Captures</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CaptureCharacterInfo</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>getName</name>
							<script>myName = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Character attributes for (\w+)</string>
								<string>Score information for (\w+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ScoreCapture</name>
							<script>clearUserWindow("GUI.Box4Mini")
myName = matches[2]
selectCurrentLine()
copy()
appendBuffer("GUI.Box4Mini")
GUI.myEMCO:append("Score") 
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>99</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Score information for (.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>LevelRaceClassCapture</name>
								<script>selectCurrentLine()
copy()
appendBuffer("GUI.Box4Mini")
myLevel= tonumber(matches[2])
myClass= matches[4]
myRace= matches[5]


if myClass ~= ActiveClass then
	for k,v in ipairs(DurisClassList) do
		disableAlias(v)
	end
	ActiveClass = myClass
	enableAlias(myClass)
else
	echo("\n"..ActiveClass.." Class Aliases are ACTIVE")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Level:\s+(\d+)\s+Race:\s+(\w+)\s+Class:\s+(\w+)</string>
									<string>^Level:\s+(\d+)\s+Race:\s+(\w+ \w+)\s+Class:\s+(\w+)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>captureBuffs</name>
								<script>--clearUserWindow("GUI.Box7")
selectCurrentLine()
copy()
appendBuffer("GUI.Box4Mini")
--demonnic.chat:append("Score") </script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Detecting:\s(.*)$</string>
									<string>^Paladin auras:\s(.*)$</string>
									<string>^Protected from:\s(.*)$</string>
									<string>^Enchantments:\s(.*)$</string>
									<string>^Songs:\s(.*)$</string>
									<string>^Protected by:\s(.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ActiveSpells</name>
								<script>echo("GUI.Box4Mini", "\nACTIVE SPELLS\n")
myActiveSpells={}

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>99</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Active Spells:</string>
									<string>--------------</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>2</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>CapActiveSpells</name>
									<script>local x = 0


if tonumber(matches[3])==nil then x=1
	else x=matches[3]
end
myActiveSpells[matches[2]]=tonumber(x)
selectCurrentLine()
copy()
--appendBuffer("Left3")
replace(matches[2].." ("..x..")")

--demonnic.chat:append("Score") 
appendBuffer("GUI.Box4Mini")
</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^(.*)\s\((\d+|less than a minute remaining)</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>ToggleActiveSpells</name>
									<script>--spairs_print(myActiveSpells)
setTriggerStayOpen("ActiveSpells", 0)
setTriggerStayOpen("ScoreCapture", 0)</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\n$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CaptureComms</name>
						<script>--  "All",
--  "RaceWar",
--  "Guild",
--  "Tells",
--  "Says",
--  "Misc",</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>captureGuild</name>
							<script>GUI.myEMCO:append("Guild") </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>tells your guild</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>captureRacewar</name>
							<script>GUI.myEMCO:append("RaceWar") </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>tells your racewar:</string>
								<string>tells your guild</string>
								<string>^(\w+) tells you (.*)</string>
								<string>^You tell</string>
								<string>group-says</string>
								<string>^You say</string>
								<string>tells your alliance</string>
								<string>Scheduled REBOOT in .* seconds</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>0</integer>
								<integer>1</integer>
								<integer>0</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>captureTells</name>
							<script>GUI.myEMCO:append("Tells") </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+) tells you (.*)</string>
								<string>^You tell</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>captureSays</name>
							<script>GUI.myEMCO:append("Says") </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>group-says</string>
								<string>^You say</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Skill Gain</name>
							<script>GUI.myEMCO:append("Skills") </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel your skill</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CaptureGroupInfo</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>AutoGroup</name>
							<script>clearUserWindow("GUI.Box3Mini")
GUI.Box3Mini:cecho("&lt;DodgerBlue&gt;GROUP INFO\n")
GUI.Box3Mini:cecho("&lt;DodgerBlue&gt;HP%".."\t &lt;khaki&gt;Name\n")
GUI.Box3Mini:cecho("&lt;gray&gt;====================\n")
myGroup = { }
--deleteLine()
GroupCount = 0
testGroup = {}</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>50</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your group consists of</string>
								<string>&lt;group&gt;</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>2</integer>
							</regexCodePropertyList>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Group to Window</name>
								<script>selectCurrentLine()
copy()
appendBuffer("GUI.Box7Mini")
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>20</conditonLineDelta>
								<mStayOpen>99</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Get Name MSP</name>
								<script>local y = string.trim(matches[3])
local ycolor = "\n&lt;DodgerBlue&gt;"..y..":  "
local leny = (18-string.len(y))
local spacer = string.rep(" ",leny)
local str = (ycolor..spacer)
--GUI.Box2Mini:cecho(str)
deleteLine()
groupMate = y
GroupCount = GroupCount +1</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>( Head|Front|Back)\)\s(.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Get Stats MSP</name>
								<script>--selectCurrentLine()
--copy()
--appendBuffer("GUI.Box2Mini")
local v=tonumber(matches[4])
local w=tonumber(matches[5])
local x=tonumber(matches[2])
local y=tonumber(matches[3])
local z=math.floor((x/y)*100)
local lenz=3-string.len(z)
local zstr=string.rep(" ",lenz)
local diff = (x-y)
local lendiff=5-string.len(diff)
local diffstr=string.rep(" ",lendiff)
local str = "&lt;khaki&gt;"..zstr..z.."%   &lt;red&gt;"..diffstr..diff
--GUI.Box2Mini:cecho(str)
deleteLine()
myGroup[groupMate] = z
testGroup[GroupCount] = {Name = groupMate, HP = x, MAXHP = y, PCT = z, MV = v, MAXMV = w }
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string> &lt;(\d+)h/(\d+)H&gt; &lt;(\d+)m/(\d+)M&gt;</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>AddGroup</name>
								<script>local hpCheck = (tonumber(matches[2])/tonumber(matches[3])*100)
local gMate = matches[6]

myGroup[gMate] = hpCheck
cecho("&lt;magenta&gt; added")
echo("hp: "..matches[2].."   maxhp: "..matches[3].."    "..matches[6])</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>99</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(\d+)\/(\d+)\s+hit,\s+(\d+)\/(\d+)\s+move.*\s+(\w+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ToggleAutoGroup</name>
								<script>setTriggerStayOpen("AutoGroup", 0)
--spairs_var(myGroup)

updateGroupDisplay()
updateHealGrid()

</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>&lt;/group&gt;</string>
									<string>^$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>2</integer>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ClearBlank Lines</name>
								<script>deleteLine()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CaptureRoomInfo</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>RoomCapture</name>
							<script>myInRoom={}
listInRoom={}
clearUserWindow("GUI.Box5Mini")
selectCurrentLine()
copy()
appendBuffer("GUI.Box5Mini")


</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>99</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Obvious exits:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>InRoom</name>
								<script>if matches[2]~="Obvious exits:" then
	local x = matches[2]
	table.insert(listInRoom, x)
	--local str = "&lt;cyan&gt;"..x.."\n"
	--GUI.Box3Mini:cecho(str)
	selectCurrentLine()
	copy()
	appendBuffer("GUI.Box5Mini")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(.*)$</string>
									<string>^(A |An )(Drow|Drow Elf|Troll|Minotaur|Githyanki|Lich|Orc|Ogre|Duergar|Shadow Beast|Shadow|Vampire|Death Knight|Death|Goblin|Thri-Kreen|Illithid)(.*)\((tiny|small|medium|large|giant|gigantic|huge)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ToggleRoomCapture</name>
								<script>setTriggerStayOpen("RoomCapture", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>\&lt; (-{0,1}\d*\.{0,1}\d+)h/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)v/(\d+)V\sPos: (.*) &gt;</string>
									<string>\&lt; (-{0,1}\d*\.{0,1}\d+)h/(\d+)H\s(-{0,1}\d*\.{0,1}\d+)m/(\d+)M\s(-{0,1}\d*\.{0,1}\d+)v/(\d+)V\sPos: (.*) &gt;</string>
									<string>^\&lt; T: (.*) TP: (.*) TC: (.*) E: (.*) EP: (.*) EC: (.*)\&gt; </string>
									<string>^\&lt; (\d+)h/(\d+)H (\d+)v/(\d+)V Pos: (standing|kneeling|sitting|on your ass)&gt; $</string>
									<string>^$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>MapCapture</name>
							<script>clearUserWindow("GUI.Box7Mini")
setFontSize("GUI.Box7Mini", 14)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>99</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>&lt;automap&gt;</string>
								<string>&lt;map&gt;</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>MapLines</name>
								<script>if not string.starts(line, "Zone:") then
	if not string.starts(line, "Room:") then
		selectCurrentLine()
		copy()
		appendBuffer("GUI.Box7Mini")
		deleteLine()
	end
end
</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>\s{1}(.*)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ToggleMapCapture</name>
								<script>setTriggerStayOpen("MapCapture", 0)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>&lt;/automap&gt;</string>
									<string>&lt;/map&gt;</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CurrentSpells</name>
						<script>clearUserWindow("Left1")
cecho("Left1", "&lt;Yellow&gt;Spell Slots Available:\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>99</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have memorized the following spells:$</string>
							<string>You currently have the following spell slots available:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>CaptureSpells</name>
							<script>--tMySpells[matches[3]] = tonumber(matches[2])
selectCurrentLine()
copy()
appendBuffer("Left1")
--deleteline()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>\s+(\d)\s-\s(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ToggleCurrentSpells</name>
							<script>for k,v in pairs(tMySpells) do echo("\n"..tostring(k).."  "..tostring(v)) end
setTriggerStayOpen("CurrentSpells", 0)
echo("\nMySpells Table contains: " .. table.size(tMySpells) .. " entries.")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You can memorize</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Container Content</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Echo Container to Window</name>
							<script>selectCurrentLine()
copy()
appendBuffer("GUI.Box5Mini")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Empty Container</name>
							<script>disableTrigger("Container Content")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Nothing.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Skill Capture</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>99</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Skill$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SkillPattern</name>
							<script>local x = tonumber(matches[3])


if x &gt; tonumber(mySkills[matches[2]]) then
	Cecho("&lt;cyan&gt; Gained " ..x - tonumber(matches[2]))
	--mySkills[matches[2]]=tonumber(matches[3])
else
	echo("No Skill gains...")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.*)\s(\d+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Skill Capture Toggle</name>
							<script>setTriggerStayOpen("Skill Capture", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CaptureEquipmentWorn</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>99</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are using:</string>
							<string>Your available eq slots are:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Equipment to Window</name>
							<script>if matches[3] ~= "" then
	selectCaptureGroup(3)
	copy()
	appendBuffer("GUI.Box5Mini")
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\w+)&gt;\s*(.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ToggleCaptureEquipmentWorn</name>
							<script>--disableTrigger("CaptureEquipmentWorn")
setTriggerStayOpen("CaptureEquipmentWorn", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CaptureWhoList</name>
						<script>myWhoList = myWhoList or {}
myWhoCount = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>99</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Listing of the Mortals!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>[26 Bard            ] Idor (Halfling)[Commoner]</name>
							<script>--myWhoList = {}
xlevel = matches[2]
xclass = matches[3]
xname = matches[4]
myWhoCount = myWhoCount+1

--Add to Who List
myWhoList[xname] = {Level = xlevel, Class = xclass}
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>\[([0-9 ]+)(.*)\] ([a-zA-Z]+)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ToggleCaptureWhoList</name>
							<script>setTriggerStayOpen("CaptureWhoList", 0)
cecho("&lt;khaki&gt; &lt;============ Who List Capture Complete")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>There are (.*) mortal</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CaptureRecipes</name>
						<script>myRecipes = myRecipes or {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>99</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You know the following recipes:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ToggleCaptureRecipes</name>
							<script>setTriggerStayOpen("CaptureRecipes", 0)
cecho(calign("Recipes Captured", {width = "80", alignment = "center", cap = "[TradeSkill]", mirror = false, spacer = "=", inside = false, capColor = "&lt;DodgerBlue&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;khaki&gt;"}))</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>   99539                 a tiny amethyst earring</name>
							<script>xnum = matches[2]
xname = matches[3]
myRecipes[xnum] = {Name = xname}</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\d+)\s*(.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CaptureRecipeMaterial</name>
						<script>myRecipeMaterial = myRecipeMaterial or {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>3</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You open your tome of craftsmanship and examine the item.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>To craft this item, you will need 1 of an anti-matter nebula and 2 of some star dust.</name>
							<script>--xnum = matches[2]
--xname = matches[3]
--myRecipes[xnum] = xname

if matches[4] ~= nil then
	myRecipeMaterial[myRecipeNum] = {Comp1 = matches[3], Qty1 = matches[2], Comp2 = matches[5], Qty2 = matches[4]}
else
	myRecipeMaterial[myRecipeNum] = {Comp1 = matches[3], Qty1 = matches[2]}
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^To craft this item, you will need (\d+) of \s*(.*) and (\d+) of \s*(.*).$</string>
								<string>^To craft this item, you will need (\d+) of \s*(.*).$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ToggleRecipeMaterial</name>
							<script>setTriggerStayOpen("CaptureRecipeMaterial", 0)
cecho(calign("Materials Captured", {width = "80", alignment = "center", cap = "[TradeSkill]", mirror = false, spacer = "=", inside = false, capColor = "&lt;DodgerBlue&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;khaki&gt;"}))</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>WaterRoom</name>
					<script>expandAlias("gb")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You need a boat to go there.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>MissingCircle</name>
					<script>mySpellCount[tonumber(matches[2])]= tonumber(matches[4])

local x = matches[5] - matches[4]
if x &gt; 0 then 
	cecho("&lt;cyan&gt; &lt; slots missing:"..x)
	spellsMissing = true
	else
	cecho("&lt;magenta&gt; &lt; Full")
	spellsMissing = false
end
selectCurrentLine()
copy()
appendBuffer("Left1")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(\d+)(st|nd|rd|th) circle:\s+(\d+)\s+of\s+(\d+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>SpellCompletion</name>
					<script>cecho("&lt;cyan&gt;&lt;================================================== SPELL COMPLETION\n")

if matches[1] == "You finish your song." then send("play " ..mySong) end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You complete your spell...</string>
						<string>You finish your song.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Skill Training</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>AutoHide</name>
						<script>send("hide")
send("glance me")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Drella appears to be Firbolg and</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Move on Sing</name>
						<script>send(AFK_DIR)
send("riff prot")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You play a song</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Change Direction</name>
						<script>AFK_DIR = flee_Dir[AFK_DIR]
echo("Direction changed to: " ..AFK_DIR)
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Alas, you cannot go that way. . . .</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bard Restart</name>
						<script>send("look;save")
echo("restarting in 4 seconds")
tempTimer(3, function() send("play "..mySong) end)
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your cheeks are burning.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Enemy Scanner</name>
					<script>echo("\n")
cecho(calign("Scanning Area", {width = "80", alignment = "center", cap = "[scan]", mirror = false, spacer = "=", inside = false, capColor = "&lt;DodgerBlue&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;khaki&gt;"}))
echo("\n\n")

Scan_Targets = {}
Evil_Report = ""</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>99</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You quickly scan the area.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scan for Goodies</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scan for Evils</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Scan_Evils</name>
							<script>--(Drow Elf|Troll|Minotaur|Githyanki|Lich|Orc|Ogre|Duergar|Shadow Beast|Vampire|Death Knight|Goblin|Thri-kreen|Illithid)

echo(matches[3])
echo("\n")
echo(matches[6])

if matches[3] then table.insert( Scan_Targets, matches[3] )
else
	echo("Clear Scan'")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(A |An )(Drow Elf|Troll|Minotaur|Githyanki|Lich|Orc|Ogre|Duergar|Shadow Beast|Vampire|Death Knight|Goblin|Thri-kreen|Illithid)(.*)who is(.*)to your (north.|south.|east.|west|above.|below.)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Report Scan</name>
							<script>if #Scan_Targets&gt;0 then
  cecho(calign("Warning", {width = "80", alignment = "center", cap = "[scan]", mirror = false, spacer = "-", inside = false, capColor = "&lt;yellow:red&gt;", spacerColor = "&lt;yellow:red&gt;", textColor = "&lt;yellow:red&gt;"}))
  echo("\n\n")
  cecho(calign(table.concat(Scan_Targets, ", "), {width = "80", alignment = "center", mirror = false, spacer = " ", inside = false}))
  echo("\n\n")
  cecho(calign("Warning", {width = "80", alignment = "center", cap = "[scan]", mirror = false, spacer = "-", inside = false, capColor = "&lt;yellow:red&gt;", spacerColor = "&lt;yellow:red&gt;", textColor = "&lt;yellow:red&gt;"}))
  echo("\n")
else
  cecho(calign("Clear Scan", {width = "80", alignment = "center", cap = "[scan]", mirror = false, spacer = "=", inside = false, capColor = "&lt;DodgerBlue&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;khaki&gt;"}))
  echo("\n\n")
  cecho(calign("Clear Scan", {width = "80", alignment = "center", cap = "[scan]", mirror = false, spacer = "=", inside = false, capColor = "&lt;DodgerBlue&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;khaki&gt;"}))
  echo("\n\n")
end
setTriggerStayOpen("Enemy Scanner", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Stand</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stand_1</name>
						<script>send("stand")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A tentacle of solified mist coils itself around you tossing you to the ground.$</string>
							<string>avoids your bash, you topple over and fall to the ground.$</string>
							<string> ^Bashing creatures of this minute size is hopeless at best.$</string>
							<string>^In your haste to slam people around, you slip and fall!$</string>
							<string>^Maybe you should get on your feet first?$</string>
							<string>^Maybe you should get up off your knees first?$</string>
							<string>^Spring-leap at who?$</string>
							<string>^Such skills take patience!$</string>
							<string>^The blast knocks you off your feet!$</string>
							<string>grabs your leg and yanks you down to the ground!$</string>
							<string>^You abandon your praying.$</string>
							<string>^You almost drown in your attempt to</string>
							<string>^You are flung to the ground by</string>
							<string>^You are knocked to the ground</string>
							<string>^You can move again.$</string>
							<string>^You collapse in a heap on the ground.$</string>
							<string>^You collapse in agony as pure fire envelops your spine!$</string>
							<string>^You crash to the ground with a bone crunching thud!$</string>
							<string>^You fall and injure yourself!$</string>
							<string>^You fly head first directly into what might as well be a brick wall.$</string>
							<string>^You fly head first through (.*), landing on your ass.$</string>
							<string>^You fly right over your target and land on your head!$</string>
							<string>^You lose your footing and fall to your knees!$</string>
							<string>^You make a futile attempt to bash</string>
							<string>^You make a futile attempt to springleap</string>
							<string>^You manage to, with complete incompetence, throw yourself,</string>
							<string>^You may as well try and bodyslam a speck of dust! Too small..</string>
							<string>^You need sturdy ground from which to leap from!$</string>
							<string>^You stagger about, then fall sprawling!$</string>
							<string>^You stagger and fall to your knees!$</string>
							<string>^You trip over (.*) while pointlessly slamming at someone already down.$</string>
							<string>^Your attempt to bash</string>
							<string>^Your attempt to bodyslam</string>
							<string>^You're not quite the right size to springleap them.$</string>
							<string>boulder hit's dead on knocking you to the ground!$</string>
							<string>crashes wildly into you!$</string>
							<string>dances an acrobatic maneuver in battle, tripping you.$</string>
							<string>fails as it blows you on your ass!$</string>
							<string>ferociously MAULS YOU!$</string>
							<string>is too hefty to bash!$</string>
							<string>is too huge for you to bash!$</string>
							<string>is too huge for you to bodyslam!$</string>
							<string>leap knocks into you, sending you slightly off balance...$</string>
							<string>makes you lose your balance and fall on the ground!$</string>
							<string>mighty kick sends you crashing into the wall!$</string>
							<string>mighty kick sends you flying out of the room!$</string>
							<string>picks you up and tosses you against the wall!$</string>
							<string>sends you crashing to the ground!$</string>
							<string>suddenly looks a bit dumb, and madly slams _YOU_!$</string>
							<string>mass slams into you, knocking you to the ground!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stand_2</name>
						<script>send("stand")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>swing reached you!$</string>
							<string>tackles you square in the chest knocking the wind out of you!$</string>
							<string>^You fall to your knees as uncontrollable pain engulfs your entire brain!$</string>
							<string>^The wave slams into you, knocking you off your feet!$</string>
							<string>nimble kick crashes into your groin .. OUCH!!! .. and down you go!$</string>
							<string>Nah... You feel too relaxed to do that...</string>
							<string>^You topple over yourself as you try to bash</string>
							<string>You land on your ass with a stunning force!</string>
							<string>withstands your bash, you bounce back and fall to the ground.</string>
							<string>nimble kick crashes into your groin .. OUCH!!! .. And down you go!</string>
							<string>^You manage with complete incompetence to throw yourself head first into the ground!$</string>
							<string>^You attempt a combination, but fall flat on your face!$</string>
							<string>Sorry, you can't do that while laying around.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ship Set</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Disembark</name>
						<script>echo("\n")
cecho(calign("Disengaged", {width = "80", alignment = "center", cap = "[Ship Keys]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n\n")
cecho(calign("Disengaged", {width = "80", alignment = "center", cap = "[Ship Keys]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n")
disableKey("ShipKeys")
enableKey("WalkKeys")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You disembark this ship.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ship Ready</name>
						<script>echo("\n")
cecho(calign("Engaged", {width = "80", alignment = "center", cap = "[Ship Keys]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n\n")
cecho(calign("Engaged", {width = "80", alignment = "center", cap = "[Ship Keys]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n")
disableKey("WalkKeys")
enableKey("ShipKeys")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The first officer reports everything is in order and the ship is ready to go.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Track Contacts</name>
						<script>SID=matches[2]
SName=matches[3]
XCord=tonumber(matches[4])
YCord=tonumber(matches[5])
Range=tonumber(matches[6])
Bearing=tonumber(matches[7])
Heading=tonumber(matches[8])
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\[(.*)]\s+(.*)X:(\d+)\s+Y:(\d+)\s+R:(.*)\s+B:(\d+)\s+H:(\d+)\s+S:(\d+)\s+\|(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Consider Output</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chicken</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt;&lt;= -10 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Now where did that chicken go\?$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Needle</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt;&lt;= -5 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You could do it with a needle!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Easy</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= -2 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Easy.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fairly Easy</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= -1 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Fairly easy.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Perfect Match</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 0 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The perfect match!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Some Luck</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 1 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You would need some luck.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lot of Luck</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 2 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You would need a lot of luck!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Luck and Equip</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 3 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You would need a lot of luck and great equipment!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lucky Punk</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 10 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Do you feel lucky, punk?$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Are you mad</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 10 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Are you mad!?$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You ARE</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 15 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You ARE mad!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lie Down</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 20 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Why don't you just lie down and pretend you're dead instead?$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Epitaph</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &lt;= 25 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^What do you want your epitaph to say\?!\?$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not EVEN Funny</name>
						<script>cecho("     &lt;DodgerBlue&gt;Level Diff: &lt;khaki&gt; &gt; +25 &lt;DodgerBlue&gt;levels")
disableTrigger("Consider Output")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^This thing will kill you so fast, it's not EVEN funny!$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>AfterLogin</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CharacterLoggedIn</name>
						<script>send("tog term msp")
send("tog pag")
send("who")
send("tog pag")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>        Welcome to Duris Dikumud</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Highlights</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ShamanMemComplete</name>
						<script>echo("\n")
cecho(calign("COMPLETE", {width = "80", alignment = "center", cap = "[Memorize]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;DodgerBlue&gt;"}))
echo("\n\n")
cecho(calign("COMPLETE", {width = "80", alignment = "center", cap = "[Memorize]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;DodgerBlue&gt;"}))
echo("\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You snap out of your meditative trance, memorization complete.</string>
							<string>Your prayers are complete.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>EpicPoint</name>
						<script>echo("\n")
cecho(calign("GAINED", {width = "80", alignment = "center", cap = "[Epic Point]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;DodgerBlue&gt;"}))
echo("\n\n")
cecho(calign("GAINED", {width = "80", alignment = "center", cap = "[Epic Point]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;DodgerBlue&gt;"}))
echo("\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As your body absorbs the experience, you seem to feel a bit more epic!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>HorseThrown</name>
						<script>echo("\n")
msgOut("right", "Dismounted!!!", "Mounted Combat", "red")
echo("\n")
msgOut("right", "Dismounted!!!", "Mounted Combat", "red")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As a magnificent heavy warhorse bucks madly you shoot up in the air!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Summoner Teachers</name>
						<script>echo("\n")
cecho(calign("Teacher", {width = "80", alignment = "center", cap = "[Summoner]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;DodgerBlue&gt;"}))
echo("\n\n")
cecho(calign("Teacher", {width = "80", alignment = "center", cap = "[Summoner]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;DodgerBlue&gt;"}))
echo("\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Astali</string>
							<string>Frayrien</string>
							<string>Oneliwen</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spell Messages</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>StoneskinOut</name>
							<script>echo("\n")
cecho(calign("Stone Skin", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n\n")
cecho(calign("Stone Skin", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel your skin soften and return to normal.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>StoneSkinOn</name>
							<script>echo("\n")
cecho(calign("Stone Skin", {width = "80", alignment = "center", cap = "[Spells]", mirror = false, spacer = "=", inside = false, capColor = "&lt;DodgerBlue&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;DodgerBlue&gt;"}))
echo("\n\n")
cecho(calign("Stone Skin", {width = "80", alignment = "center", cap = "[Spells]", mirror = false, spacer = "=", inside = false, capColor = "&lt;DodgerBlue&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;DodgerBlue&gt;"}))
echo("\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel your skin harden to stone.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ElementalAffinityOut</name>
							<script>echo("\n")
cecho(calign("Elemental Affinity", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n\n")
cecho(calign("Elemental Affinity", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A slight chill runs through you as you feel nature's essence leave your body.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>HasteOut</name>
							<script>echo("\n")
cecho(calign("Haste", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n\n")
cecho(calign("Haste", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The world speeds up around you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vampiric Trance Out</name>
							<script>echo("\n")
cecho(calign("Vampiric Trance", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n\n")
cecho(calign("Vampiric Trance", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Color fades slowly into your face.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>PhantomArmorOut</name>
							<script>echo("\n")
cecho(calign("Phantom Armor", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n\n")
cecho(calign("Phantom Armor", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You become less hazy.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bark Out</name>
							<script>echo("\n")
cecho(calign("Bark Skin", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n\n")
cecho(calign("Bark Skin", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n")	</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your skin loses its barklike texture.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Armor Out</name>
							<script>echo("\n")
cecho(calign("Armor", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n\n")
cecho(calign("Armor", {width = "80", alignment = "center", cap = "[Spell Expired]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;DodgerBlue&gt;", textColor = "&lt;red&gt;"}))
echo("\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel less protected.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ZoneMap</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CheckMap from Area Command</name>
						<script>MyZoneName = string.trim(matches[2])

if ZoneLinks[MyZoneName] then 
   echoLink("Click for Zone Map", [[openUrl(ZoneLinks[MyZoneName])]], "Opens default browser to display zone map")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Zone Name: (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CheckMap from MSP Tag</name>
						<script>MyZoneName = string.trim(matches[2])

if ZoneLinks[MyZoneName] then 
   echoLink("Click for Zone Map", [[openUrl(ZoneLinks[MyZoneName])]], "Opens default browser to display zone map")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Zone: (.*)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Loot Group</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Society Deposit</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^There were: </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Soc Gold</name>
							<script>send("soc dep "..matches[2]" g")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\d+) gold coin</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Soc Silver</name>
							<script>send("soc dep "..matches[2]" s")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\d+) silver coin</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Soc Copper</name>
							<script>send("soc dep "..matches[2]" c")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\d+) copper coin</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>AutoLoot</name>
						<script>if lootOn == true then
	send("get "..LootVar.." corpse")
end

if myCombatStatus==true then
	myCombatStatus = false
	cecho("&lt;cyan&gt;&lt;===== COMBAT STATUS OFF =====&gt;")
  MYTANKPOSITION("OUT_OF_COMBAT")
  MYENEMYPOSITION("OUT_OF_COMBAT") 
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You receive your share of experience.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mount Triggers</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mount Exhausted</name>
						<script>if Dismount_Flag &gt; 0 then
	send("dismount")
	Dismount_Flag = 0
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your mount is too exhausted.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You Dismount</name>
						<script>Dismount_Flag = 1</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You dismount</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You climb up and ride</name>
						<script>Dismount_Flag = 1</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You climb up and ride</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Addicted to Blood</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>3</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Bloodlust - Damage Bonus(vs mob only)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Addicted Completion</name>
						<script>--
--Kill 30 mobs within 30 minutes
--You are 80% complete.
--You have 11:42 left.
--
AddictedStatus = matches[2]


-- Header Icon 4
echo("GUI.Icon4", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="red"&gt;Bonus Dam&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;]]..AddictedStatus..[[%&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Current bonus damage: (\d+)%</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Addicted Timer</name>
						<script>--
--Kill 30 mobs within 30 minutes
--You are 80% complete.
--You have 11:42 left.
--
AddictedTimeMinutes = matches[2]
AddictedTimeSeconds = matches[3]

-- Header Icon 3
echo("GUI.Icon3", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="red"&gt;BloodLust&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;]]..AddictedTimeMinutes..[[:]]..AddictedTimeSeconds..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have ([0-1]?[0-9]|[2][0-3]):([0-5][0-9]) left.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Track Followers</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Follower Gate</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>10</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Followers:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Capture Follower Keyword</name>
							<script>tempFollower = matches[2]

myPets = myPets or {}


</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^   the (\w+) of .*$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Follower Gate Closure</name>
							<script>setTriggerStayOpen("Follower Gate", 0)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Status:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CraftMaterialGather</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Seeking</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#000000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>some star dust</string>
							<string>some interplanetary dust</string>
							<string>some intergalactic dust</string>
							<string>a clump of cosmic plasma</string>
							<string>an anti-matter nebula</string>
							<string>a strip of raw leather</string>
							<string>some rolled-up raw leather</string>
							<string>a fine piece of thick raw leather</string>
							<string>some extremely-thick raw leather</string>
							<string>an enchanted strip of raw leather</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Glance Spells</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pre_Glance</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pre_Glance_Missing</name>
							<script>has_stone = 1
has_globe = 1
has_haste = 1
disableTrigger("Glance")
disableTrigger("Pre_Glance")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^No-one by that name here.</string>
								<string>^You don't see that here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pre_Glance</name>
							<script>enableTrigger("Glance")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^{he|she|it} is in the front rank.</string>
								<string>(He's|She's|It's) (\w*) in size.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Glance</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Check_Stone</name>
							<script>has_stone = 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\w+ body seems to be made of stone!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Check_Globe</name>
							<script>has_globe = 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^{he's|she's|it's} encased in a shimmering globe!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Check_Haste</name>
							<script>has_haste = 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\w+ seems to be moving much faster than normal..</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Glance_Cast_Missing_Spells</name>
							<script>current_pos = matches[6]

if current_pos ~= "standing" then
  send("stand")
end

--adjust the expandAlias entries below to match your spellcast aliases
--
if has_stone == 0 then
  expandAlias("stone "..glance_tar)
end

if has_globe == 0 then
	expandAlias("globe "..glance_tar)
end

if has_haste == 0 then
	expandAlias("haste "..glance_tar)
end

disableTrigger("Glance")
disableTrigger("Pre_Glance")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>&lt; (\d+)h\/(\d+)H (\d+)v\/(\d+)V Pos: (.*) &gt;</string>
								<string>^\&lt; (\d+)h/(\d+)H (\d+)v/(\d+)V Pos: (standing|kneeling|sitting|on your ass)&gt; $</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>EQ Database Set</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Stat Item on Get</name>
					<script>local mydb = db:get_database("durisdata")

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[2]))

for _, row in ipairs(results) do
  row.STATS = row.STATS or "N/A"	
  cecho("\n &lt;DodgerBlue&gt;Item:  &lt;khaki&gt;" .. row.NAME .."\n &lt;DodgerBlue&gt;Stats: &lt;khaki&gt;" .. row.STATS .. "\n &lt;DodgerBlue&gt;Zone:  &lt;khaki&gt;" .. row.LOCATION .."\n &lt;DodgerBlue&gt;Slot:  &lt;khaki&gt;" .. row.SLOT .."\n &lt;DodgerBlue&gt;IVal: &lt;khaki&gt;" .. row.ITEMVALUE)
end

--display(results)

if table.contains(Proc_Items, matches[2]) then 
   cecho("\n&lt;khaki&gt;Item has a &lt;DodgerBlue&gt;PROC&lt;khaki&gt;!\n")
end

--send ("say "..results[1].NAME.." Stats: "..results[1].STATS)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You get (.*) \[.*] from</string>
						<string>^Your enhancement is a success! You now have (.*) \[</string>
						<string>^You stop using (.*) \[</string>
						<string>^You get (.*) from</string>
						<string>^Your enhancement is a success! You now have (.*)!$</string>
						<string>^You stop using (.*).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>testvalue</name>
					<script>--{stats={"Vnum", "TYPE", "SLOT", "NAME", "LOCATION", "STATS", "iLVL"}})--

cecho("&lt;DodgerBlue&gt;  Item Value = &lt;khaki&gt;" ..matches[3])
cecho("&lt;DodgerBlue&gt;  Item = &lt;khaki&gt;" ..matches[2])
itemValue=tonumber(matches[3])
itemName= matches[2]

mydb = db:get_database("durisdata")

res = db:fetch(mydb.stats,{db:eq(mydb.stats.LOCATIONLOWERCASE, zoneName), db:like(mydb.stats.NAME, itemName)})
--display(res)
if res then
  for _, row in ipairs(res) do
    cecho("\n &lt;DodgerBlue&gt;Item:  &lt;khaki&gt;" .. row.NAME .."\n &lt;DodgerBlue&gt;Type:  &lt;khaki&gt;" .. row.TYPE .."\n &lt;DodgerBlue&gt;Slots: &lt;khaki&gt;" .. row.SLOT .."\n &lt;DodgerBlue&gt;Stats: &lt;khaki&gt;" .. row.STATS .. "\n &lt;DodgerBlue&gt;Zone:  &lt;khaki&gt;" .. row.LOCATION .."\n")
    if itemValue then cecho("\n &lt;DodgerBlue&gt;Item: &lt;khaki&gt;" .. row.ITEMVALUE)
      end
  end
  res[1].ITEMVALUE = itemValue
  cecho("\n&lt;DodgerBlue&gt;  Item Value set to: &lt;khaki&gt;" ..itemValue)
  db:update(mydb.stats, res[1])
  cecho("\n&lt;DodgerBlue&gt;  Duris Database: &lt;khaki&gt;saved")
end



if table.contains(Proc_Items, itemName) then 
   cecho("&lt;khaki&gt;Item has a &lt;DodgerBlue&gt;PROC&lt;khaki&gt;!\n")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) \[.*] has an item value of (\d+).$</string>
						<string>^(.*) has an item value of (\d+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>testZone</name>
					<script>cecho("&lt;DodgerBlue&gt;  Zone Name = " ..matches[2])
zoneName = string.lower(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^This item is from the zone: (.*).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="yes" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Item Value on Inventory</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>99</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You are carrying: </string>
						<string>currently contains</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Echo Item Value</name>
						<script>local mydb = db:get_database("durisdata")

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[2]))

for _, row in ipairs(results) do
  cecho("&lt;DodgerBlue&gt;     Item Value:  &lt;khaki&gt;" ..  row.ITEMVALUE)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*) \[</string>
							<string>^(.*) (\(magic\))</string>
							<string>^(.*) (\(glowing\))</string>
							<string>^(.*) (\(illuminating\))</string>
							<string>^(.*)$</string>
							<string>^\[*\d*]*\s*([^\(]+)</string>
							<string>^(.*) (\(humming\))</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Stat Roller</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ReRoll Version 2.0</name>
					<script>-- Duris Character Roller for Mudlet
-- version 2.0
-- Designed to roll characters with the intent of utilizing the stat swap capability
-- Author: Drevarr@gmail.com


-- Desired Roll Table
-- excellent = 8
-- Very good = 7
-- good = 6
-- above average = 5
-- average = 4
-- below average = 3
-- poor = 2
-- lame = 1
-- end of Desired Roll Table comment

-- Set DesiredRoll to the level of acceptable stats based on the table above
DesiredRoll = 8

-- Desired Number of Rolls = Minimum number of rolls matching the DesiredRoll required across all stats (excluding Unused **not swapable) before roller stops
DesiredNumberOfRolls = 3

--Counter
NumberOfMatchingRolls = 0


--testing echos
cecho("\n&lt;khaki&gt;Str:&lt;DodgerBlue&gt; "..scoreLookup[RolledStr].."     &lt;khaki&gt;Pow: &lt;DodgerBlue&gt;"..scoreLookup[RolledPow])
cecho("\n&lt;khaki&gt;Dex:&lt;DodgerBlue&gt; "..scoreLookup[RolledDex].."     &lt;khaki&gt;Int: &lt;DodgerBlue&gt;"..scoreLookup[RolledInt])
cecho("\n&lt;khaki&gt;Agi:&lt;DodgerBlue&gt; "..scoreLookup[RolledAgi].."     &lt;khaki&gt;Wis: &lt;DodgerBlue&gt;"..scoreLookup[RolledWis])
cecho("\n&lt;khaki&gt;Con:&lt;DodgerBlue&gt; "..scoreLookup[RolledCon].."     &lt;khaki&gt;Cha: &lt;DodgerBlue&gt;"..scoreLookup[RolledCha])
cecho("\n&lt;khaki&gt;Luc:&lt;DodgerBlue&gt; "..scoreLookup[RolledLuc].."     &lt;khaki&gt;Unu: &lt;DodgerBlue&gt;"..scoreLookup[RolledUnu])
--avgStat = (scoreLookup[RolledStr]+scoreLookup[RolledDex]+scoreLookup[RolledAgi]+scoreLookup[RolledCon]+scoreLookup[RolledPow]+scoreLookup[RolledInt]+scoreLookup[RolledWis]+scoreLookup[RolledCha]+scoreLookup[RolledLuc]+scoreLookup[RolledUnu])/10

-- save all rolls to a table for data analysis when we are feeling geeky

Stats = scoreLookup[RolledStr]..","..scoreLookup[RolledDex]..","..scoreLookup[RolledAgi]..","..scoreLookup[RolledCon]..","..scoreLookup[RolledPow]..","..scoreLookup[RolledInt]..","..scoreLookup[RolledWis]..","..scoreLookup[RolledCha]..","..scoreLookup[RolledLuc]..","..scoreLookup[RolledUnu]
table.insert(myRolls, Stats)

if scoreLookup[RolledStr] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledDex] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledAgi] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledCon] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledPow] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledInt] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledWis] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledCha] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if scoreLookup[RolledLuc] &gt;= DesiredRoll then
	NumberOfMatchingRolls = NumberOfMatchingRolls + 1
end

if NumberOfMatchingRolls &gt;= DesiredNumberOfRolls then
	-- replace wav file with appropriate full path for a sound alert on successful roll
	playSoundFile([[C:\Users\John\Documents\darkward\Sound\Creature\HighInquisitorWhitemane\HighInquisitorWhitemaneRes01.wav]])
else
	NumberOfMatchingRolls = 0
	RolledStr=""
	RolledPow=""
	RolledDex=""
	RolledInt=""
	RolledAgi=""
	RolledWis=""
	RolledCon=""
	RolledCha=""
	RolledLuc=""
	RolledUnu=""
	send("y")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Do you want to reroll this char</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ReRoll Version 1.0</name>
					<script>DesiredStr = 6
DesiredDex = 6
DesiredAgi = 6
DesiredCon = 6
DesiredPow = 3
DesiredInt = 3
DesiredWis = 6
DesiredCha = 5
DesiredLuc = 5
DesiredUnu = 3


cecho("\n&lt;khaki&gt;Str:&lt;DodgerBlue&gt; "..scoreLookup[RolledStr].."     &lt;khaki&gt;Pow: &lt;DodgerBlue&gt;"..scoreLookup[RolledPow])
cecho("\n&lt;khaki&gt;Dex:&lt;DodgerBlue&gt; "..scoreLookup[RolledDex].."     &lt;khaki&gt;Int: &lt;DodgerBlue&gt;"..scoreLookup[RolledInt])
cecho("\n&lt;khaki&gt;Agi:&lt;DodgerBlue&gt; "..scoreLookup[RolledAgi].."     &lt;khaki&gt;Wis: &lt;DodgerBlue&gt;"..scoreLookup[RolledWis])
cecho("\n&lt;khaki&gt;Con:&lt;DodgerBlue&gt; "..scoreLookup[RolledCon].."     &lt;khaki&gt;Cha: &lt;DodgerBlue&gt;"..scoreLookup[RolledCha])
cecho("\n&lt;khaki&gt;Luc:&lt;DodgerBlue&gt; "..scoreLookup[RolledLuc].."     &lt;khaki&gt;Unu: &lt;DodgerBlue&gt;"..scoreLookup[RolledUnu])
--avgStat = (scoreLookup[RolledStr]+scoreLookup[RolledDex]+scoreLookup[RolledAgi]+scoreLookup[RolledCon]+scoreLookup[RolledPow]+scoreLookup[RolledInt]+scoreLookup[RolledWis]+scoreLookup[RolledCha]+scoreLookup[RolledLuc]+scoreLookup[RolledUnu])/10
Stats = scoreLookup[RolledStr]..","..scoreLookup[RolledDex]..","..scoreLookup[RolledAgi]..","..scoreLookup[RolledCon]..","..scoreLookup[RolledPow]..","..scoreLookup[RolledInt]..","..scoreLookup[RolledWis]..","..scoreLookup[RolledCha]..","..scoreLookup[RolledLuc]..","..scoreLookup[RolledUnu]
table.insert(myRolls, Stats)

if scoreLookup[RolledStr] &gt;= DesiredStr and scoreLookup[RolledDex] &gt;= DesiredDex and scoreLookup[RolledAgi] &gt;= DesiredAgi and scoreLookup[RolledCon] &gt;= DesiredCon and scoreLookup[RolledPow] &gt;= DesiredPow and scoreLookup[RolledInt] &gt;= DesiredInt and scoreLookup[RolledWis] &gt;= DesiredWis and scoreLookup[RolledCha] &gt;= DesiredCha and scoreLookup[RolledLuc] &gt;= DesiredLuc and scoreLookup[RolledUnu] &gt;= DesiredUnu then 
	playSoundFile([[C:\Users\John\Documents\darkward\Sound\Creature\HighInquisitorWhitemane\HighInquisitorWhitemaneRes01.wav]])
else
	RolledStr=""
	RolledPow=""
	RolledDex=""
	RolledInt=""
	RolledAgi=""
	RolledWis=""
	RolledCon=""
	RolledCha=""
	RolledLuc=""
	RolledUnu=""
	send("y")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Do you want to reroll this char</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Attributes</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>StrengthPower</name>
						<script>RolledStr=matches[2]
RolledPow=matches[3]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Strength:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Power:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>DexterityIntelligence</name>
						<script>RolledDex=matches[2]
RolledInt=matches[3]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Dexterity:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Intelligence:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>AgilityWisdom</name>
						<script>RolledAgi=matches[2]
RolledWis=matches[3]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Agility:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Wisdom:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ConstitutionCharisma</name>
						<script>RolledCon=matches[2]
RolledCha=matches[3]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Constitution:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Charisma:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>LuckUnused</name>
						<script>RolledLuc=matches[2]
RolledUnu=matches[3]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Luck:\s+(lame|poor|below average|average|above average|good|very good|excellent)\s+Unused:\s+(lame|poor|below average|average|above average|good|very good|excellent)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>test triggers</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>SetLinkTest</name>
					<script>local mydb = db:get_database("duris")
local results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[3]))

--selectString(matches[2], 1)
selectCaptureGroup(2)

local str = ""
for _, row in ipairs(results) do
	row.STATS = row.STATS or "NONE"
	str = str .. "\n Item: " .. row.NAME .."\nStats: " .. row.STATS .. "\nZone: " .. row.LOCATION .."\nSlot: " .. row.SLOT .."\nIVal: " .. row.ITEMVALUE
end
setLink([[]], str)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\&lt;worn (on eyes|in ear)\&gt;\s+(.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>eqstats_me</name>
					<script>--\&lt;worn around neck&gt;\s(.*)(\(glowing|magic\))

local mydb = db:get_database("duris")

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[2]))

for _, row in ipairs(results) do
  cecho("\n &lt;DodgerBlue&gt;Item: &lt;khaki&gt;" .. row.NAME .."\n &lt;DodgerBlue&gt;Stats &lt;khaki&gt;" .. row.STATS .. "\n &lt;DodgerBlue&gt;Zone: &lt;khaki&gt;" .. row.LOCATION .."\n")
  if iLVL then cecho("\n &lt;DodgerBlue&gt;Item: &lt;khaki&gt;" .. row.iLVL)
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\&lt;worn as a badge&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn on head&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn on eyes&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn in ear&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn on face&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn around neck&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn on body&gt;\s+(.*)</string>
						<string>\&lt;worn about body&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn as quiver&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn about waist&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn around wrist&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn on hands&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn on finger&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;primary weapon&gt;\s+(.*)( | \(glowing| \(magic\))</string>
						<string>\&lt;worn on feet&gt;\s+(.*)</string>
						<string>\&lt;worn on finger&gt;\s+(.*)</string>
						<string>\&lt;worn around wrist&gt;\s+(.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>AutoIdBot</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Identify_Bot</name>
					<script>local myRequestor = matches[2]
local myItem = matches[4]

local mydb = db:get_database("durisdata")

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, myItem))
local test = results.NAME
if test ~="" then
	for _, row in ipairs(results) do
	  send("tell ".. myRequestor.. " ITEM: ".. row.NAME .." STATS: " .. row.STATS .. " ZONE: " .. row.LOCATION .." IVALUE: " .. row.ITEMVALUE)
	end
end


</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) tells you in (\w+) '(.*)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="no" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Bard Auto Practice</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Prac1</name>
				<script>send ("play protection;hide;appraise satchel;lore satchel;aware;riff harmony")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:35.000</time>
			</Timer>
			<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracDragon</name>
				<script>expandAlias("pdrag")
disableTimer("PracDragon")
enableTimer("PracHarm")
</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracHarm</name>
				<script>expandAlias("pharm")
disableTimer("PracHarm")
enableTimer("PracCharming")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracCharming</name>
				<script>expandAlias("pcharm")
disableTimer("PracCharming")
enableTimer("PracProt")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracProt</name>
				<script>expandAlias("pprot")
disableTimer("PracProt")
enableTimer("PracPeace")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracPeace</name>
				<script>expandAlias("ppeace")
disableTimer("PracPeace")
enableTimer("PracHarmony")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracHarmony</name>
				<script>expandAlias("pharmony")
disableTimer("PracHarmony")
enableTimer("PracForget")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracForget</name>
				<script>expandAlias("pforg")
disableTimer("PracForget")
enableTimer("PracDisso")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracDisso</name>
				<script>expandAlias("pdisso")
disableTimer("PracDisso")
enableTimer("PracDiscord")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracDiscord</name>
				<script>expandAlias("pdisc")
disableTimer("PracDiscord")
enableTimer("PracCalming")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracCalming</name>
				<script>expandAlias("pcalm")
disableTimer("PracCalming")
enableTimer("PracCoward")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>PracCoward</name>
				<script>expandAlias("pcalm")
disableTimer("PracCoward")
enableTimer("PracDragon")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:30.000</time>
			</Timer>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>echo</name>
			<script></script>
			<command></command>
			<packageName>echo</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>`echo</name>
				<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
feedTriggers("\n" .. s .. "\n")
echo("\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>`echo (.+)</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>deleteOldProfiles</name>
			<script></script>
			<command></command>
			<packageName>deleteOldProfiles</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>delete old profiles</name>
				<script>deleteOldProfiles(matches[3], matches[2]=="maps")

--Syntax examples: "delete old profiles"  -&gt; deletes profiles older than 31 days
--					"delete old maps 10"	-&gt; deletes maps older than 10 days</script>
				<command></command>
				<packageName></packageName>
				<regex>^delete old (profiles|maps)(?: (\d+))?$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>run-lua-code-v4</name>
			<script></script>
			<command></command>
			<packageName>run-lua-code-v4</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>run lua code</name>
				<script>local f, e = loadstring("return "..matches[2])
if not f then
  f, e = assert(loadstring(matches[2]))
end

local r =
  function(...)
    if not table.is_empty({...}) then
      display(...)
    end
  end
r(f())</script>
				<command></command>
				<packageName></packageName>
				<regex>^lua (.*)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>send-text-to-all-games</name>
			<script></script>
			<command></command>
			<packageName>send-text-to-all-games</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Send text to all games with :</name>
				<script>-- prefix with : to send text or run an alias in all open profiles that have this script installed
-- for example - :hi or :follow bob
local matchedText = matches[2]
expandAlias(matchedText)
raiseGlobalEvent("sysSendAllProfiles", matchedText)
</script>
				<command></command>
				<packageName></packageName>
				<regex>^:(.*)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Duris_Alias_2021</name>
			<script></script>
			<command></command>
			<packageName>Duris_Alias_2021</packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Duris Alias Set</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>DurisAliases</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>BagWork</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Get Item from Bag</name>
							<script>send("get "..matches[2].." "..myBag)</script>
							<command></command>
							<packageName></packageName>
							<regex>^gib(?: (.+))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Look in Bag</name>
							<script>send("look in "..myBag)</script>
							<command></command>
							<packageName></packageName>
							<regex>^lib(?: (.+))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Put Item in Bag</name>
							<script>send("put "..matches[2].." "..myBag)</script>
							<command></command>
							<packageName></packageName>
							<regex>^pib(?: (.+))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>BP2Chest</name>
							<script>send ("get " .. matches[2] .." bp;put " .. matches[2] .. " chest")</script>
							<command></command>
							<packageName></packageName>
							<regex>^pp(\s([\w\.]+))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>BagCoins</name>
							<script>bag1 = "satchel"
send("rem "..bag1..";put all.coins "..bag1..";wear "..bag1)</script>
							<command></command>
							<packageName></packageName>
							<regex>^bagit$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Put All Get Book</name>
							<script>bag1 = "satchel"
send("rem "..bag1..";put all "..bag1..";get all.book "..bag1..";wear "..bag1)</script>
							<command></command>
							<packageName></packageName>
							<regex>^bagb$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>get satchel</name>
							<script>send("rem "..myBag..";get "..matches[2].." "..myBag)</script>
							<command></command>
							<packageName></packageName>
							<regex>^gs(?: (.+))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>put satchel</name>
							<script>send("put "..matches[2].." "..myBag)</script>
							<command></command>
							<packageName></packageName>
							<regex>^ps(?: (.+))?$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>CharacterClass</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>GenericClassAliases</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>Lore</name>
								<script>send("lore " ..matches[2])
send("exam " ..matches[2])</script>
								<command></command>
								<packageName></packageName>
								<regex>^lore (.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Put Boat</name>
								<script>send("rem satchel")
send("put raft satchel")
send("put boat satchel")
send("wear satchel")</script>
								<command></command>
								<packageName></packageName>
								<regex>^pb$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Get Boat</name>
								<script>send("rem satchel")
send("get raft satchel")
send("get boat satchel")
send("wear satchel")</script>
								<command></command>
								<packageName></packageName>
								<regex>^gb$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>sendQuest</name>
								<script>for word in myQuestMob:gmatch("%w+") do send ("ask "..word.." "..myQuestMonth) end</script>
								<command></command>
								<packageName></packageName>
								<regex>^mq$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Combat Stats</name>
								<script>local x = CombatMiss+CombatDodge+CombatHit
local y = (CombatHit/x)*100
echo("Miss:"..CombatMiss.."  Dodged:"..CombatDodge.."  Hits:"..CombatHit.."  Total:"..x.."  % of Total:"..y)</script>
								<command></command>
								<packageName></packageName>
								<regex>^cStat$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>SetLootVar</name>
								<script>if LootVar == "coins" then
	LootVar = "all"
elseif LootVar == "all" then
	LootVar = "coins"
end
cecho("&lt;cyan&gt;Lootvar set to: "..LootVar)
</script>
								<command></command>
								<packageName></packageName>
								<regex>^SetLootVar$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>DepositCoins</name>
								<script>if myPlatinum&gt;0 then send("dep " .. myPlatinum .. " p") end
if myGold&gt;0 then send("dep " .. myGold .. " g") end
if mySilver&gt;0 then send("dep " .. mySilver .. " s") end
if myCopper&gt;0 then send("dep " .. myCopper .. " c") end
echo("Autodeposit complete!")</script>
								<command></command>
								<packageName></packageName>
								<regex>^bankit$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Target</name>
								<script>t = matches[2]:split(" ")
Target = t[1]
echo ("Target set to: " .. Target .. "\n")</script>
								<command></command>
								<packageName></packageName>
								<regex>^tar (.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Wield Weapon</name>
								<script>myWeapon = matches[2]
cecho("&lt;cyan&gt;&lt;=================================== weapon set to: "..myWeapon.."\n")
send("wield "..myWeapon)</script>
								<command></command>
								<packageName></packageName>
								<regex>^we(?: (.+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Follow And Consent</name>
								<script>send ("follow " .. matches[2])
send ("consent " .. matches[2])</script>
								<command></command>
								<packageName></packageName>
								<regex>^fc(\s([\w\.]+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Loot Corpse</name>
								<script>if matches[2] then 
	for count=1, tonumber(matches[2]) do
	send("get " ..LootVar.. " " .. count..".corpse")
	end
else
	send("get " ..LootVar.. " corpse")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^ll(\s([\w\.]+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Look In Container</name>
								<script>clearUserWindow("GUI.Box5Mini")
enableTrigger("Container Content")
send("look in " ..matches[2])
GUI.Box5Mini:cecho("&lt;DodgerBlue&gt;Contents of &lt;khaki&gt;"..matches[2])
GUI.Box5Mini:cecho("\n&lt;DodgerBlue&gt;===============================")</script>
								<command></command>
								<packageName></packageName>
								<regex>^l in(?: (.+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Consider</name>
								<script>enableTrigger("Consider Output")
send("consider "..matches[2])</script>
								<command></command>
								<packageName></packageName>
								<regex>^con(?: (.+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Equipment</name>
								<script>clearUserWindow("GUI.Box5Mini")
enableTrigger("CaptureEquipmentWorn")
send("equipment list")
GUI.Box5Mini:cecho("&lt;DodgerBlue&gt;You are using:")
GUI.Box5Mini:cecho("\n&lt;khaki&gt;===============================\n")</script>
								<command></command>
								<packageName></packageName>
								<regex>^eq$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Inventory</name>
								<script>enableTrigger("Item Value on Inventory")
send("Inventory")
</script>
								<command></command>
								<packageName></packageName>
								<regex>^i$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Exam</name>
								<script>enableTrigger("Item Value on Inventory")
send("Exam " ..matches[2])</script>
								<command></command>
								<packageName></packageName>
								<regex>^ex (.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>emote object</name>
								<script>emotes = {
"lag",
"land",
"laugh",
"layhand",
"lean",
"lick",
"lifetap",
"lightning",
"list",
"listen",
"lock",
"look",
"lookup",
"loot",
"lore",
"lost",
"love",
"lucky",
"ignore",
"imitate",
"impale",
"insult",
"introduce",
"inventory",
"nap",
"nibble",
"nod",
"nog",
"nokill",
"noogie",
"nose",
"nudge",
"nuke",
"nuzzle",
"embrace",
"emit",
"emote2",
"emote",
"empathy",
"empty",
"ems",
"enhance",
"enter",
"envy",
"eqlist",
"equalibrium",
"examine",
"expand",
"eyebrow",
"raise",
"reject",
"release",
"rift",
"rlist",
"rub",
"ruffle",
"rules",
"tango",
"tap",
"tarzan",
"taunt",
"tease",
"tip",
"tiptoe",
"tithe",
"title",
"tongue",
"toss",
"touch",
"tower",
"trance",
"tug",
"tweak",
"twibble",
"twiddle",
"twirl",
"hand",
"happy",
"hello",
"hero",
"hi5",
"hiccup",
"hickey",
"hiss",
"hold",
"holdon",
"hop",
"horde",
"hose",
"howl",
"hug",
"hum",
"hunger",
"undress",
"gag",
"gamble",
"gape",
"garrote",
"gasp",
"gaze",
"glance",
"glare",
"globe",
"goose",
"grab",
"grant",
"grin",
"groan",
"grope",
"grovel",
"growl",
"grumble",
"grunt",
"guard",
"gulp",
"yawn",
"yodel",
"abort",
"accuse",
"ack",
"agree",
"amaze",
"amplify",
"analyze ",
"apologize",
"applaud",
"approach",
"arch",
"wait",
"wake",
"wave",
"wet",
"whap",
"whatever",
"wheeze",
"where",
"which",
"whimper",
"whine",
"whisper",
"whistle",
"wiggle",
"wince",
"wink",
"woops",
"worship",
}

for k,v in ipairs(emotes) do
	send(v .. " " .. matches[2])
end
</script>
								<command></command>
								<packageName></packageName>
								<regex>^emo (.*)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>addTank</name>
								<script>local x = matches[2]
myTank = myTank or {}

table.insert(myTank, x) 
cecho("&lt;cyan&gt;&lt;=================================== "..x.." added to TANK table")
</script>
								<command></command>
								<packageName></packageName>
								<regex>^atank(?: (.+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Craft Info</name>
								<script>myRecipeNum = matches[2]
send("craft info "..myRecipeNum)</script>
								<command></command>
								<packageName></packageName>
								<regex>^ci(?: (.+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>Spell Glance Alias</name>
								<script>cecho("&lt;==== Glancing Target\n")
enableTrigger("Spell_Glance")
enableTrigger("Pre_Glance")
has_stone = 0
has_globe = 0
has_stone = 0
glance_tar = matches[2]
send("glance "..glance_tar)</script>
								<command></command>
								<packageName></packageName>
								<regex>^gg(?: (.+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>stone</name>
								<script>if matches[2] then send("cast 'stone' " .. matches[2])
else
	send("cast 'stone'")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^stone(\s([\w\.]+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>haste</name>
								<script>mySpell = "Haste"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^haste(\s([\w\.]+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>globe</name>
								<script>mySpell = "Globe"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^globe(\s([\w\.]+))?$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Fighters</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Avenger</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Dreadlord</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Berserker</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Reaver</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Monk</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Chants</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Chant Hero</name>
										<script>send("Chant Hero")
</script>
										<command></command>
										<packageName></packageName>
										<regex>^ch$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Chant Regen</name>
										<script>send("Chant Regen")</script>
										<command></command>
										<packageName></packageName>
										<regex>^cr$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Martial Arts</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Springleap</name>
										<script>--^sl(?: (.+))?$
if matches[2] then send("Kneel;Springleap " .. matches[2])
else
	send("Kneel;Springleap")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^sl(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Dragon Punch</name>
										<script>--^dp(?: (.+))?$
if matches[2] then send("Dragon " .. matches[2])
else
	send("Dragon")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^dp(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Anti-Paladin</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Ranger</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Ranger Spells</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Protection from Evil</name>
										<script>send("cast 'protection from evil' self")</script>
										<command></command>
										<packageName></packageName>
										<regex>^prote$</regex>
									</Alias>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>Springleap</name>
									<script>--^sl(?: (.+))?$
if matches[2] then send("Kneel;Springleap " .. matches[2])
else
	send("Kneel;Springleap")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^sl(?: (.+))?$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Warrior</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Bodyslam</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Paladin</name>
								<script>--Paladin skills
--=========================================
--The following is a list of all skills and spells available to the Paladin class:
--
--==Skills==
--; 1st level:   2h bludgeon, 2h slashing, Bandage, Bash, Blindfighting, Carve, Climb, Dodge, Double Attack, First Aid, Fishing, Kick, Meditate, Mine, Mount, Parry, Quick Chant, Rescue, Retreat, Riposte, Swim, Unarmed Damage
--; 10th level:  Mounted Combat, Clerical Spell Knowledge
--; 20th Level:  Guard
--; 36th level:  Cleave
--; 41st level:  Skewer
--; 51st level:  Switch Opponents
--; 56th level:  Triple Attack
--
--==Innate Abilities==
--; 1st level:  Lay Hands, Detect Evil, Detect Good, Aura of Protection
--; 8th level:  Summon Mount
--; 10th level: Aura of Precision
--; 15th level: Aura of Endurance
--; 30th level: Aura of Improved Healing
--; 45th level: Aura of Battle Lust
--
--==Spells==
--; 2nd circle:  Bless
--; 3rd circle:  Armor, Cure Light, Protection from Evil
--; 4th circle:  Cure Blind, Dispel Evil, Remove Poison
--; 5th circle:  Cure Serious, Turn Undead, Invigorate
--; 6th circle:  Cure Critical, Remove Curse
--; 7th circle:  Destroy Undead, Soulshield
--; 8th circle:  Continual Light, Cure Disease, Heal
--; 9th circle:  Holy Word, Dharma
--; 10th circle: Group Heal
--; 11th circle: Accelerated Healing, Judgement, Sanctuary
--; 12th circle: Righteous Aura</script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Spells</name>
									<script>--==Spells==
--; 2nd circle:  Bless
--; 3rd circle:  Armor, Cure Light, Protection from Evil
--; 4th circle:  Cure Blind, Dispel Evil, Remove Poison
--; 5th circle:  Cure Serious, Turn Undead, Invigorate
--; 6th circle:  Cure Critical, Remove Curse
--; 7th circle:  Destroy Undead, Soulshield
--; 8th circle:  Continual Light, Cure Disease, Heal
--; 9th circle:  Holy Word, Dharma
--; 10th circle: Group Heal
--; 11th circle: Accelerated Healing, Judgement, Sanctuary
--; 12th circle: Righteous Aura</script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>2ndCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Bless</name>
											<script>if matches[2] then send("cast 'bless' " .. matches[2])
else
	send("cast 'bless' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^bless(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>3rdCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Armor</name>
											<script>if matches[2] then send("cast 'armor' " .. matches[2])
else
	send("cast 'armor' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ca(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Cure Light</name>
											<script>if matches[2] then send("cast 'Cure Light' " .. matches[2])
else
	send("cast 'Cure Light' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cl(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Protection From Evil</name>
											<script>if matches[2] then send("cast 'protection from evil' " .. matches[2])
else
	send("cast 'protection from evil' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^prote(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>4thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Dispel Evil</name>
											<script>if matches[2] then send("cast 'dispel evil' " .. matches[2])
else
	send("cast 'dispel evil'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^de(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Cure Blind</name>
											<script>if matches[2] then send("cast 'Cure Blind' " .. matches[2])
else
	send("cast 'Cure Blind' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cb(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Remove Poison</name>
											<script>if matches[2] then send("cast 'Remove Poison' " .. matches[2])
else
	send("cast 'Remove Poison' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^rp(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>5thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Invigorate</name>
											<script>--Invigorate

if matches[2] then send("cast 'Invigorate' " .. matches[2])
else
	send("cast 'Invigorate' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^inv(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Turn Undead</name>
											<script>--Turn Undead

if matches[2] then send("cast 'Turn Undead' " .. matches[2])
else
	send("cast 'Turn Undead'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^tu(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Cure Serious</name>
											<script>--Cure Serious

if matches[2] then send("cast 'Cure Serious' " .. matches[2])
else
	send("cast 'Cure Serious' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cs(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>6thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Cure Critical</name>
											<script>--Cure Critical

if matches[2] then send("cast 'Cure Crit' " .. matches[2])
else
	send("cast 'Cure Crit' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cc(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Remove Curse</name>
											<script>--Remove Curse

if matches[2] then send("cast 'Remove Curse' " .. matches[2])
else
	send("cast 'Remove Curse' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^rc(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>7thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Destroy Undead</name>
											<script>--Destroy Undead

if matches[2] then send("cast 'Destroy Undead' " .. matches[2])
else
	send("cast 'Destroy Undead'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^du(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Soulshield</name>
											<script>--Soulshield

if matches[2] then send("cast 'Soulshield' " .. matches[2])
else
	send("cast 'Soulshield'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ss(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>8thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Continual Light</name>
											<script>--Continual Light

if matches[2] then send("cast 'Continual Light' " .. matches[2])
else
	send("cast 'Continual Light'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^light(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Cure Disease</name>
											<script>--Cure Disease

if matches[2] then send("cast 'Cure Disease' " .. matches[2])
else
	send("cast 'Cure Disease'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cdis(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Heal</name>
											<script>--Heal

if matches[2] then send("cast 'Heal' " .. matches[2])
else
	send("cast 'Heal' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ch(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>9thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Holy Word</name>
											<script>--Holy Word

if matches[2] then send("cast 'Holy Word' " .. matches[2])
else
	send("cast 'Holy Word'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^hw(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Dharma</name>
											<script>--Dharma

if matches[2] then send("cast 'Dharma' " .. matches[2])
else
	send("cast 'Dharma'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^dharma$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>10thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Group Heal</name>
											<script>--Group Heal

if matches[2] then send("cast 'Group Heal' " .. matches[2])
else
	send("cast 'Group Heal'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^gh(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Holy Sword</name>
											<script>
if matches[2] then send("cast 'Holy Sword' " .. matches[2])
else
	send("cast 'Holy Sword'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^hsword$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>11thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Accelerated Healing</name>
											<script>--Accelerated Healing

if matches[2] then send("cast 'Accelerated Healing' " .. matches[2])
else
	send("cast 'Accelerated Healing' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ah(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Judgement</name>
											<script>--Judgement

if matches[2] then send("cast 'Judgement' " .. matches[2])
else
	send("cast 'Judgement'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ju(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Sanctuary</name>
											<script>--Sanctuary

if matches[2] then send("cast 'Sanctuary' " .. matches[2])
else
	send("cast 'Sanctuary'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^sanc(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>12thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Righteous Aura</name>
											<script>--Righteous Aura

if matches[2] then send("cast 'Righteous Aura' " .. matches[2])
else
	send("cast 'Righteous Aura'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ra(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Skills</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Bash</name>
										<script>--^b(?: (.+))?$
if matches[2] then send("bash " .. matches[2])
else
	send("bash")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^b(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Innates</name>
									<script>--==Innate Abilities==
--; 1st level:  Lay Hands, Detect Evil, Detect Good, Aura of Protection
--; 8th level:  Summon Mount
--; 10th level: Aura of Precision
--; 15th level: Aura of Endurance
--; 30th level: Aura of Improved Healing
--; 45th level: Aura of Battle Lust</script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Aura of Protection</name>
										<script>send("innate Aura_of_Protection")</script>
										<command></command>
										<packageName></packageName>
										<regex>^aoprot$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Aura of Precision</name>
										<script>send("Innate Aura_of_Precision")</script>
										<command></command>
										<packageName></packageName>
										<regex>^aopre$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Aura of Endurance</name>
										<script>send("innate Aura_of_Endurance")</script>
										<command></command>
										<packageName></packageName>
										<regex>^aoend$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Aura of Improved Healing</name>
										<script>send("innate Aura_of_Improved_Healing")</script>
										<command></command>
										<packageName></packageName>
										<regex>^aoheal$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Aura of Battle Lust</name>
										<script>send("innate Aura_of_Battle_Lust")</script>
										<command></command>
										<packageName></packageName>
										<regex>^aobat$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Lay Hands</name>
										<script>send("innate lay hands")</script>
										<command></command>
										<packageName></packageName>
										<regex>^lh(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Summon Mount</name>
										<script>send("innate Summon Mount")</script>
										<command></command>
										<packageName></packageName>
										<regex>^sm$</regex>
									</Alias>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>RestPrayMed</name>
									<script>send("exp")
send("rest")
send("pray")
send("med")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz|mem$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Paladin_Spellup</name>
									<script>CheckSpells = {"armor", "bless", "holy sword", "soulshield", "accelerated healing", "righteous aura"}
CheckSpellsAlias = {"ca", "bless", "hs", "ss", "ah", "ra"}

--- Loop through active to find missing spells
cecho("&lt;cyan&gt;&lt;=================================== Spell Up Activated\n")

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v.." is active\n")
	else 
		-- cecho("&lt;cyan&gt;&lt;===casting "..v"\n")
		expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)], false)
	end
end

send("score")</script>
									<command></command>
									<packageName></packageName>
									<regex>^su$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Trample</name>
									<script>if matches[2] then send("trample "..matches[2])
else
	send("trample")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^tt(?: (.+))?$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>MagicUsers</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Theurgist</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>TheurgistSpells</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>1stCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>LifeBolt</name>
											<script>if matches[2] then send("cast 'life bolt' " .. matches[2])
else
	send("cast 'life bolt'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^mm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Preserve</name>
											<script>send("cast 'Preserve' " .. matches[2])</script>
											<command></command>
											<packageName></packageName>
											<regex>^pres (.*)$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>MinorCreation</name>
											<script>send("cast 'minor cre' " .. matches[2])
send("get " .. matches[2])</script>
											<command></command>
											<packageName></packageName>
											<regex>^mc (.*)$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>DetectMagic</name>
											<script>if matches[2] then send("cast 'Detect Magic' " .. matches[2])
else
	send("cast 'Detect Magic' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^detm (.*)$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>2ndCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>ChillTouch</name>
											<script>if matches[2] then send("cast 'chill touch' " .. matches[2])
else
	send("cast 'chill touch'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ct(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Sleep</name>
											<script>if matches[2] then send("cast 'sleep' " .. matches[2])
else
	send("cast 'sleep'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^sleep(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>ProtCold</name>
											<script>if matches[2] then send("cast 'protection from cold' " .. matches[2])
else
	send("cast 'protection from cold'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^protc(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>ProtLiving</name>
											<script>if matches[2] then send("cast 'Protection from Living' " .. matches[2])
else
	send("cast 'Protection from Living'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^protl(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>VampTouch</name>
											<script>send("Vampiric Touch'")
</script>
											<command></command>
											<packageName></packageName>
											<regex>^vt$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>3rdCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>EmbalmCorpse</name>
											<script>if matches[2] then send("cast 'embalm' " .. matches[2])
else
	send("cast 'embalm' corpse")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^emb(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Sense Follower</name>
											<script>send("cast 'sense follower'")
</script>
											<command></command>
											<packageName></packageName>
											<regex>^sf$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>DispelMagic</name>
											<script>if matches[2] then send("cast 'dispel magic' " .. matches[2])
else
	send("cast 'dispel magic'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^dm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>CallArchon</name>
											<script>if matches[2] then send("cast 'call archon' " .. matches[2])
else
	send("cast 'call archon' corpse")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^archon$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>4thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Wither</name>
											<script>if matches[2] then send("cast 'wither' " .. matches[2])
else
	send("cast 'wither'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^wi(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Strength</name>
											<script>if matches[2] then send("cast 'strength' " .. matches[2])
else
	send("cast 'strength'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^str(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>5thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Coldshield</name>
											<script>send("cast 'coldshield'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^cs$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Call Asura</name>
											<script>if matches[2] then send("cast 'call asura' " .. matches[2])
else
	send("cast 'call asura' corpse")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^asura(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>MendSoul</name>
											<script>send("cast 'call asura' " .. matches[2])</script>
											<command></command>
											<packageName></packageName>
											<regex>^ms(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Feeblemind</name>
											<script>if matches[2] then send("cast 'feeblemind' " .. matches[2])
else
	send("cast 'feeblemind'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^fee(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Levitate</name>
											<script>if matches[2] then send("cast 'levitate' " .. matches[2])
else
	send("cast 'levitate'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^lev(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Teleport</name>
											<script>send("cast 'teleport'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^qq$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>6thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>ConeOfCold</name>
											<script>if matches[2] then send("cast 'cone of cold' " .. matches[2])
else
	send("cast 'cone of cold'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^coc(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>MinorGlobe</name>
											<script>if matches[2] then send("cast 'minor globe of invulnerability' " .. matches[2])
else
	send("cast 'minor globe of invulnerability'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^minorg(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>RestoreSpirit</name>
											<script>if matches[2] then send("cast 'restore spirit' " .. matches[2])
else
	send("cast 'restore spirit'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^rs(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>VitalizeSoul</name>
											<script>if matches[2] then send("cast 'vitalize soul' " .. matches[2])
else
	send("cast 'vitalize soul'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^vit(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>7thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>8thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>DeathScribe</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
									</AliasGroup>
								</AliasGroup>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Alchemist</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Illusionist</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>1st Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Magic Missile</name>
										<script>if matches[2] then send("cast 'magic missile' "..matches[2])
else
	send("cast 'magic missile'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^mm(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Phantom Armor</name>
										<script>mySpell ="Phantom Armor"
if matches[2] then send("cast '"..mySpell.."' "..matches[2])
else
	send("cast '"..mySpell.."' self")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pa(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>MinorCreation</name>
										<script>if matches[2] then send("cast 'minor creation' " .. matches[2])
else
	send("cast 'minor creation'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^mc(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>2nd Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Burning Hands</name>
										<script>mySpell ="Burning Hands"
if matches[2] then send("cast '"..mySpell.."' "..matches[2])
else
	send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^bh(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>3rd Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Shadow Monster</name>
										<script>mySpell ="Shadow Monster"
if matches[2] then send("cast '"..mySpell.."' "..matches[2])
else
	send("cast '"..mySpell.."'")
end
</script>
										<command></command>
										<packageName></packageName>
										<regex>^sm(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Blindness</name>
										<script>mySpell ="Blindness"
if matches[2] then send("cast '"..mySpell.."' "..matches[2])
else
	send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^b(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>4th Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Insects</name>
										<script>mySpell ="Insects"
if matches[2] then send("cast '"..mySpell.."' "..matches[2])
else
	send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ii(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Sleep</name>
										<script>mySpell ="Sleep"
if matches[2] then send("cast '"..mySpell.."' "..matches[2])
else
	send("cast '"..mySpell.."'")
end
</script>
										<command></command>
										<packageName></packageName>
										<regex>^sl(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Levitate</name>
										<script>mySpell ="Levitate"
if matches[2] then send("cast '"..mySpell.."' "..matches[2])
else
	send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^lev(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>5th Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>boulder</name>
										<script>mySpell ="Boulder"
if matches[2] then send("cast '"..mySpell.."' "..matches[2])
else
	send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^bb(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Shadow Travel</name>
										<script>mySpell ="Shadow Travel"
if matches[2] then send("cast '"..mySpell.."' "..matches[2])
else
	send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^dim(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>6th Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Reflection</name>
										<script>mySpell ="Reflection"
send("cast '"..mySpell.."'")
</script>
										<command></command>
										<packageName></packageName>
										<regex>^mi$</regex>
									</Alias>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>Slash Casting</name>
									<script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(Illusionist, matches[2], matches[3])</script>
									<command></command>
									<packageName></packageName>
									<regex>^\/(\w+)(\s([\w\.]+))?$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Rest Mem Med</name>
									<script>send("exp;rest;mem;med;blood")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Conjurer</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Rest Mem Med</name>
									<script>send("exp;rest;mem;med;blood")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz$</regex>
								</Alias>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>ConjSpells</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>1st Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Magic Missile</name>
											<script>if matches[2] then send("cast 'magic missile' " .. matches[2])
else
	send("cast 'magic missile'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^mm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Minor Creation</name>
											<script>if matches[2] then send("cast 'minor creation' " .. matches[2])
else
	send("cast 'minor creation'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^mc(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Detect Magic</name>
											<script>if matches[2] then send("cast 'detect magic' " .. matches[2])
else
	send("cast 'detect magic' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^dm(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>2nd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Chill Touch</name>
											<script>if matches[2] then send("cast 'chill touch' "..matches[2])
else
	send("cast 'chill touch'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ct(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Burning Hands</name>
											<script>if matches[2] then send("cast 'burning hands' " .. matches[2])
else
	send("cast 'burning hands'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^bh(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>3rd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Shocking Grasp</name>
											<script>if matches[2] then send("cast 'shocking grasp' " .. matches[2])
else
	send("cast 'shocking grasp' ")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^sg(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>4th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Lightning Bolt</name>
											<script>if matches[2] then send("cast 'lightning bolt' " .. matches[2])
else
	send("cast 'lightning bolt'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^lb(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Levitate</name>
											<script>if matches[2] then send("cast 'levitate' " .. matches[2])
else
	send("cast 'levitate' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^lev(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>5th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Conjure Elemental</name>
											<script>if matches[2] then send("cast 'conjure elemental' " .. matches[2])
else
	send("cast 'conjure elemental'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ce(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Identify</name>
											<script>if matches[2] then send("cast 'identify' " .. matches[2])
else
	send("cast 'identify'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^id(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>ConjPets</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers</name>
										<script>send("order followers "..matches[2])</script>
										<command></command>
										<packageName></packageName>
										<regex>^of (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Bash</name>
										<script>send("order followers bash "..matches[2])</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofb (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Kick</name>
										<script>send("order followers kick "..matches[2])</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofk (.*)$</regex>
									</Alias>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>Slash Casting - Table Spells Conjurer</name>
									<script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(Conjurer, matches[2], matches[3])</script>
									<command></command>
									<packageName></packageName>
									<regex>^\/(\w+)(\s([\w\.]+))?$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Ethermancer</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Tupor</name>
									<script>send("rest;tupor;med;exp;blood")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Tupor Sleep</name>
									<script>send("recl;sleep;tupor;exp;blood")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zzz$</regex>
								</Alias>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>1st Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Ice Missile</name>
										<script>mySpell = "Ice Missile"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^im(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>2nd Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Chill Touch</name>
										<script>--^ct(\s([\w\.]+))?$
mySpell = "Chill Touch"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ct(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>3rd Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Frost Bolt</name>
										<script>--^fb(\s([\w\.]+))?$
mySpell = "Frost Bolt"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fb(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Faerie Fog</name>
										<script>--^fb(\s([\w\.]+))?$
mySpell = "Faerie Fog"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fog(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>4th Circle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Lightning Bolt</name>
										<script>--^fb(\s([\w\.]+))?$
mySpell = "Lightning Bolt"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^lb(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>Slash Casting - Table Spells Conjurer</name>
									<script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(Ethermancer, matches[2], matches[3])</script>
									<command></command>
									<packageName></packageName>
									<regex>^\/(\w+)(\s([\w\.]+))?$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Necromancer</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Followers</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers</name>
										<script>send("order followers " .. matches[2])
</script>
										<command></command>
										<packageName></packageName>
										<regex>^of (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Bash</name>
										<script>if matches[2] then send("order followers bash " .. matches[2])
else
	send("order followers bash")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofb (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Backstab</name>
										<script>if matches[2] then 
	send("order followers bac " .. matches[2])
	Target = matches[2]
	echo ("======================================== Target set to: " .. Target .. "\n")
else
	send("order followers bac")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^b (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Get</name>
										<script>send("order followers get " .. matches[2])
</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofg (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Fist</name>
										<script>--^f(\s([\w\.]+))?$
if matches[2] then send("order followers cast 'Bigbys Clenched Fist' ".. matches[2])
else
	send("order followers cast 'Bigbys Clenched Fist' ")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^f(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Kill</name>
										<script>if matches[2] then 
	send("order followers kill " .. matches[2])
	Target = matches[2]
	echo ("======================================== Target set to: " .. Target .. "\n")
else
	send("order followers kill")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofk (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Haste</name>
										<script>if matches[2] then send("order followers cast 'Haste' " .. matches[2])
else
	send("order followers cast 'Haste' self")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofh(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Detect Invis</name>
										<script>--^ofdi (.*)$
if matches[2] then send("order followers cast 'Detect Invis' " .. matches[2])
else
	send("order followers cast 'Detect Invis' self")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofdi (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Cast</name>
										<script>if matches[2] then send("order followers cast '"..matches[2].."' Drev")
else
	send("order followers cast '"..matches[2].."' self")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofc(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Power Word Blind</name>
										<script>send("of cast 'power word blind' "..matches[2])</script>
										<command></command>
										<packageName></packageName>
										<regex>^pwb (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Improved Invis</name>
										<script>--^ofdi (.*)$
if matches[2] then send("order followers cast 'improved Invis' " .. matches[2])
else
	send("order followers cast 'Improved Invis' "..myName)
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofii(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Fireball</name>
										<script>--^f(\s([\w\.]+))?$
if matches[2] then send("order followers cast 'Fireball' " .. matches[2])
else
	send("order followers cast 'Fireball' ")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fb(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers cast Electrical Execution</name>
										<script>--^f(\s([\w\.]+))?$
if matches[2] then send("order followers cast 'Electrical Execution' " .. matches[2])
else
	send("order followers cast 'Electrical Execution' ")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ee(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Spells</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>1st Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Detect Magic</name>
											<script>--^ct(\s([\w\.]+))?$
mySpell = "Detect Magic"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^detm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Minor Creation</name>
											<script>if matches[2] then send("cast 'minor creation' " .. matches[2])
else
	send("cast 'minor creation'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^mc(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Preserve</name>
											<script>mySpell = "Preserve"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^pres(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Protection from Undead</name>
											<script>--^ct(\s([\w\.]+))?$
mySpell = "Protection from Undead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^protu(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Slashing Darkness</name>
											<script>mySpell = "Slashing Darkness"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^sd(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>2nd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Chill Touch</name>
											<script>--^ct(\s([\w\.]+))?$
mySpell = "Chill Touch"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^ct(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Protection from Living</name>
											<script>--^vt(\s([\w\.]+))?$
mySpell = "Protection from Living"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^protl(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Protection from Cold</name>
											<script>--^protc(\s([\w\.]+))?$
mySpell = "Protection from Cold"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^protc(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Sleep</name>
											<script>--^sleep(\s([\w\.]+))?$
mySpell = "Sleep"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^sleep(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Vampiric Touch</name>
											<script>--^vt(\s([\w\.]+))?$
mySpell = "Vampiric Touch"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^vt(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>3rd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Animate Dead</name>
											<script>--^emb(\s([\w\.]+))?$
mySpell = "Animate Dead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ad(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Dispel Magic</name>
											<script>--^dm(\s([\w\.]+))?$
mySpell = "Dispel Magic"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end	</script>
											<command></command>
											<packageName></packageName>
											<regex>^dm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Embalm</name>
											<script>--^emb(\s([\w\.]+))?$
mySpell = "Embalm"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^emb(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Sense Follower</name>
											<script>--^sense(\s([\w\.]+))?$
mySpell = "Sense Follower"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end	</script>
											<command></command>
											<packageName></packageName>
											<regex>^sense(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>4th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Life Leech</name>
											<script>--^ll(\s([\w\.]+))?$
mySpell = "Life Leech"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^li(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Strength</name>
											<script>--^str(\s([\w\.]+))?$
mySpell = "Strength"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^str(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Unmaking</name>
											<script>--^unmake(\s([\w\.]+))?$
mySpell = "Unmaking"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^unmake(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Wither</name>
											<script>--^wi(\s([\w\.]+))?$
mySpell = "Wither"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^wi(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>5th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Coldshield</name>
											<script>--^colds(\s([\w\.]+))?$
mySpell = "Coldshield"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cs(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Fireshield</name>
											<script>--^fires(\s([\w\.]+))?$
mySpell = "Fireshield"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^fires(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Heal Undead</name>
											<script>--^hu(\s([\w\.]+))?$
mySpell = "Heal Undead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^hu(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Levitate</name>
											<script>--^lev(\s([\w\.]+))?$
mySpell = "Levitate"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^lev(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Raise Spectre</name>
											<script>--^rs(\s([\w\.]+))?$
mySpell = "Raise Spectre"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^rs(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Teleport</name>
											<script>--^tel(\s([\w\.]+))?$
mySpell = "Teleport"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^tel(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Concealment</name>
											<script>--^conc(\s([\w\.]+))?$
mySpell = "Concealment"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' "..myName)
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^conc(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>6th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Vitalize Undead</name>
											<script>--^vu(\s([\w\.]+))?$
mySpell = "Vitalize Undead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^vu(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Enervation</name>
											<script>--^en(\s([\w\.]+))?$
mySpell = "Enervation"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^en(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Cone of Cold</name>
											<script>--^ct(\s([\w\.]+))?$
mySpell = "Cone of Cold"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^cc(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>7th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Knock</name>
											<script>--^knock(\s([\w\.]+))?$
mySpell = "Knock"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^knock(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Protect Undead</name>
											<script>--^pu(\s([\w\.]+))?$
mySpell = "Protect Undead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^pu(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Raise Wraith</name>
											<script>--^rw(\s([\w\.]+))?$
mySpell = "Raise Wraith"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^rw(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>8th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Detect Invisibility</name>
											<script>--^di(\s([\w\.]+))?$
mySpell = "Detect Invisibility"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^di(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Improved Invisibility</name>
											<script>--^invis(\s([\w\.]+))?$
mySpell = "Improved Invisibility"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^invis(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Negative Concussion Blast</name>
											<script>--^ncb(\s([\w\.]+))?$
mySpell = "Negative Concussion Blast"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ncb(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Haste</name>
											<script>--^has(\s([\w\.]+))?$
mySpell = "Haste"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^has(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>9thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Energy Drain</name>
											<script>--^ncb(\s([\w\.]+))?$
mySpell = "Energy Drain"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ed(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>10thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Raise Lich</name>
											<script>--^rw(\s([\w\.]+))?$
mySpell = "Raise Lich"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^rl(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>Slash Casting</name>
									<script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(Necromancer, matches[2], matches[3])</script>
									<command></command>
									<packageName></packageName>
									<regex>^\/(\w+)(\s([\w\.]+))?$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Necro SpellUp</name>
									<script>CheckSpells = {"protection from undead", "protection from cold", "protection from living", "sense follower", "strength", "levitate", "coldshield", "stone skin", "detect invisibility", "haste", "invisibility"}
CheckSpellsAlias = {"protu", "protc", "protl", "sense", "str", "lev", "cs", "pu", "di", "has", "invis"}


send("score")
--- Loop through active to find missing spells
cecho("\n&lt;cyan&gt;&lt;=================================== Spell Up Activated\n")

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v.." is active\n")
	else 
		-- cecho("&lt;cyan&gt;&lt;===casting "..v"\n")
		expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)], false)
	end
end

send("score")</script>
									<command></command>
									<packageName></packageName>
									<regex>^su$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Rest Mem Med</name>
									<script>send("exp;rest;mem;med;blood")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>equp Spectre</name>
									<script></script>
									<command>rem bp;get dagger bp;get dagger bp;give dagger spectre;give dagger spectre;of wield dagger;of wield dagger;wear bp</command>
									<packageName></packageName>
									<regex>^eqs$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Sorcerer</name>
								<script>send("rest;mem;med")</script>
								<command></command>
								<packageName></packageName>
								<regex>^zz$</regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>SorcSpells</name>
									<script>--==Spells==
-- 1st circle:  Detect Magic, Magic Missile, Minor Creation
-- 2nd circle:  Burning Hands, Chill Touch, Sleep, Strength
-- 3rd circle:  Acid Blast, Concealment, Agility, Shocking Grasp
-- 4th circle:  Dispel Magic, Farsee, Infravision, Levitate,
--               Lightning Bolt, Minor Paralysis, Ray of Enfeeblement,
--               Wizard Eye
-- 5th circle:  Coldshield, Cone of Cold, Dimension Door,
--               Minor Globe of Invulnerability, Slowness
-- 6th circle:  Color Spray, Feeblemind, Fireball, Fireshield,
--               Ice Storm, Teleport
-- 7th circle:  Bigbys Clenched Fist, Haste, Improved Invisibility,
--               Power Word Blind, Power Word Stun, Reveal True Name,
--               Detect Invisibility
-- 8th circle:  Dispel Invisible, Fly, Immolate, Power Word Kill,
--               Shadow Shield
-- 9th circle:  Acid Immolate, Incendiary Cloud,
--               Mass Invisibility, Prismatic Ray, Relocate
-- 10th circle: Chain Lightning, Meteorswarm, Bigbys Crushing Hand
-- 11th circle: solbeeps missile barrage, Enlarge, Reduce
-- 12th circle: Deflect, Globe of Invulnerability</script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Fireball</name>
										<script>if matches[2] then send("cast 'fireball' " .. matches[2])
else
	send("cast 'fireball'")
end
</script>
										<command></command>
										<packageName></packageName>
										<regex>^fb(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Bigbys Clenched Fist</name>
										<script>if matches[2] then send("cast 'bigbys clenched fist' " .. matches[2])
else
	send("cast 'bigbys clenched fist'")
end
</script>
										<command></command>
										<packageName></packageName>
										<regex>^f(\s([\w\.]+))?$</regex>
									</Alias>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>1st Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Magic Missile</name>
											<script>if matches[2] then send("cast 'magic missile' " .. matches[2])
else
	send("cast 'magic missile'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^mm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Minor Creation</name>
											<script>if matches[2] then send("cast 'minor creation' " .. matches[2])
else
	send("cast 'minor creation'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^mc(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Detect Magic</name>
											<script>if matches[2] then send("cast 'detect magic' " .. matches[2])
else
	send("cast 'detect magic' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^dm(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>2nd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Chill Touch</name>
											<script>if matches[2] then send("cast 'chill touch' " .. matches[2])
else
	send("cast 'chill touch'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^ct(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Burning Hands</name>
											<script>if matches[2] then send("cast 'burning' " .. matches[2])
else
	send("cast 'burning'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^bh(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Strength</name>
											<script>if matches[2] then send("cast 'strength' " .. matches[2])
else
	send("cast 'strength' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^str(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>3rd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Acid Blast</name>
											<script>if matches[2] then send("cast 'acid blast' " .. matches[2])
else
	send("cast 'acid blast'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ab(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Agility</name>
											<script>if matches[2] then send("cast 'agility' " .. matches[2])
else
	send("cast 'agility' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^agi(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Concealment</name>
											<script>if matches[2] then send("cast 'concealment' " .. matches[2])
else
	send("cast 'concealment' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^conc(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Shocking Grasp</name>
											<script>if matches[2] then send("cast 'shocking grasp' " .. matches[2])
else
	send("cast 'shocking grasp' ")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^sg(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>4th Circle</name>
										<script>--[[
4th CIRCLE:
dispel magic               
farsee                     
infravision                
levitate                   
lightning bolt             
minor paralysis            
ray of enfeeblement        
wizard eye  
]]--</script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Lightning Bolt</name>
											<script>if matches[2] then send("cast 'lightning bolt' " .. matches[2])
else
	send("cast 'lightning bolt'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^lb(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Ray Of Enfeeblement</name>
											<script>if matches[2] then send("cast 'ray of enfeeb' " .. matches[2])
else
	send("cast 'ray of enfeeb'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ray(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Dispel Magic</name>
											<script>if matches[2] then send("cast 'dispel magic' " .. matches[2])
else
	send("cast 'dispel magic'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^dm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Farsee</name>
											<script>if matches[2] then send("cast 'farsee' " .. matches[2])
else
	send("cast 'farsee' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^far(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Infravision</name>
											<script>if matches[2] then send("cast 'infravision' " .. matches[2])
else
	send("cast 'infravision' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^infra(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Levitate</name>
											<script>if matches[2] then send("cast 'levitate' " .. matches[2])
else
	send("cast 'levitate' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^lev(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Minor Paralysis</name>
											<script>if matches[2] then send("cast 'minor paralysis' " .. matches[2])
else
	send("cast 'minor paralysis'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^minorp(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Wizard Eye</name>
											<script>if matches[2] then send("cast 'wizard eye' " .. matches[2])
else
	send("cast 'wizard eye'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^eye(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
								</AliasGroup>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Psionicist</name>
								<script>--1st CIRCLE:
--adrenaline control         
--ego whip                   
--excogitate                 

--2nd CIRCLE:
--ballistic attack           
--enhance agility            
--enhance constitution       
--enhance dexterity          
--enhance strength           

--3rd CIRCLE:
--aura sight                 
--lend health                
--molecular agitation        

--4th CIRCLE:
--ego blast                  
--energy containment         
--flesh armor                

--5th CIRCLE:
--inflict pain               

--6th CIRCLE:
--cell adjustment            
--create sound               
--flight                     
--intellect fortress         

--7th CIRCLE:
--detonate                   
--tower of iron will         

--8th CIRCLE:
--ectoplasmic form           
--molecular control          

--9th CIRCLE:
--ether warp                 
--psychic crush 

--10th CIRCLE:
--death field                
--wormhole                   

--11th CIRCLE:
--biofeedback                

--12th CIRCLE:
--enrage   </script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>PsiSpells</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Displacement</name>
										<script>send("will 'Displacement'")</script>
										<command></command>
										<packageName></packageName>
										<regex>^di$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Inertial Barrier</name>
										<script>send("will 'Inertial Barrier'")</script>
										<command></command>
										<packageName></packageName>
										<regex>^ib$</regex>
									</Alias>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>1st Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Adrenaline Control</name>
											<script>send("will 'adrenaline control'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^ac$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>EgoWhip</name>
											<script>if matches[2] then send("will 'ego whip' " .. matches[2])
else
	send("will 'ego whip'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^ew(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Excogitate</name>
											<script>send("will 'Excogitate' " .. matches[2])</script>
											<command></command>
											<packageName></packageName>
											<regex>^pcon(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>2nd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>BallisticAttack</name>
											<script>if matches[2] then send("will 'ballistic attack' " .. matches[2])
else
	send("will 'ballistic attack'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^ba(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Enhanced Agility</name>
											<script>send("will 'enhance agility'")
--send("will 'enhance constitution'")
--send("will 'enhance dexterity'")
--send("will 'enhance strength'")

--enhance agility            
--enhance constitution       
--enhance dexterity          
--enhance strength </script>
											<command></command>
											<packageName></packageName>
											<regex>^agi$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Enchanced Constitution</name>
											<script>send("will 'enhance constitution'")
</script>
											<command></command>
											<packageName></packageName>
											<regex>^con$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Enhanced Dexterity</name>
											<script>send("will 'enhance dexterity'")
</script>
											<command></command>
											<packageName></packageName>
											<regex>^dex$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Enchanced Strength</name>
											<script>send("will 'enhance strength'")

</script>
											<command></command>
											<packageName></packageName>
											<regex>^str$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>3rd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Aura Sight</name>
											<script>send("will 'aura sight'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^as$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>MolecularAgitation</name>
											<script>if matches[2] then send("will 'molecular agitation' " .. matches[2])
else
	send("will 'molecular agitation'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^ma(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>4th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Ego Blast</name>
											<script>if matches[2] then send("will 'ego blast' " .. matches[2])
else
	send("will 'ego blast'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^eb(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Energy Containment</name>
											<script>send("will 'energy containment'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^ec$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Flesh Armor</name>
											<script>send("will 'flesh armor'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^fa(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>5th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Inflict Pain</name>
											<script>if matches[2] then send("will 'Inflict Pain' " .. matches[2])
else
	send("will 'Inflict Pain'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ip(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>6th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Cell Adjustment  </name>
											<script>send("will 'cell adjustment'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^ca$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Create Sound</name>
											<script>send("will 'create sound'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^cs$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Flight</name>
											<script>send("will 'flight'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^fly$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Intellect Fortress</name>
											<script>send("will 'Intellect Fortress'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^if$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>7th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Detonate</name>
											<script>if matches[2] then send("will 'Detonate' " .. matches[2])
else
	send("will 'Detonate'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^det(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Tower of Iron Will</name>
											<script>--Tower of Iron Will

send("will 'Tower of Iron Will'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^toiw(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>8th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Ectoplasmic Form</name>
											<script>--ectoplasmic form 
send("will 'Ectoplasmic Form'")</script>
											<command></command>
											<packageName></packageName>
											<regex></regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Molecular Control</name>
											<script>send("will 'molecular control'")
</script>
											<command></command>
											<packageName></packageName>
											<regex>^mc$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>9th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Psychic Crush</name>
											<script>if matches[2] then send("will 'psychic crush' " .. matches[2])
else
	send("will 'psychic crush'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^pc(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Ether Warp</name>
											<script>if matches[2] then send("will 'ether warp' " .. matches[2])
else
	echo("'--== Specify target for jump ==--'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ew(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>10th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Death Field</name>
											<script>if matches[2] then send("will 'death field' " .. matches[2])
else
	send("will 'death field'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^df(?: (.+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Wormhole</name>
											<script>if matches[2] then send("will 'wormhole' " .. matches[2])
else
	send("will 'wormhole'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^whf(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>11th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Biofeedback</name>
											<script>send("will 'biofeedback'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^bio(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>12th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Enrage</name>
											<script>if matches[2] then send("will 'enrage' " .. matches[2])
else
	send("will 'enrage'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^enr(?: (.+))?$</regex>
										</Alias>
									</AliasGroup>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>Psi Spell Up</name>
									<script>CheckSpells = {"fly", "adrenaline control", "enhance strength", "enhance dexterity", "enhance constitution", "enhance agility", "flesh armor", "energy containment", "aura sight", "biofeedback", "tower of iron will", "intellect fortress", "inertial barrier", "displacement"}
CheckSpellsAlias = {"fly", "ac", "str", "dex", "con", "agi", "fa", "ec", "as", "bio", "toiw", "if", "ib", "di"}

--- Loop through active to find missing spells
cecho("&lt;cyan&gt;&lt;=================================== Spell Up Activated\n")

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v.." is active\n")
	else expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)])
	end
end</script>
									<command></command>
									<packageName></packageName>
									<regex>^su$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Meditate</name>
									<script>send("exp;rest;med;blood")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Summoner</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Followers</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers</name>
										<script>send("order followers " .. matches[2])
</script>
										<command></command>
										<packageName></packageName>
										<regex>^of (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Bash</name>
										<script>if matches[2] then send("order followers bash " .. matches[2])
else
	send("order followers bash")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofb (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Backstab</name>
										<script>if matches[2] then
	send("order followers bac " .. matches[2])
	Target = matches[2]
	echo ("======================================== Target set to: " .. Target .. "\n")
else
	send("order followers bac")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^b (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Get</name>
										<script>send("order followers get " .. matches[2])
</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofg (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Fist</name>
										<script>--^f(\s([\w\.]+))?$
if matches[2] then send("order followers cast 'Bigbys Clenched Fist' ".. matches[2])
else
	send("order followers cast 'Bigbys Clenched Fist' ")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^f(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Kill</name>
										<script>if matches[2] then
	send("order followers kill " .. matches[2])
	Target = matches[2]
	echo ("======================================== Target set to: " .. Target .. "\n")
else
	send("order followers kill")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofk (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Haste</name>
										<script>if matches[2] then send("order followers cast 'Haste' " .. matches[2])
else
	send("order followers cast 'Haste' self")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofh(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Detect Invis</name>
										<script>--^ofdi (.*)$
if matches[2] then send("order followers cast 'Detect Invis' " .. matches[2])
else
	send("order followers cast 'Detect Invis' self")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofdi (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Cast</name>
										<script>if matches[2] then send("order followers cast '"..matches[2].."' Drev")
else
	send("order followers cast '"..matches[2].."' self")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofc(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Power Word Blind</name>
										<script>send("of cast 'power word blind' "..matches[2])</script>
										<command></command>
										<packageName></packageName>
										<regex>^pwb (.*)$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Improved Invis</name>
										<script>--^ofdi (.*)$
if matches[2] then send("order followers cast 'improved Invis' " .. matches[2])
else
	send("order followers cast 'Improved Invis' "..myName)
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ofii(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers Fireball</name>
										<script>--^f(\s([\w\.]+))?$
if matches[2] then send("order followers cast 'Fireball' " .. matches[2])
else
	send("order followers cast 'Fireball' ")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fb(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Order Followers cast Electrical Execution</name>
										<script>--^f(\s([\w\.]+))?$
if matches[2] then send("order followers cast 'Electrical Execution' " .. matches[2])
else
	send("order followers cast 'Electrical Execution' ")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ee(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>SummonerSpells</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>1st Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Detect Magic</name>
											<script>--^ct(\s([\w\.]+))?$
mySpell = "Detect Magic"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^detm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Minor Creation</name>
											<script>if matches[2] then send("cast 'minor creation' " .. matches[2])
else
	send("cast 'minor creation'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^mc(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Preserve</name>
											<script>mySpell = "Preserve"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^pres(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Protection from Undead</name>
											<script>--^ct(\s([\w\.]+))?$
mySpell = "Protection from Undead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^protu(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Slashing Darkness</name>
											<script>mySpell = "Slashing Darkness"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^sd(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>2nd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Chill Touch</name>
											<script>--^ct(\s([\w\.]+))?$
mySpell = "Chill Touch"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^ct(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Protection from Living</name>
											<script>--^vt(\s([\w\.]+))?$
mySpell = "Protection from Living"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^protl(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Protection from Cold</name>
											<script>--^protc(\s([\w\.]+))?$
mySpell = "Protection from Cold"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^protc(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Sleep</name>
											<script>--^sleep(\s([\w\.]+))?$
mySpell = "Sleep"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^sleep(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Vampiric Touch</name>
											<script>--^vt(\s([\w\.]+))?$
mySpell = "Vampiric Touch"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^vt(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>3rd Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Animate Dead</name>
											<script>--^emb(\s([\w\.]+))?$
mySpell = "Animate Dead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ad(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Dispel Magic</name>
											<script>--^dm(\s([\w\.]+))?$
mySpell = "Dispel Magic"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end	</script>
											<command></command>
											<packageName></packageName>
											<regex>^dm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Embalm</name>
											<script>--^emb(\s([\w\.]+))?$
mySpell = "Embalm"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^emb(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Sense Follower</name>
											<script>--^sense(\s([\w\.]+))?$
mySpell = "Sense Follower"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end	</script>
											<command></command>
											<packageName></packageName>
											<regex>^sense(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>4th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Life Leech</name>
											<script>--^ll(\s([\w\.]+))?$
mySpell = "Life Leech"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^li(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Strength</name>
											<script>--^str(\s([\w\.]+))?$
mySpell = "Strength"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^str(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Unmaking</name>
											<script>--^unmake(\s([\w\.]+))?$
mySpell = "Unmaking"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^unmake(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Wither</name>
											<script>--^wi(\s([\w\.]+))?$
mySpell = "Wither"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^wi(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>5th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Coldshield</name>
											<script>--^colds(\s([\w\.]+))?$
mySpell = "Coldshield"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cs(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Fireshield</name>
											<script>--^fires(\s([\w\.]+))?$
mySpell = "Fireshield"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^fires(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Heal Undead</name>
											<script>--^hu(\s([\w\.]+))?$
mySpell = "Heal Undead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^hu(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Levitate</name>
											<script>--^lev(\s([\w\.]+))?$
mySpell = "Levitate"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^lev(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Raise Spectre</name>
											<script>--^rs(\s([\w\.]+))?$
mySpell = "Raise Spectre"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^rs(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Teleport</name>
											<script>--^tel(\s([\w\.]+))?$
mySpell = "Teleport"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^tel(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Concealment</name>
											<script>--^conc(\s([\w\.]+))?$
mySpell = "Concealment"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' "..myName)
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^conc(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>6th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Vitalize Undead</name>
											<script>--^vu(\s([\w\.]+))?$
mySpell = "Vitalize Undead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^vu(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Enervation</name>
											<script>--^en(\s([\w\.]+))?$
mySpell = "Enervation"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^en(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Cone of Cold</name>
											<script>--^ct(\s([\w\.]+))?$
mySpell = "Cone of Cold"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^cc(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>7th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Knock</name>
											<script>--^knock(\s([\w\.]+))?$
mySpell = "Knock"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^knock(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Protect Undead</name>
											<script>--^pu(\s([\w\.]+))?$
mySpell = "Protect Undead"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^pu(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Raise Wraith</name>
											<script>--^rw(\s([\w\.]+))?$
mySpell = "Raise Wraith"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^rw(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>8th Circle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Detect Invisibility</name>
											<script>--^di(\s([\w\.]+))?$
mySpell = "Detect Invisibility"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^di(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Improved Invisibility</name>
											<script>--^invis(\s([\w\.]+))?$
mySpell = "Improved Invisibility"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^invis(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Negative Concussion Blast</name>
											<script>--^ncb(\s([\w\.]+))?$
mySpell = "Negative Concussion Blast"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ncb(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Haste</name>
											<script>--^has(\s([\w\.]+))?$
mySpell = "Haste"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^has(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>9thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Energy Drain</name>
											<script>--^ncb(\s([\w\.]+))?$
mySpell = "Energy Drain"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ed(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>10thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Raise Lich</name>
											<script>--^rw(\s([\w\.]+))?$
mySpell = "Raise Lich"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' corpse")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^rl(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>Slash Casting</name>
									<script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(Summoner, matches[2], matches[3])</script>
									<command></command>
									<packageName></packageName>
									<regex>^\/(\w+)(\s([\w\.]+))?$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>SpellUp</name>
									<script>CheckSpells = {"protection from undead", "protection from cold", "protection from living", "sense follower", "strength", "levitate", "coldshield", "stone skin", "detect invisibility", "haste", "invisibility"}
CheckSpellsAlias = {"protu", "protc", "protl", "sense", "str", "lev", "cs", "pu", "di", "has", "invis"}


send("score")
--- Loop through active to find missing spells
cecho("\n&lt;cyan&gt;&lt;=================================== Spell Up Activated\n")

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v.." is active\n")
	else
		-- cecho("&lt;cyan&gt;&lt;===casting "..v"\n")
		expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)], false)
	end
end

send("score")</script>
									<command></command>
									<packageName></packageName>
									<regex>^su$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Rest Mem</name>
									<script>send("exp;rest;mem;med;blood")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Priests</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Druid</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>DruidSpells</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>1stCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Barkskin</name>
											<script>if matches[2] then send("cast 'barkskin' " .. matches[2])
else
	send("cast 'barkskin' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^bark(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Fortitude</name>
											<script>if matches[2] then send("cast 'fortitude' " .. matches[2])
else
	send("cast 'fortitude' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^fort(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Pulchritude</name>
											<script>if matches[2] then send("cast 'pulchritude' " .. matches[2])
else
	send("cast 'pulchritude' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^pul(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Animal Friendship</name>
											<script>if matches[2] then send("cast 'animal friendship' " .. matches[2])
else
	send("cast 'animal friendship'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^af(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>2ndCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Aid</name>
											<script>if matches[2] then send("cast 'aid' " .. matches[2])
else
	send("cast 'aid'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^aid(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Disease</name>
											<script>if matches[2] then send("cast 'disease' " .. matches[2])
else
	send("cast 'disease'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^dis(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Sticks To Snakes</name>
											<script>if matches[2] then send("cast 'sticks to snakes' " .. matches[2])
else
	send("cast 'sticks to snakes'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^ss(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>3rdCircle</name>
										<script>send("cast 'flame blade'")</script>
										<command></command>
										<packageName></packageName>
										<regex>^fblade$</regex>
										<Alias isActive="yes" isFolder="no">
											<name>FaerieFire</name>
											<script>if matches[2] then send("cast 'faerie fire' " .. matches[2])
else
	send("cast 'faerie fire'")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^ff(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Faerie Fog</name>
											<script>send("cast 'faerie fog'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^fog$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Flame Blade</name>
											<script>send("cast 'flame blade'")</script>
											<command></command>
											<packageName></packageName>
											<regex>^blade$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>ProtectionFromAnimals</name>
											<script>if matches[2] then send("cast 'protection from animals' " .. matches[2])
else
	send("cast 'protection from animals' me")
end
</script>
											<command></command>
											<packageName></packageName>
											<regex>^prota(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>4thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Create Spring</name>
											<script>if matches[2] then send("cast 'create spring' " .. matches[2])
else
	send("cast 'create spring'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cs(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Lightning Bolt</name>
											<script>if matches[2] then send("cast 'lightning bolt' " .. matches[2])
else
	send("cast 'lightning bolt'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^lb(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Poison</name>
											<script>if matches[2] then send("cast 'poison' " .. matches[2])
else
	send("cast 'poison'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^po(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Serendipity</name>
											<script>if matches[2] then send("cast 'serendipity' " .. matches[2])
else
	send("cast 'serendipity'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^luck$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>5thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Earthquake</name>
											<script>if matches[2] then send("cast 'earthquake' " .. matches[2])
else
	send("cast 'earthquake'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^qq(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Natures Touch</name>
											<script>if matches[2] then send("cast 'natures touch' " .. matches[2])
else
	send("cast 'natures touch' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^nt(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Tranquility</name>
											<script>if matches[2] then send("cast 'tranquility' " .. matches[2])
else
	send("cast 'tranquility'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^tr(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>6thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Earthen Maul</name>
											<script>if matches[2] then send("cast 'earthen maul' "..matches[2])
else
	send("cast 'earthen maul'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^em(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Endurance</name>
											<script>if matches[2] then send("cast 'endurance' "..matches[2])
else
	send("cast 'endurance'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^end(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Regeneration</name>
											<script>if matches[2] then send("cast 'regeneration' "..matches[2])
else
	send("cast 'regeneration' me")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^reg(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>7thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Call Lightning - Storm Druid</name>
											<script>if matches[2] then send("cast 'call lightning' "..matches[2])
else
	send("cast 'call lightning'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cl(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Cyclone</name>
											<script>if matches[2] then send("cast 'cyclone' " .. matches[2])
else
	send("cast 'cyclone'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^cy(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Dispel Magic</name>
											<script>if matches[2] then send("cast 'dispel magic' "..matches[2])
else
	send("cast 'dispel magic'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^dm(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Earth Spike - Storm Druid</name>
											<script>if matches[2] then send("cast 'earth spike' "..matches[2])
else
	send("cast 'earth spike'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^es(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Mielikki Vitality</name>
											<script>if matches[2] then send("cast 'Mielikki Vitality' " .. matches[2])
else
	send("cast 'Mielikki Vitality'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^mv(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>8thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Animal Vision</name>
											<script>if matches[2] then send("cast 'animal vision' " .. matches[2])
else
	send("cast 'animal vision'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^av(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Pass Without Trace</name>
											<script>if matches[2] then send("cast 'pass without trace' " .. matches[2])
else
	send("cast 'pass without trace'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^pwt(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Acid Stream - Storm Druid</name>
											<script>if matches[2] then send("cast 'acid stream' "..matches[2])
else
	send("cast 'acid stream'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^as(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>9thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Sunray</name>
											<script>if matches[2] then send("cast 'sunray' " .. matches[2])
else
	send("cast 'sunray'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^f(\s([\w\.]+))?$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Storm Shield - Storm Druid</name>
											<script>if matches[2] then send("cast 'storm shield' " .. matches[2])
else
	send("cast 'storm shield'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^storm$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Firestorm - Storm Druid</name>
											<script>if matches[2] then send("cast 'firestorm' " .. matches[2])
else
	send("cast 'firestorm'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^fs(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>10thCircle</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Moonwell</name>
											<script>if matches[2] then send("cast 'moonwell' " .. matches[2])
else
	send("cast 'moonwell'")
end</script>
											<command></command>
											<packageName></packageName>
											<regex>^well(\s([\w\.]+))?$</regex>
										</Alias>
									</AliasGroup>
									<AliasGroup isActive="yes" isFolder="yes">
										<name>SpellUpDruid</name>
										<script></script>
										<command></command>
										<packageName></packageName>
										<regex></regex>
										<Alias isActive="yes" isFolder="no">
											<name>Druid Spell Up Self</name>
											<script>CheckSpells = {"aid", "barkskin", "fortitude", "pulchritude", "animal vision", "pass without trace", "serendipity", "endurance", "regeneration", "protection from animals", "mielikki vitality", "storm shield"}
CheckSpellsAlias = {"aid", "bark", "fort", "pul", "av", "pwt", "luck", "end", "reg", "prota", "mv", "storm"}

--- Loop through active to find missing spells
cecho("&lt;cyan&gt;&lt;=================================== Spell Up Activated\n")

for i,v in ipairs(CheckSpells) do
	if myActiveSpells[v] then echo(v.." is active\n")
	else 
		-- cecho("&lt;cyan&gt;&lt;===casting "..v"\n")
		expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)], false)
	end
end

send("score")</script>
											<command></command>
											<packageName></packageName>
											<regex>^su$</regex>
										</Alias>
										<Alias isActive="yes" isFolder="no">
											<name>Druid Spell Up Others</name>
											<script>CheckSpells = {"aid", "barkskin", "fortitude", "pulchritude", "animal vision", "pass without trace", "serendipity", "endurance", "regeneration", "protection from animals", "mielikki vitality", "storm shield"}
CheckSpellsAlias = {"aid", "bark", "fort", "pul", "av", "pwt", "luck", "end", "reg", "prota", "mv", "storm"}
local spupTarget = matches[2]
--- Loop through active to find missing spells
cecho("&lt;cyan&gt;&lt;=================================== Spell Up Activated\n")

for i,v in ipairs(CheckSpells) do
	-- cecho("&lt;cyan&gt;&lt;===casting "..v"\n")
	spupSpell = CheckSpellsAlias[table.index_of(CheckSpells, v)].." "..spupTarget
--	echo(spupSpell.." "..spupTarget.."\n")
	expandAlias(spupSpell, false)
	--expandAlias(CheckSpellsAlias[table.index_of(CheckSpells, v)].. spupTarget, false)
end

send("score")</script>
											<command></command>
											<packageName></packageName>
											<regex>^spup (\w+)$</regex>
										</Alias>
									</AliasGroup>
									<Alias isActive="yes" isFolder="no">
										<name>Commune</name>
										<script>clearWindow("Left1")
send("commune;exp;blood")</script>
										<command></command>
										<packageName></packageName>
										<regex>^mem|pray|zz$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Slash Cast - Table Casting Druid Spells</name>
										<script>--^\/(\w+)(\s([\w\.]+))?$
castSpell(druid, matches[2], matches[3])</script>
										<command></command>
										<packageName></packageName>
										<regex>^\/(\w+)(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Cleric</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>1stCircle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Cause Light</name>
										<script>if matches[2] then send("cast 'cause light' " .. matches[2])
else
	send("cast 'cause light'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^cal(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>2ndCircle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Cause Serious</name>
										<script>if matches[2] then send("cast 'cause serious' " .. matches[2])
else
	send("cast 'cause serious'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^cas(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Blindness</name>
										<script>if matches[2] then send("cast 'blind' " .. matches[2])
else
	send("cast 'blind'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^cb(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>3rdCircle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Cause Critical</name>
										<script>if matches[2] then send("cast 'cause critical' " .. matches[2])
else
	send("cast 'cause critical'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^cac(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="no" isFolder="yes">
									<name>4thCircle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
								</AliasGroup>
								<AliasGroup isActive="no" isFolder="yes">
									<name>5thCircle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>6thCircle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Flame Strike</name>
										<script>if matches[2] then send("cast 'flame strike' " .. matches[2])
else
	send("cast 'flame strike'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fs(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Harm</name>
										<script>if matches[2] then send("cast 'harm' " .. matches[2])
else
	send("cast 'harm'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^hh(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>7thCircle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Full Heal</name>
										<script>if matches[2] then send("cast 'full heal' " .. matches[2])
else
	send("cast 'full heal'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fh(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="no" isFolder="yes">
									<name>8thCircle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
								</AliasGroup>
								<AliasGroup isActive="no" isFolder="yes">
									<name>9thCircle</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>Word</name>
									<script>send("cast 'word of recall'")</script>
									<command></command>
									<packageName></packageName>
									<regex>^qq$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Pray</name>
									<script>send("exp;rest;pray;med")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Shaman</name>
								<script>--[[
AnimalTotem = bear
ElementalTotem = obsidian
SpiritualTotem = quartz
]]--

--[[Elemental Spells
Ice Missile
Flameburst
Scalding Blast
Fire Ward
Cold Ward
Scorching Touch
Molten Spray
Earthen Grasp
Scathing Wind
Corrosive Blast
Arieks Shattering Iceball
Earthen Rain
Etherportal
Gaseous Cloud
Greater Earthen Grasp
]]--

--[[Animal Spells
Wolfspeed
Pythonsting
Snailspeed
Molevision
Pantherspeed
Mousestrength
Summon Beast
Hawkvision
Bearstrength
Shrewtamness
Lionrage
Elephantstrength
Ravenflight
Greater Pythonsting
Greater Ravenflight
]]--


--[[Spiritual Spells
Spirit Armor
Transfer Wellness
Lesser Mending
Reveal Spirit Essence
Purify Spirit
Mending
Soul Disturbance
Malison
Sense Spirit
Protection from Animals
Wellness
Greater Mending
Spirit Anguish
Spirit Sight
Greater Soul Disturbance
Spirit Ward
Spirit Jump
Reveal True Form
Greater Spirit Ward
Greater Spirit Sight
Greater Spirit Anguish
]]--

--[[
Alias Name:
Pattern: ^sa(?: (.+))?$
Code:
mySpell = "Spirit Armor"
if myTotem == SpiritualTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end
]]--</script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>RestMemMed</name>
									<script>send ("exp;blood;rest;mem;med")</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz$</regex>
								</Alias>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Animal Sphere</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>WolfSpeed</name>
										<script>mySpell = "Wolfspeed"
if myTotem == AnimalTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..AnimalTotem)
	myTotem = AnimalTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end	</script>
										<command></command>
										<packageName></packageName>
										<regex>^wolf(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>PantherSpeed</name>
										<script>mySpell = "Pantherspeed"
if myTotem == AnimalTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..AnimalTotem)
	myTotem = AnimalTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end	</script>
										<command></command>
										<packageName></packageName>
										<regex>^panther(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SummonBeast</name>
										<script>mySpell = "Summon Beast"
if myTotem == AnimalTotem then
	send("cast '"..mySpell.."'")
else
	send("rem "..myTotem)
	send("hold "..AnimalTotem)
	myTotem = AnimalTotem
	send("cast '"..mySpell.."'")
end	</script>
										<command></command>
										<packageName></packageName>
										<regex>^beast(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Elemental Sphere</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>FlameBurst</name>
										<script>mySpell = "Flameburst"
if myTotem == ElementalTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
else
	send("rem "..myTotem)
	send("hold "..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fb(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>ScaldingBlast</name>
										<script>mySpell = "Scalding blast"
if myTotem == ElementalTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
else
	send("rem "..myTotem)
	send("hold "..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^sb(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>ScorchingTouch</name>
										<script>mySpell = "Scorching touch"
if myTotem == ElementalTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
else
	send("rem "..myTotem)
	send("hold "..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^sct(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>MoltenSpray</name>
										<script>mySpell = "Molten spray"
if myTotem == ElementalTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
else
	send("rem "..myTotem)
	send("hold "..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ms(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>ColdWard</name>
										<script>mySpell = "Cold Ward"
if myTotem == ElementalTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^cw(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>FireWard</name>
										<script>mySpell = "Fire Ward"
if myTotem == ElementalTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fw(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>ElementalAffinity</name>
										<script>mySpell = "Elemental Affinity"
if myTotem == ElementalTotem then
	send("cast '"..mySpell.."'")
else
	send("rem "..myTotem)
	send("hold "..ElementalTotem)
	myTotem = ElementalTotem
	send("cast '"..mySpell.."'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ea(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>IceMissile</name>
										<script>mySpell = "Ice Missile"
if myTotem == ElementalTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
else
	send("rem "..myTotem)
	send("hold "..ElementalTotem)
	myTotem = ElementalTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."'")
	end
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^im(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Spiritual Sphere</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>SpiritArmor</name>
										<script>mySpell = "Spirit Armor"
if myTotem == SpiritualTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end	</script>
										<command></command>
										<packageName></packageName>
										<regex>^sa(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Mending</name>
										<script>mySpell = "Mending"
if myTotem == SpiritualTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end
</script>
										<command></command>
										<packageName></packageName>
										<regex>^cc(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>test</name>
										<script>--Alias Name:SpiritArmor
--Pattern: ^sa(?: (.+))?$

--Code--
mySpell = "Spirit Armor"
if myTotem == SpiritualTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^testsa(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>GreaterMending</name>
										<script>mySpell = "Greater Mending"
if myTotem == SpiritualTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ch(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SpiritWard</name>
										<script>mySpell = "Spirit Ward"
if myTotem == SpiritualTotem then
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
else
	send("rem "..myTotem)
	send("hold "..SpiritualTotem)
	myTotem = SpiritualTotem
	if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
		else
			send("cast '"..mySpell.."' me")
	end
end	</script>
										<command></command>
										<packageName></packageName>
										<regex>^sward(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Rogues</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Mercenary</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Bard</name>
								<script>--Bard skills
--=========================================
--The following is a list of all skills and spells available of the Bard class.
--
--==Skills==
--; 1st level: 	 1h piercing, Awareness, Backstab, Bandage, Carve, Climb, Dodge, Double Attack, Fishing, Hide, Meditate, Mine, Mount, Parry, Quick Chant, Retreat, Scribe, Shield Block, Sneak, Swim
--; 10th level:  Sorcerous Spell Knowledge, Appraise, Lore
--; 15th level:  Listen
--
--==Instrument Skills==
--; 5th level:   Drums, Flute, Harp, Horn, Lyre, Mandolin
--
--==Spells==
--; 2nd circle:  Mirror Image
--; 3rd circle:  Magic Missile
--; 4th circle:  Burning Hands, Minor Creation
--; 5th circle:  Concealment
--; 6th circle:  Dispel Magic, Infravision, Lightning Bolt, Ray of Enfeeblement
--; 7th circle:  Dimension Door, Fireball, Slowness
--; 8th circle:  Bigbys Clenched Fist
--; 9th circle:  Feeblemind
--; 10th circle: Detect Invisibility 
--; 11th circle: Rope Trick
--; 12th circle: Enlarge, Sirens Song
--
--==Songs==
--; 6th level:   Song of Sleep
--; 16th level:  Song of Calming, Song of Discord, Song of Harmony
--; 21st level:  Song of Cowardice, Song of Forgetfulness,  Song of Protection
--; 26th level:  Song of Peace, Song of Dissonance
--; 31st level:  Song of Dragons, Song of Flight
--; 36th level:  Song of Harming, Song of Healing
--; 41st level:  Song of Storms
--; 46th level:  Song of Chaos, Song of Heroism, Song of Revelation
--; 51st level:  Song of Charming</script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>BardSongs</name>
									<script>--Bard Songs
--6th level:      song of sleep (Flute)
--16th level:     song of calming (Harp)
--                song of discord (Flute}
--                song of harmony (Flute)
--21st level:     song of protection (Horn)
--               song of forgetfulness (Mandolin)
--                song of cowardice (Drums)
--26th level:     song of peace (Harp)
--                song of dissonance (Horn)
--31st level:     song of flight (Horn)
--                song of dragons (Horn)
--36th level:     song of healing (Lyre)
--                song of harming (Lyre)
--41st level:     song of storms (Drums)
--46th level:     song of heroism (Drums)
--                song of revelation (Mandolin)
--                song of chaos (Drums)
--51st level:     song of charming (Flute)

</script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfSleep</name>
										<script>if myInstrument == "flute" then send("play sleep")
	mySong = "sleep"
else
	send("rem "..myInstrument)
	send("hold flute")
	myInstrument = "flute"
	mySong = "sleep"
	send("play sleep")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^psleep|^ps$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfDiscord</name>
										<script>if myInstrument == "flute" then send("play discord")
	mySong = "discord"
else
	send("rem "..myInstrument)
	send("hold flute")
	myInstrument = "flute"
	mySong = "discord"
	send("play discord")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pdisc$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfHarmony</name>
										<script>if myInstrument == "flute" then send("play harmony")
	mySong = "harmony"
else
	send("rem "..myInstrument)
	send("hold flute")
	myInstrument = "flute"
	mySong = "harmony"
	send("play harmony")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pharmony$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfProtection</name>
										<script>if myInstrument == "horn" then send("play protection")
	mySong = "protection"
else
	send("rem "..myInstrument)
	send("hold horn")
	myInstrument = "horn"
	mySong = "protection"
	send("play protection")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pprot$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfCalming</name>
										<script>if myInstrument == "harp" then send("play calming")
	mySong = "calming"
else
	send("rem "..myInstrument)
	send("hold harp")
	myInstrument = "harp"
	mySong = "calming"
	send("play calming")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pcalm$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfForgetfulness</name>
										<script>if myInstrument == "mandolin" then send("play forgetfulness")
	mySong = "forgetfulness"
else
	send("rem "..myInstrument)
	send("hold mandolin")
	myInstrument = "mandolin"
	mySong = "forgetfulness"
	send("play forgetfulness")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pforg$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongofCowardice</name>
										<script>if myInstrument == "drum" then send("play cowardice")
	mySong = "cowardice"
else
	send("rem "..myInstrument)
	send("hold drum")
	myInstrument = "drum"
	mySong = "cowardice"
	send("play cowardice")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pcow$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfHealing</name>
										<script>if myInstrument == "lyre" then send("play healing")
	mySong = "healing"
else
	send("rem "..myInstrument)
	send("hold lyre")
	myInstrument = "lyre"
	mySong = "healing"
	send("play healing")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pheal$|^ph$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfFlight</name>
										<script>if myInstrument == "horn" then send("play flight")
	mySong = "flight"
else
	send("rem "..myInstrument)
	send("hold horn")
	myInstrument = "horn"
	mySong = "flight"
	send("play flight")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pfly$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfPeace</name>
										<script>if myInstrument == "harp" then send("play peace")
	mySong = "peace"
else
	send("rem "..myInstrument)
	send("hold harp")
	myInstrument = "harp"
	mySong = "peace"
	send("play peace")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ppeace$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfDissonance</name>
										<script>if myInstrument == "horn" then send("play dissonance")
	mySong = "dissonance"
else
	send("rem "..myInstrument)
	send("hold horn")
	myInstrument = "horn"
	mySong = "dissonance"
	send("play dissonance")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pdisso$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfDragons</name>
										<script>if myInstrument == "horn" then send("play dragons")
	mySong = "dragons"
else
	send("rem "..myInstrument)
	send("hold horn")
	myInstrument = "horn"
	mySong = "dragons"
	send("play dragons")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pdrag$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfHarming</name>
										<script>if myInstrument == "lyre" then send("play harming")
	mySong = "harming"
else
	send("rem "..myInstrument)
	send("hold lyre")
	myInstrument = "lyre"
	mySong = "harming"
	send("play harming")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pharm$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfStorms</name>
										<script>if myInstrument == "drum" then send("play storms")
	mySong = "storms"
else
	send("rem "..myInstrument)
	send("hold drum")
	myInstrument = "drum"
	mySong = "storms"
	send("play storms")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pstorm$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfHeroism</name>
										<script>if myInstrument == "drum" then send("play heroism")
	mySong = "heroism"
else
	send("rem "..myInstrument)
	send("hold drum")
	myInstrument = "drum"
	mySong = "heroism"
	send("play heroism")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^phero$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfRevelation</name>
										<script>if myInstrument == "mandolin" then send("play revelation")
	mySong = "revelation"
else
	send("rem "..myInstrument)
	send("hold mandolin")
	myInstrument = "mandolin"
	mySong = "revelation"
	send("play revelation")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^prev$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfChaos</name>
										<script>if myInstrument == "drum" then send("play chaos")
	mySong = "chaos"
else
	send("rem "..myInstrument)
	send("hold drum")
	myInstrument = "drum"
	mySong = "chaos"
	send("play chaos")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pchaos$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>SongOfCharming</name>
										<script>if myInstrument == "flute" then send("play charming")
	mySong = "charming"
else
	send("rem "..myInstrument)
	send("hold flute")
	myInstrument = "flute"
	mySong = "charming"
	send("play charming")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^pcharm$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>BardSpells</name>
									<script>--==Spells==
--; 2nd circle:  Mirror Image
--; 3rd circle:  Magic Missile
--; 4th circle:  Burning Hands, Minor Creation
--; 5th circle:  Concealment
--; 6th circle:  Dispel Magic, Infravision, Lightning Bolt, Ray of Enfeeblement
--; 7th circle:  Dimension Door, Fireball, Slowness
--; 8th circle:  Bigbys Clenched Fist
--; 9th circle:  Feeblemind
--; 10th circle: Detect Invisibility 
--; 11th circle: Rope Trick
--; 12th circle: Enlarge, Sirens Song</script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>MagicMissile</name>
										<script>if matches[2] then send("cast 'magic missile' " .. matches[2])
else
	send("cast 'magic missile'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^mm(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>BurningHands</name>
										<script>if matches[2] then send("cast 'burning hands' " .. matches[2])
else
	send("cast 'burning hands'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^bh(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>LightningBolt</name>
										<script>if matches[2] then send("cast 'lightning bolt' " .. matches[2])
else
	send("cast 'lightning bolt'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^lb(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>RayOfEnfeeblement</name>
										<script>if matches[2] then send("cast 'ray of enfeeb' " .. matches[2])
else
	send("cast 'ray of enfeeb'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ray(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>bigbys clenched fist</name>
										<script>if matches[2] then send("cast 'bigbys clenched fist' " .. matches[2])
else
	send("cast 'bigbys clenched fist'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fist(\s([\w\.]+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Mirror Images</name>
										<script>send("cast 'mirror image'")
</script>
										<command></command>
										<packageName></packageName>
										<regex>^mi$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Concealment</name>
										<script>if matches[2] then send("cast 'concealment' " .. matches[2])
else
	send("cast 'concealment' self")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^conc(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Dimension Door</name>
										<script>if matches[2] then send("cast 'dimension door' " .. matches[2])
else
	cecho("&lt;cyan&gt;Need Target for 'Dimension Door'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^dim(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Minor Creation</name>
										<script>if matches[2] then send("cast 'minor creat' " .. matches[2])
else
	send("cast 'minor creat'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^mc(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Fist</name>
										<script>if matches[2] then send("cast 'bigby' " .. matches[2])
else
	send("cast 'bigby'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^f(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Fireball</name>
										<script>if matches[2] then send("cast 'fireball' " .. matches[2])
else
	send("cast 'fireball'")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^fb(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Detect Invisibility</name>
										<script>--^di(\s([\w\.]+))?$
mySpell = "Detect Invisibility"

if matches[2] then send("cast '"..mySpell.."' " .. matches[2])
	else
		send("cast '"..mySpell.."' self")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^di(\s([\w\.]+))?$</regex>
									</Alias>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>RestMemMed</name>
									<script>send ("exp;blood;rest;mem;med")
</script>
									<command></command>
									<packageName></packageName>
									<regex>^zz$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Stop Playing and Backstab</name>
									<script>send("play;rem flute;wield stiletto")</script>
									<command></command>
									<packageName></packageName>
									<regex>^stop$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>Rem Weapon Play Sleep</name>
									<script>send("rem stiletto;hold flute;play sleep")</script>
									<command></command>
									<packageName></packageName>
									<regex>^go$</regex>
								</Alias>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>BardSkills</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Appraise Item</name>
										<script>send("appraise " ..matches[2])</script>
										<command></command>
										<packageName></packageName>
										<regex>^ap(?: (.+))?$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Sneaky Strike</name>
										<script>if matches[2] then send("Strike " .. matches[2])
else
	send("Strike")
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^ss(?: (.+))?$</regex>
									</Alias>
								</AliasGroup>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>BardRiffs</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>Riff Protection</name>
										<script>send("Riff Protection")</script>
										<command></command>
										<packageName></packageName>
										<regex>^rp$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Riff Sleep</name>
										<script>send("Riff Sleep")</script>
										<command></command>
										<packageName></packageName>
										<regex>^rs$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Riff Healing</name>
										<script>send("Riff Healing")</script>
										<command></command>
										<packageName></packageName>
										<regex>^rh$</regex>
									</Alias>
									<Alias isActive="yes" isFolder="no">
										<name>Riff Dissonance</name>
										<script>send("Riff Dissonance")</script>
										<command></command>
										<packageName></packageName>
										<regex>^rdi$</regex>
									</Alias>
								</AliasGroup>
								<Alias isActive="yes" isFolder="no">
									<name>Make Book</name>
									<script>send("scribe mirror;scribe magic missile;scribe burning;scribe minor creation;scribe conceal;scribe dispel magic;scribe infravision;scribe lightning;scribe ray of enfeeb;scribe dimension;scribe fireball;scribe slowness")</script>
									<command></command>
									<packageName></packageName>
									<regex>^MakeBook$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="no" isFolder="yes">
								<name>Rogue</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>Backstab</name>
									<script>Target = string.trim(matches[2])
send ("backstab "..Target)
cecho ("&lt;cyan&gt;&lt;==================================================================== Target set to: "..Target.."\n")</script>
									<command></command>
									<packageName></packageName>
									<regex>^b(\s([\w\.]+))?$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>FleeBac</name>
									<script>if FleeBacSet == "True" then
	FleeBacSet = "False"
elseif FleeBacSet == "False" then
	FleeBacSet = "True"
end
cecho("&lt;cyan&gt;FleeBac set to: "..FleeBacSet.. "\n")
</script>
									<command></command>
									<packageName></packageName>
									<regex>^FleeBac$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>speedWalkRecorder</name>
						<script></script>
						<command></command>
						<packageName>speedWalkRecorder</packageName>
						<regex></regex>
						<Alias isActive="no" isFolder="no">
							<name>speedRecorder</name>
							<script>if matches[1] ~= "stopRecording" then 
  table.insert(sw.speedDir, matches[1])
  send(matches[1])
else
  disableAlias("speedRecorder")
  sw.speedWalks[sw.currentRouteName] = table.concat(sw.speedDir, ",")
  sw.speedDir = {}
end</script>
							<command></command>
							<packageName></packageName>
							<regex>.*</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>turn recorder on</name>
							<script>sw = sw or {}
sw.speedWalks = sw.speedWalks or {}
sw.currentRouteName = matches[2]
sw.speedDir = {}
remember("sw")
enableAlias("speedRecorder")</script>
							<command></command>
							<packageName></packageName>
							<regex>^speedrecord (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>speedwalk</name>
							<script>if sw.speedWalks[matches[2]] then
  local walkString = sw.speedWalks[matches[2]]
  speedwalk(walkString, false, 0.4)
else
  echo("\nI have no idea how to get to" .. matches[2] .. "!!!\n")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^swalk (\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>reverse walk</name>
							<script>if sw.speedWalks[matches[2]] then
  local walkString = sw.speedWalks[matches[2]]
  speedwalk(walkString, true, 0.4)
else
  echo("\nI have no idea how to get away from" .. matches[2] .. "!!!\n")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^rwalk (\w+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Paths</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Finn to Cottage</name>
							<script></script>
							<command>n;u;e;u;u;e;d;s;n;e;n;e;n;w;n;s;n</command>
							<packageName></packageName>
							<regex>^finn$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Ugta</name>
							<script></script>
							<command>s;s;e;e;s;s;e;e;e;e;s;s;s;s;s;e;s;e;s;e;s;s;s;s;w;s;s;s;s;w;w;w;s;s;w;w;w;w;s;s;s;s;s;w;s;w;w;w;s;w;s;w;s</command>
							<packageName></packageName>
							<regex>^Ugta$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>Charge</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex>^xx(\s([\w\.]+))?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>EQdatabase</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>findItem</name>
						<script>local mydb = db:get_database("durisdata")

results = db:fetch(mydb.stats, db:eq(mydb.stats.NAME, matches[2]))

for _, row in ipairs(results) do
  row.STATS = row.STATS or "N/A"	
  cecho("\n &lt;DodgerBlue&gt;Item:  &lt;khaki&gt;" .. row.NAME .."\n &lt;DodgerBlue&gt;Stats: &lt;khaki&gt;" .. row.STATS .. "\n &lt;DodgerBlue&gt;Zone:  &lt;khaki&gt;" .. row.LOCATION .."\n &lt;DodgerBlue&gt;Slot:  &lt;khaki&gt;" .. row.SLOT .."\n &lt;DodgerBlue&gt;IVal: &lt;khaki&gt;" .. row.ITEMVALUE)
end

--display(results)

if table.contains(Proc_Items, matches[2]) then 
   cecho("\n&lt;khaki&gt;Item has a &lt;DodgerBlue&gt;PROC&lt;khaki&gt;!\n")
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^dbt (.*)$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>Create Database</name>
						<script>local mydb = db:create("duris_data",
        {
                eqstats = {
                        vnum = 0,
                        type = "",
                        slot = "",
                        name = "",
                        location = "",
                        stats = ""
                }       })

echo("New Duris Equipment Stats Database created!")</script>
						<command></command>
						<packageName></packageName>
						<regex>^createDB$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>Add to DB</name>
						<script>mydb = db:get_database("duris_data")

db:add(mydb.eqstats,
	{vnum=16336, type= "WEAPON", slot= "Wield", name= "a bloody troll claw", location= "A Dark and Twisted Wood", stats= "5 HP,  2 Hitroll,  1D4  Damage,  -2 Wt, NOIDENTIFY"},
	{vnum=16330, type= "CONTAINER", slot= "Waist", name= "a blue canvas belt", location= "A Dark and Twisted Wood", stats= "1 Wt, Holds: 5"},
	{vnum=16326, type= "ARMOR", slot= "About", name= "a blue canvas cloak", location= "A Dark and Twisted Wood", stats= "-5 AC"})

echo("3 items added to table eqstats in the duris_data database")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^addDB$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>Show Database</name>
						<script>mydb = db:get_database("duris_data")


local results = db:fetch(mydb.eqstats,nil,{mydb.eqstats.location, mydb.eqstats.name}, true)
for k,v in pairs(results) do
	display(v.name .. " : " .. v.location .. " : " .. v.slot .. " : " .. v.stats)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^showDB$</regex>
					</Alias>
					<Alias isActive="no" isFolder="no">
						<name>test db</name>
						<script>db:create("duris", {stats={"Vnum", "TYPE", "SLOT", "NAME", "LOCATION", "STATS", "iLVL"}})</script>
						<command></command>
						<packageName></packageName>
						<regex>^makedb$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Ship Commands</name>
					<script>--[[
Ship commands
=========================================
Ship Commands
=========================================
== Commands at a Dock ==
* List Hull
* List Weapon
* List Equipment
* List Cargo
* Summon Ship
* Buy hull &lt;number&gt; {ANSI Name}
* Buy Weapon &lt;number&gt; &lt;fore/rear/port/starboard&gt;
* Buy Equipment &lt;number&gt;
* Buy Cargo &lt;number of crates&gt;
* Buy Contrband &lt;number of crates&gt;
* Sell &lt;slot number&gt;
* Sell Cargo
* Sell Contraband
* Repair all
* Repair &lt;armor/internal&gt; &lt;fore/rear/port/starboard/all&gt;
* Repair sail
* Repair weapon &lt;weapon number/all&gt;
* Reload &lt;weapon number/all&gt;
* Enter *.ship -or- Enter &lt;owner name&gt; -or- Enter *.&lt;shiptype&gt;
--
--
== Commands at a Ship's Bridge ==
--
* Look Ship/Status 
* Look Crew 
* Look Cargo 
* Look Weaponspec 
* Look Contacts 
* Look Tactical [&lt;x&gt; &lt;y&gt;] 
* Scan [&lt;id&gt;]
* Order Undock 
* Order Maneuver &lt;N/E/S/W&gt; 
* Order Heading &lt;N/E/S/W/NW/NE/SW/SE/heading&gt; 
* Order Speed &lt;speed&gt;: 
* Order Sail &lt;N/E/S/W/heading/off&gt; &lt;distance&gt;: 
* Order Anchor
* Order Jettison cargo/contraband [&lt;number of crates&gt;] 
* Order Salvage [&lt;number of crates&gt;] 
* Order Fly/Land 
* Order Signal &lt;id&gt; &lt;message&gt; 
* Get Coins/Money
* Disembark (only from the edge of a ship for large ships)
--
--
== Combat Commands ==
--
* Lock &lt;id&gt;/off 
* Look Sight/Weapon &lt;weapon number&gt; 
* Fire &lt;weapon number/fore/rear/port/starboard&gt; 
* Order Ram [off]
--]]
</script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Order Maneuver</name>
						<script>send("Order Maneuver " ..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^om(?: (.+))?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Toggle Ship Keys</name>
						<script>disableKey("WalkKeys")
enableKey("ShipKeys")
echo("Ship Keys Active")</script>
						<command></command>
						<packageName></packageName>
						<regex>shipk</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Order Undock</name>
						<script>send("Order undock")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ou$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Look Contacts</name>
						<script>send("Look Contacts")</script>
						<command></command>
						<packageName></packageName>
						<regex>^lc$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Look Tactical</name>
						<script>--Look Tactical [&lt;x&gt; &lt;y&gt;]
local myX = matches[2]
local myY = matches[3]
send("Look Tactical " ..myX.." " ..myY)</script>
						<command></command>
						<packageName></packageName>
						<regex>^lt (\d+) (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Look Weaponspec</name>
						<script>--Look Weaponspec

send("Look Weaponspec")</script>
						<command></command>
						<packageName></packageName>
						<regex>^lw$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Order Speed</name>
						<script>send("Order speed "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^os(?: (.+))?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Misc</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>TestJunk</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>TopMap</name>
							<script>echo("gw2_top_map", [[&lt;p style="font-size:8px"&gt;&lt;b&gt;&lt;center&gt;&lt;font color="red"&gt;This is the Top Map Container.&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] );</script>
							<command></command>
							<packageName></packageName>
							<regex>^TopMap$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>BotMap</name>
							<script>echo("gw2_bottom_map", [[&lt;p style="font-size:8px"&gt;&lt;b&gt;&lt;center&gt;&lt;font color="blue"&gt;This is the Bottom Map Container.&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] );</script>
							<command></command>
							<packageName></packageName>
							<regex>^BotMap$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>GaugeTest</name>
							<script>HEALTH(tonumber(matches[2]), tonumber(matches[3]))
-- MANA(0, 0)
-- ACTIONS(tonumber(matches[2]/2), tonumber(matches[3])/2)
</script>
							<command></command>
							<packageName></packageName>
							<regex>^GaugeTest (\d+) (\d+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>HideChat</name>
							<script>hideWindow("gw2_top_map")
showWindow("gw2_top_map")
echo("2 commands sent")</script>
							<command></command>
							<packageName></packageName>
							<regex>^HideChat$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>NewTest</name>
							<script>GUI.myMap = Geyser.Label:new({
  name = "GUI.myMap",
  x = "0", y = "0 ",
  width = 300,
  height = 300,
})
GUI.myMap:setStyleSheet(GUI.MapCSS:getCSS())
GUI.myMap:echo("&lt;center&gt;MyMap Box")

GUI.myMapMini = Geyser.UserWindow:new({
  name = "TestUserWindow",
  titleText ="My Test UserWindow", -- only available since Mudlet 4.8+
  x = "20%", y="20%",
  width="30%", height ="40%"
})

GUI.myMapMini:setStyleSheet(  
[[QDockWidget{
    border: 1px solid green;          /* UserWindow border style */
    font: bold 15pt "Arial";          /* Font of the titleBar */
    color: rgb(0,0,150);              /* Font color */
    }
    
    QDockWidget::title{ 
    background-color: rgb(0,255,150); /* TitleBar color */
    border: 2px solid red;            /* TitleBar border */
    border-radius: 2px;               /* TitleBar border radius */
    text-align: center;               /* alignment of the titleText */
    }
    ]])
</script>
							<command></command>
							<packageName></packageName>
							<regex>^zxc</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>TestTableCasting</name>
							<script>function castSpell(spell, target)
	if target then send("Cast "..druid[spell].." "..target)
	else send("Cast "..druid[spell])
	end
end
--function castSpell(spell, target)
--	send("Cast "..druid[spell].." "..target)
--	end

spell=matches[2]
target=matches[3]

print("match2="..spell)
print("match3="..target)

castSpell(spell, target)
--send("Cast "..druid[spell].." "..matches[2])
</script>
							<command></command>
							<packageName></packageName>
							<regex>^(cy)(?: (.+))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Loop through Active Spells</name>
							<script>for k,v in pairs(myActiveSpells) do
  echo(k.."   ("..v..")\n") -- k contains the internal tables
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^sss$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>testName</name>
							<script>
display(myName)
display(myTank)
display(myGroup)
display(rescueList)

addToSet(rescueList, "Drella")
addToSet(rescueList, "Ilshad")
addToSet(rescueList, "Istria")

local key = "Drella"

if setContains(rescueList, key) then
	send("rescue "..key)
end

display(setContains(rescueList, key))</script>
							<command></command>
							<packageName></packageName>
							<regex>testname</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>resetGUI</name>
							<script>resetProfile() </script>
							<command></command>
							<packageName></packageName>
							<regex>^resetGUI$</regex>
						</Alias>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>TestGui</name>
							<script>-- Test aliases for the GUI</script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>left</name>
								<script>darkward.LeftSideLabel:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^left$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>left1</name>
								<script>darkward.Left1:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^left1$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>left2</name>
								<script>darkward.Left2:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^left2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>left3</name>
								<script>darkward.Left3:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^left3$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>right</name>
								<script>darkward.RightBox:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^right$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>right1</name>
								<script>darkward.Right1:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^right1$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>right2</name>
								<script>darkward.Right2:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^right2$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>right3</name>
								<script>darkward.Right3:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^right3$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>SetBorders</name>
								<script>WindowWidth, WindowHeight = getMainWindowSize()

BorderLeft = (WindowWidth * .15)+5
BorderRight = (WindowWidth * .25)
BorderTop =  (WindowHeight * 0)
BorderBottom = (WindowHeight * .10)

setBorderLeft(BorderLeft)
setBorderRight(BorderRight)
setBorderTop(BorderTop)
setBorderBottom(BorderBottom)
</script>
								<command></command>
								<packageName></packageName>
								<regex>^fixgui$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>bottom</name>
								<script>darkward.BottomBox:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^bottom$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>bottom1</name>
								<script>darkward.Bottom1:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^bottom1$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>bottom2</name>
								<script>darkward.Bottom2:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^bottom$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>bottom3</name>
								<script>darkward.Bottom3:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^bottom3$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>bottom4</name>
								<script>darkward.Bottom4:flash()</script>
								<command></command>
								<packageName></packageName>
								<regex>^bottom4$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>TestHP</name>
								<script>local test=(150/100)*100
darkward.gauge1a:setValue(150,100)
</script>
								<command></command>
								<packageName></packageName>
								<regex>^testhp$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>TestGauges</name>
								<script>hp = math.random(1,100)
ma = math.random(1,100)
mv = math.random(1,100)

darkward.gauge1a:setValue(hp,100)
darkward.gauge2a:setValue(ma,100)
darkward.gauge3a:setValue(mv,100)

darkward.gauge1b:setValue(100,100,"&lt;left&gt;"..hp.."% Health&lt;/left&gt;")
darkward.gauge2b:setValue(100,100,"&lt;left&gt;"..ma.."% Mana&lt;/left&gt;")
darkward.gauge3b:setValue(100,100,"&lt;left&gt;"..mv.."% Moves&lt;/left&gt;")</script>
								<command></command>
								<packageName></packageName>
								<regex>^testg$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>HideWindow</name>
								<script>print(matches[2])
local myWindow = matches[2]
print("myWindow = "..myWindow) 

hideWindow(myWindow)
</script>
								<command></command>
								<packageName></packageName>
								<regex>^guihide(?: (.+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>ShowWindow</name>
								<script>print(matches[2])
local myWindow = matches[2]
print("myWindow = "..myWindow) 

showWindow(darkward.myWindow)</script>
								<command></command>
								<packageName></packageName>
								<regex>^guishow(?: (.+))?$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>testp</name>
								<script>cecho("Left2", "2nd CIRCLE:\n	sticks to snakes\n4th CIRCLE:\n	lightning bolt\n5th CIRCLE:\n	earthquake\n6th CIRCLE:\n	earthen maul\n7th CIRCLE:\n	call lightning\n	cyclone\n	earth spike\n8th CIRCLE:\n	acid stream\n9th CIRCLE:\n	firestorm\n	sunray\n10th CIRCLE:\n	creeping doom\n	hurricane\n11th CIRCLE:\n	blood to stone\n	elemental swarm\n	spike growth\n12th CIRCLE:\n	nova\n")</script>
								<command></command>
								<packageName></packageName>
								<regex>^testp$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>test tanking</name>
								<script>-- Terse Combat Prompt

cecho("&lt;cyan&gt;&lt;=================================== "..myName.." is my name.\n")
cecho("&lt;cyan&gt;&lt;=================================== "..matches[2].." is x.\n")
cecho("&lt;cyan&gt;&lt;=================================== "..myTank[x].." is mytank[x].\n")
local x = matches[2]

if table.contains(myTank, x) then
	send("glance "..x)
	else 
		cecho("&lt;cyan&gt;&lt;=================================== "..myTank.." is TANKING")
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^tt_tank(?: (.+))?$</regex>
							</Alias>
						</AliasGroup>
						<Alias isActive="no" isFolder="no">
							<name>Nz Time Tests</name>
							<script>StartTestTime=0
EndTestTime=0

TestVar = "Time Test"

StartTestTime = getTime(true, "hh:mm:ss:z")

if matches[2] then 
	for count=1, tonumber(matches[2]) do
	echo("get " ..TestVar.. " " .. count)
	end
end

EndTestTime = getTime(true, "hh:mm:ss:z")

echo("\nTesting complete for Local Variable Lookup")
echo("\nStart Test TIme = "..StartTestTime)
echo("\nEnd Test Time = "..EndTestTime)</script>
							<command></command>
							<packageName></packageName>
							<regex>^nz(?: (.+))?$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>test group junk</name>
							<script>cecho("&lt;DodgerBlue&gt;Group  Info:\n\n")
cecho(string.format("&lt;DodgerBlue&gt;%5s%% &lt;khaki&gt;%-16s&lt;DodgerBlue&gt;%5s/&lt;khaki&gt;%-5s\n", "PCT", "NAME", "HP", "MAX_HP"))
cecho("&lt;khaki&gt;-------------------------------------\n")
for k,v in pairs(testGroup) do
  local output = string.format("&lt;DodgerBlue&gt;%5s%% &lt;khaki&gt;%-16s&lt;DodgerBlue&gt;%5s / &lt;khaki&gt;%-5s\n", testGroup[k].PCT or "", testGroup[k].Name or "", testGroup[k].HP or "", testGroup[k].MAXHP or "")
  cecho(output)
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^tgj</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>NewGroupTesting</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>^ngt1$</name>
						<script>-- New Group Output
clearUserWindow("GUI.Box3Mini")


GUI.Box3Mini:cecho(string.format("\n&lt;green&gt;%4s  &lt;yellow&gt;%4s  &lt;khaki&gt;%-30s  %-10s  %-3s", "HP%", "Move", "Name", "Class", "Lvl"))
GUI.Box3Mini:cecho(string.format("\n&lt;green&gt;%4s  &lt;yellow&gt;%4s  &lt;khaki&gt;%-30s  %-10s  %-3s", "====", "====", "========================","==========", "==="))
for key in ipairs(testGroup) do
	CharName = testGroup[key].Name
	local pct = testGroup[key].PCT
	local MVpct = (testGroup[key].MV/testGroup[key].MAXMV)*100
	local HPcolor = "&lt;green&gt;"
	local MVcolor = "&lt;green&gt;"
--Set HPcolor
	if pct &lt; 100 and pct &gt; 91 then
		HPcolor= "&lt;DarkGoldenrod&gt;"
	elseif pct &lt; 91 and pct &gt; 75 then
 		HPcolor= "&lt;yellow&gt;"
	elseif pct &lt; 76 and pct &gt; 50 then
 		HPcolor= "&lt;magenta&gt;"
	elseif pct &lt; 51 and pct &gt; 33 then
		HPcolor= "&lt;magenta&gt;"
	elseif pct &lt; 34 and pct &gt; 15 then
 		HPcolor= "&lt;OrangeRed&gt;"
	elseif pct &lt; 16 and pct &gt; -500 then
		HPcolor= "&lt;red&gt;"
	end
--Set MVcolor
	if MVpct&lt; 100 and MVpct &gt; 91 then
		MVcolor= "&lt;DarkGoldenrod&gt;"
	elseif MVpct &lt; 91 and MVpct &gt; 75 then
 		MVcolor= "&lt;yellow&gt;"
	elseif MVpct &lt; 76 and MVpct &gt; 50 then
 		MVcolor= "&lt;magenta&gt;"
	elseif MVpct &lt; 51 and MVpct &gt; 33 then
		MVcolor= "&lt;magenta&gt;"
	elseif MVpct &lt; 34 and MVpct &gt; 15 then
 		MVcolor= "&lt;OrangeRed&gt;"
	elseif MVpct &lt; 16 and MVpct &gt; -500 then
		MVcolor= "&lt;red&gt;"
	end
--Build Group Display
	if string.findPattern(string.trim(CharName), " ") ~= nil then
		GUI.Box3Mini:cecho(string.format("\n"..HPcolor.."%4s  "..MVcolor.."%4s  &lt;white&gt;%-30s  %-10s", testGroup[key].PCT, testGroup[key].MV, string.cut(testGroup[key].Name, 30), "&lt;yellow&gt;Pet"))
	else
		CharClass = myWhoList[CharName].Class
		CharLevel = myWhoList[CharName].Level
		GUI.Box3Mini:cecho(string.format("\n"..HPcolor.."%4s  "..MVcolor.."%4s  &lt;white&gt;%-30s  %-10s  %-3s", testGroup[key].PCT, testGroup[key].MV, string.cut(testGroup[key].Name, 30), string.cut(CharClass, 10), CharLevel))
	end
end

</script>
						<command></command>
						<packageName></packageName>
						<regex>^ngt1$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^ngt2$</name>
						<script>
for i in ipairs(testGroup) do
	local v = testGroup[i].PCT
	local k = testGroup[i].Name
	if v &gt; 100 then
		v = 100
	end
	GUI["Group"..i]:setValue(v,100)
	GUI["Group"..i].front:cecho("&lt;black&gt;"..string.sub(k,1,13))
		if (v &gt;= 100) then
    		GUI.GaugeFrontCSS:set("background-color","#00FF00")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (v &gt;= 90) then
    		GUI.GaugeFrontCSS:set("background-color","#009900")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (v &gt;= 80) then
    		GUI.GaugeFrontCSS:set("background-color","#FFFF00")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (v &gt;= 70) then
    		GUI.GaugeFrontCSS:set("background-color","#999900")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (v &gt;= 60) then
   	 		GUI.GaugeFrontCSS:set("background-color","#FF00FF")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (v &gt;= 50) then
    		GUI.GaugeFrontCSS:set("background-color","#990099")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (v &gt;= 40) then
    		GUI.GaugeFrontCSS:set("background-color","#FF0000")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (v &gt;= 30) then
    		GUI.GaugeFrontCSS:set("background-color","#FF0000")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		elseif (v &gt;= 20) then
    		GUI.GaugeFrontCSS:set("background-color","#990000")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		else
    		GUI.GaugeFrontCSS:set("background-color","#990000")
			GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		end
	GUI["Group"..i].front:setClickCallback("heal_bot", k)
	i = i+1
end


for z=#testGroup+1,25 do
GUI.GaugeFrontCSS:set("background-color","black")
GUI["Group"..z].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI["Group"..z]:setValue(100,100)
GUI["Group"..z].front:echo([[&lt;span style = "color: black"&gt;___&lt;/span&gt;]])
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^ngt2$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^ngt3$</name>
						<script>updateHealGrid()
echo("\nUpdating HealGrid")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ngt3$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^ngt4$</name>
						<script>updateGroupDisplay()
updateHealGrid()
echo("\nUpdating Group Display")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ngt4$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>HealBot Aliases</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>HealBot Hide</name>
						<script>GUI.Bottom2:hide()</script>
						<command></command>
						<packageName></packageName>
						<regex>^HHH$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>HealBot Show</name>
						<script>GUI.Bottom2:show()</script>
						<command></command>
						<packageName></packageName>
						<regex>^SHB$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Spell One</name>
						<script>spell1 = matches[2]
echo("GUI.SpellIcon1", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
</script>
						<command></command>
						<packageName></packageName>
						<regex>^spell1 (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Spell Two</name>
						<script>spell2 = matches[2]
echo("GUI.SpellIcon2", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
</script>
						<command></command>
						<packageName></packageName>
						<regex>^spell2 (.*)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Spell Three</name>
						<script>spell3 = matches[2]
echo("GUI.SpellIcon3", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
</script>
						<command></command>
						<packageName></packageName>
						<regex>^spell3 (.*)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Tabbed Chat</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Toggle blinking (temporary change)</name>
						<script>if demonnic.chat.config.blink then
  demonnic.chat.config.blink = false
  demonnic.chat.tabsToBlink = {}
  demonnic:echo("Blinking temporarily turned &lt;red&gt;off&lt;grey&gt;. It will reset if you edit your tabbed chat configuration, or close and reopen mudlet. To make it permanent, change demonnic.chat.config.blink to false in \"Demonnic-&gt;Tabbed Chat-&gt;Configuration options\" under scripts\n")
else
  demonnic.chat.config.blink = true
  demonnic.chat:blink()
  demonnic:echo("Blinking temporarily turned &lt;red&gt;on&lt;grey&gt;. It will reset if you edit your tabbed chat configuration, or close and reopen mudlet. To make it permanent, change demonnic.chat.config.blink to true in \"Demonnic-&gt;Tabbed Chat-&gt;Configuration options\" under scripts\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^dblink$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>fixChat</name>
						<script>local currentsetting = demonnic.chat.config.location
local newsetting = ""
if currentsetting == "topright" then 
  newsetting = "bottomleft" 
elseif currentsetting == "topleft" then
  newsetting = "bottomright"
elseif currentsetting == "bottomleft" then
  newsetting = "topright"
elseif currentsetting == "bottomright" then
  newsetting = "topleft"
end

demonnic.chat.config.location = newsetting
demonnic.chat:create()
demonnic.chat.config.location = currentsetting
demonnic.chat:create()</script>
						<command></command>
						<packageName></packageName>
						<regex>^fixchat$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>testjunk1</name>
					<script>if isActive(myClass, "alias") then 
	disableAlias(myClass)
	cecho("&lt;red&gt;Alias Set Deactivated")
else
	enableAlias(myClass)
	cecho("&lt;cyan&gt;Alias Set Activated")
end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^testjunk1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Locker List</name>
					<script>echo("Locker Access List\n------------------\nidor\nidoru\nidora\nkartog\nrhalath\nrhal\ndrella\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^locker$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^jj$</name>
					<script>--string.format ("%5s", "hi")          --&gt; '   hi'
--string.format ("%-5s", "hi")         --&gt; 'hi   '
--string.format ("%.4s", "Nick Gammon")--&gt; 'Nick'  (truncation)
--string.format ("%9.4s", "John Smith")--&gt; '     John'
--string.format ("%.f", 4.4)           --&gt; '4'  (precision of zero)
--string.format ("%.f", 4.5)           --&gt; '5'  (rounding)
--string.format ("%#.f", 4.4)          --&gt; '4.' (decimal place forced)

--s = string.format("%3s %-5s", 98, "Drevarr")
--t = string.format("%-5s", "Drevarr")


--echo(s)

local tab = {
"Warrior",
"Mercenary",
"Rogue",
"Bard",
"Conjurer",
"Sorcerer",
"Psionicist",
"Druid",
"Cleric",
"Ethermancer",
"Monk",
"Paladin",
"Anti-Paladin",
"Berserker",
"Ranger",
"Reaver",
"Illusionist",
"Alchemist",
"Shaman",
"Necromancer",
"Dreadlord",
"Avenger"
}

for k,v in pairs(Epic_Skills) do
	send("help " ..v)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^jj(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>db1</name>
					<script>--stats={"VNUM", "TYPE", "SLOT", "NAME", "LOCATION", "LOCATIONLOWERCASE", "ITEMVALUE", "STATS"}
mydb = db:create("duris_data",
    {
            stats = {
					VNUM = 0,
                    TYPE = "",
                    SLOT = "",
                    NAME = "",
                    LOCATION = "",
                    LOCATIONLOWERCASE = "",
					    ITEMVALUE = 0,
                    STATS = "",
			}       })


--db:add(mydb.stats, {VNUM=999,TYPE="TEST",SLOT="TEST",NAME = "TEST",LOCATION = "TEST",LOCATIONLOWERCASE = "test",ITEMVALUE = 999,STATS = "TEST"})


--results = db:fetch(mydb.stats,nil,{mydb.stats.ITEMVALUE, mydb.stats.NAME}, true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^xx$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>MyGroupDisplay</name>
					<script>cecho("&lt;DodgerBlue&gt;Name \t&lt;khaki&gt;HP PCT\n")
for k,v in ipairs(testGroup) do
	cecho("&lt;khaki&gt;"..testGroup[k].Name.."\t &lt;DodgerBlue&gt;"..testGroup[k].PCT.."\n")
end

</script>
					<command></command>
					<packageName></packageName>
					<regex>^mg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>echotest</name>
					<script>local str = ""
for _, row in ipairs(results) do
	row.STATS = row.STATS or "NONE"
	str = str .. "\n Item: " .. row.NAME .."\nStats: " .. row.STATS .. "\nZone: " .. row.LOCATION .."\nSlot: " .. row.SLOT .."\nIVal: " .. row.ITEMVALUE
end
echoLink("I", [[]], str)



</script>
					<command></command>
					<packageName></packageName>
					<regex>^echotest$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>BloodLust Time</name>
					<script>----- Gold Liquid in a Glass tube
local fg_goldLiquid = [[background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1, 
stop:.0 rgba(253,206,65,255), stop:.22 rgba(225,155,52,255),
stop:.34 rgba(239,232,162,255), stop:.40 rgba(254,240,198,255),
stop:.41 rgba(238,216,209,255), stop:.45 rgba(238,216,209,255),
stop:.52 rgba(229,185,148,255), stop:.67 rgba(203,116,41,255),
stop:.79 rgba(172,60,26,255), stop:.94 rgba(89,45,35,255),
stop:.99 rgba(254,215,65,255));
border: 1px solid rgba(89,45,35,100); 
border-top:4px groove rgba(98,78,98,198);
border-right: 4px outset rgba(91,91,91,171);   
    border-radius: 5;
    padding: 3px;
]]

local fg_red1 = [[background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1, 
stop: 0 #efb6b6, stop: 0.1 #e06d6d, stop: 0.49 #cc0c0c, stop: 0.5 #b70a0a, stop: 1 #240249);
    border-top: 1px black solid;
    border-left: 2px black solid;
    border-bottom: 2px black solid;
    border-radius: 5;
	 padding: 3px;
]]

local bg_clearTube2 = [[background-color: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 1, 
stop:.0 rgba(0,137,137,158), stop:.4 rgba(137,137,137,181),
stop:.9 rgba(152,156,159,212), stop:.28 rgba(210,230,241,97),
stop:.37 rgba(255,255,255,80), stop:.49 rgba(165,206,227,100),
stop:.50 rgba(75,75,75,200), stop:.61 rgba(90,90,90,200),
stop:.62 rgba(91,91,91,171), stop:.70 rgba(81,81,81,191),
stop:.82 rgba(45,45,45,222), stop:.89 rgba(68,68,68,240),
stop:.95 rgba(81,81,81,252), stop:.96 rgba(61,85,85,255),
stop:.99 rgba(0,98,98,153), stop: 1 rgba(0,98,98,117)); 
   
    border-top:3px groove rgba(98,78,98,198);
    border-left: 3px double black;
    border-bottom:2px ridge rgba(78,98,98,198);
    border-right: 3px outset rgba(91,91,91,171);
    border-radius: 5;
    padding: 3px;
 ]]
local fg_clearTube2 = [[ background-color: QLinearGradient(x1: 0, y1: 1, x2: 0, y2: 0, 
stop: 0 rgba(2,2,2,255), stop: .02 rgba(29,29,29,255),stop: .19 rgba(255,255,255,166), stop: .37 rgba(2,2,2,69), 
stop: .50 rgba(2,2,2,0), stop: .78 rgba(2,2,2,107), stop: .89 rgba(2,2,2,77), stop: .94 rgba(80,113,117,61), 
stop: .99 rgba(158,224,232,255), stop: 1 rgba(173,246,255,255));
    border-top:3px groove rgba(98,78,98,198);
    border-left: 3px double black;
    border-bottom:2px groove rgba(78,98,98,198);
    border-right: 3px outset rgba(91,91,91,171);   
    border-radius: 5;
    padding: 3px;
 ]]
local bg_transparent_background_no_bar = [[background-color: transparent;
    border-width: 2px;
    border-color: transparent;
    border-style: solid;
    border-radius: 5;
    padding: 3px;
]]


demonnic.anitimer:new("BloodLust", {x="2%", y="15%", height = "70%", width = "96%", color="red"}, 300, {container = GUI.BloodLustIcon, showTime = true, timerCaption = "Bloodlust",cssFront = fg_red1, cssBack = bg_clearTube2})


GUI.BloodLustGlass = Geyser.Gauge:new({name="BloodLustGlass", x="2%",y="15%",width="96%", height="70%", fontSize = 12,  },GUI.BloodLustIcon)
GUI.BloodLustGlass.front:setStyleSheet(fg_clearTube2)
GUI.BloodLustGlass.back:setStyleSheet(bg_transparent_background_no_bar)
GUI.BloodLustGlass.text:setStyleSheet("Blood Lust")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^bloodlust$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>BloodLust Timer Off</name>
					<script>print("Turning Timer off")
demonnic.anitimer:stop("BloodLust")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^BLT$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^JELsort$</name>
					<script>for k,v in spairs(myActiveSpells, function(t,a,b) return t[b] &lt; t[a] end) do
    print(k,v)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^JELsort$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>RaceHelp</name>
					<script>for k,v in pairs(RaceList) do
	send("help " ..v,false)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^RaceHelp$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>AuctionLog</name>
					<script>send("Tog Pag")
startLogging(true)

for k,v in ipairs(myAuctionList) do
	send("auc info "..v, false)
end

send("Tog Pag")

send("say -=-=Auction Logging Complete=-=-")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^AuctionLog$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>deleteOldProfiles</name>
			<packageName>deleteOldProfiles</packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>deleteOldProfiles script</name>
				<packageName></packageName>
				<script>function deleteOldProfiles(keepdays_arg, delete_maps)

--[[
	Deletes old profiles/maps in the "current"/"map" folders of the Mudlet home directory.
	The following files are NOT deleted:
	- Files newer than the amount of days specified as an argument to deleteOldProfiles(), or 31 days if not specified.	
	- One file for every month before that. Specifically: The first available file of every month prior to this.
	Setting the second argument to true will delete maps instead of profiles. (e.g. deleteOldProfiles(10, true))
--]]

	local keepdays = tonumber(keepdays_arg) or 31
	local profile_table = {}
	local used_last_mod_months = {}
	local slash = (string.char(getMudletHomeDir():byte()) == "/") and "/" or "\\"
	local dirpath = getMudletHomeDir()..slash..(delete_maps and "map" or "current")
	local delnum = 0

	-- Traverse the profiles folder and create a table of files:
	for filename in lfs.dir(dirpath) do
		if filename~="." and filename~=".." then
			profile_table[#profile_table+1] = {name = filename, last_mod = lfs.attributes(dirpath..slash..filename, "modification")}
		end
	end

	-- Sort the table according to last modification date from old to new:
	table.sort(profile_table, function (a,b) return a.last_mod &lt; b.last_mod end)

	echo(string.format("\nDeleting old %s. Files newer than %d days and one profile for every month before that will be kept.", delete_maps and "maps" or "profiles", keepdays))
	for i,v in ipairs(profile_table) do
		local days = math.floor(os.difftime(os.time(), v.last_mod)/86400)
		local last_mod_month = os.date("%Y/%m", v.last_mod)
		if days &gt; keepdays then
			-- For profiles older than X days, check if we already kept a table for this month:
			if not table.contains(used_last_mod_months, last_mod_month) then
				-- If not, do nothing and mark this month as "kept".
				used_last_mod_months[#used_last_mod_months+1] = last_mod_month
			else
				-- Otherwise remove the file:
				local success, errorstring = os.remove(dirpath..slash..v.name)
				if success then
					delnum = delnum + 1
				else
					cecho("\n&lt;red&gt;ERROR: "..errorstring)
				end
			end
		end
	end
	echo(string.format("\nDeletion complete. %d/%d files were removed successfully.", delnum, #profile_table))
end
</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>send-text-to-all-games</name>
			<packageName>send-text-to-all-games</packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>sysSendAllProfiles</name>
				<packageName></packageName>
				<script>function sysSendAllProfiles(_, text)
  expandAlias(text)
end</script>
				<eventHandlerList>
					<string>sysSendAllProfiles</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Duris_UI_Scripts</name>
			<packageName>Duris_UI_Scripts</packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>CSSman</name>
				<packageName>CSSman</packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>CSSMan</name>
					<packageName></packageName>
					<script>-- CSSMan by Vadi. Public domain.

CSSMan = {}
CSSMan.__index = CSSMan

function CSSMan.new(stylesheet)
  local obj  = { stylesheet = {} }
  setmetatable(obj,CSSMan)
  local trim = string.trim

  assert(type(stylesheet) == "string", "CSSMan.new: no stylesheet provided. A possible error is that you might have used CSSMan.new, not CSSMan:new")

  for line in stylesheet:gmatch("[^\r\n]+") do
    local attribute, value = line:match("^(.-):(.-);$")
    if attribute and value then
      attribute, value = trim(attribute), trim(value)
      obj.stylesheet[attribute] = value
    end
  end

  return obj
end

function CSSMan:set(key, value)
  self.stylesheet[key] = value
end

function CSSMan:get(key)
  return self.stylesheet[key]
end

function CSSMan:getCSS(key)
  local lines, concat = {}, table.concat
  for k,v in pairs(self.stylesheet) do lines[#lines+1] = concat({k,": ", v, ";"}) end
  return concat(lines, "\n")
end

function CSSMan:gettable()
  return self.stylesheet
end

function CSSMan:settable(tbl)
  assert(type(tbl) == "table", "CSSMan:settable: table expected, got "..type(tbl))

  self.stylesheet = tbl
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Header Functions</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Head Functions</name>
					<packageName></packageName>
					<script>	-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--myGeyserLabel:echo([[&lt;span style="color: white"&gt;Notice:&lt;span style="color: red"&gt; &lt;b&gt;OFF&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;]])
function toggle_loot()
	if lootOn == true then
		lootOn = false
		echo("GUI.Icon1", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;AutoLoot&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="Crimson"&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign("OFF", {width = "80", alignment = "center", cap = "[Autoloot]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
		echo("\n")
		cecho(calign("OFF", {width = "80", alignment = "center", cap = "[Autoloot]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
		echo("\n\n")
	else
		lootOn = true
		echo("GUI.Icon1", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;AutoLoot&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	
		cecho(calign("ON", {width = "80", alignment = "center", cap = "[Autoloot]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n")
		cecho(calign("ON", {width = "80", alignment = "center", cap = "[Autoloot]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n\n")
	end
end

function toggle_loot_type()
	if lootAll == true then
		lootAll = false
		LootVar = "coins"
		echo("GUI.Icon2", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;LootVar&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="gold"&gt;COINS&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign("COINS", {width = "80", alignment = "center", cap = "[LootVar]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;gold&gt;"}))
		echo("\n")
		cecho(calign("COINS", {width = "80", alignment = "center", cap = "[LootVar]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;gold&gt;"}))
		echo("\n\n")
	else
		lootAll = true
		LootVar = "all"
		echo("GUI.Icon2", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;LootVar&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ALL&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign("All", {width = "80", alignment = "center", cap = "[LootVar]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n")
		cecho(calign("All", {width = "80", alignment = "center", cap = "[LootVar]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n\n")
	end
end

function toggle_AutoId()
	if autoId == true then
		autoId = false
		disableTrigger("AutoIdBot")
		echo("GUI.Icon11", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;AutoId&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="Crimson"&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign("OFF", {width = "80", alignment = "center", cap = "[AutoID]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
		echo("\n")
		cecho(calign("OFF", {width = "80", alignment = "center", cap = "[AutoID]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
		echo("\n\n")
	else
		autoId = true
		enableTrigger("AutoIdBot")
		echo("GUI.Icon11", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;AutoId&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	
		cecho(calign("ON", {width = "80", alignment = "center", cap = "[AutoID]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n")
		cecho(calign("ON", {width = "80", alignment = "center", cap = "[AutoID]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n\n")
	end
end

function toggle_afk()
	if afkStatus == true then
		afkStatus = false
		disableTimer("AFK")
		echo("GUI.Icon12", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;AFK Status&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="red"&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign("OFF", {width = "80", alignment = "center", cap = "[AFK Status]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
		echo("\n")
		cecho(calign("OFF", {width = "80", alignment = "center", cap = "[AFK Status]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
		echo("\n\n")
	else
		afkStatus = true
		enableTimer("AFK")
		echo("GUI.Icon12", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;AFK Status&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign("ON", {width = "80", alignment = "center", cap = "[AFK Status]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n")
		cecho(calign("ON", {width = "80", alignment = "center", cap = "[AFK Status]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n\n")
	end
end

function toggle_healbot()
	if healbot_toggle == true then
		healbot_toggle = false
		GUI.Box2HealGrid:hide()
		echo("GUI.Icon9", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;HealGrid&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="Crimson"&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
		cecho(calign("OFF", {width = "80", alignment = "center", cap = "[HealGrid]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
		echo("\n")
		cecho(calign("OFF", {width = "80", alignment = "center", cap = "[HealGrid]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
		echo("\n\n")
	else
		healbot_toggle = true
		GUI.Box2HealGrid:show()
		echo("GUI.Icon9", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;HealGrid&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	
		cecho(calign("ON", {width = "80", alignment = "center", cap = "[HealGrid]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n")
		cecho(calign("ON", {width = "80", alignment = "center", cap = "[HealGrid]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		echo("\n\n")
	end
end

function spam_passwords()
		cecho(calign("Starting", {width = "80", alignment = "center", cap = "[Say Passwords]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
		send("say arrow;say hello;say hi;say junamezanolunaqzl;say rrakkma;say tayr-dryn;say auril;say kraang;say mortazoth;say carnage;say mantis;say lokpan;say pandora;say septimus;say bdkn;say sepulchre;say nothing;say kal-zerr;say i&amp;gt;|uub;say darlakanand;say thrym")
		cecho(calign("Finished", {width = "80", alignment = "center", cap = "[Say Passwords]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;DodgerBlue&gt;"}))
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>HealBot</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>GroupStuff</name>
					<packageName></packageName>
					<script>-- Define gauges for group members
----------------------------------
GUI.SpellToggles = Geyser.HBox:new({
  name = "GUI.SpellToggles",
  x = 0, y = 0,
  width = "100%",
  height = "10%",
},GUI.Box2HealGrid)
--GUI.Bottom2

GUI.GroupBox = Geyser.HBox:new({
  name = "GUI.GroupBox",
  x = 0, y = "10%",
  width = "100%",
  height = "18%",
},GUI.Box2HealGrid)

GUI.GroupBox2 = Geyser.HBox:new({
  name = "GUI.GroupBox2",
  x = 0, y = "28%",
  width = "100%",
  height = "18%",
},GUI.Box2HealGrid)

GUI.GroupBox3 = Geyser.HBox:new({
  name = "GUI.GroupBox3",
  x = 0, y = "46%",
  width = "100%",
  height = "18%",
},GUI.Box2HealGrid)

GUI.GroupBox4 = Geyser.HBox:new({
  name = "GUI.GroupBox4",
  x = 0, y = "64%",
  width = "100%",
  height = "18%",
},GUI.Box2HealGrid)

GUI.GroupBox5 = Geyser.HBox:new({
  name = "GUI.GroupBox5",
  x = 0, y = "82%",
  width = "100%",
  height = "18%",
},GUI.Box2HealGrid)

GUI.IconCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: gray;
  border-radius: 5px;
  margin: 5px;
  qproperty-wordWrap: true;
]])

-- Populate Groups
for i=1,5 do
GUI["Group"..i] = Geyser.Gauge:new({
  name = "GUI.Group"..i,
},GUI.GroupBox)
GUI["Group"..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","green")
GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI["Group"..i]:setValue(100,100)
GUI["Group"..i].front:echo([[&lt;span style = "color: black"&gt;_&lt;/span&gt;]]..i)
GUI["Group"..i].front:setClickCallback("on_bomb_press")
end


for i=6,10 do
GUI["Group"..i] = Geyser.Gauge:new({
  name = "GUI.Group"..i,
},GUI.GroupBox2)
GUI["Group"..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","green")
GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI["Group"..i]:setValue(100,100)
GUI["Group"..i].front:echo([[&lt;span style = "color: black"&gt;_&lt;/span&gt;]]..i)
GUI["Group"..i].front:setClickCallback("on_bomb_press")
end

for i=11,15 do
GUI["Group"..i] = Geyser.Gauge:new({
  name = "GUI.Group"..i,
},GUI.GroupBox3)
GUI["Group"..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","green")
GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI["Group"..i]:setValue(100,100)
GUI["Group"..i].front:echo([[&lt;span style = "color: black"&gt;_&lt;/span&gt;]]..i)
GUI["Group"..i].front:setClickCallback("on_bomb_press")
end

for i=16,20 do
GUI["Group"..i] = Geyser.Gauge:new({
  name = "GUI.Group"..i,
},GUI.GroupBox4)
GUI["Group"..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","green")
GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI["Group"..i]:setValue(100,100)
GUI["Group"..i].front:echo([[&lt;span style = "color: black"&gt;_&lt;/span&gt;]]..i)
GUI["Group"..i].front:setClickCallback("on_bomb_press")
end

for i=21,25 do
GUI["Group"..i] = Geyser.Gauge:new({
  name = "GUI.Group"..i,
},GUI.GroupBox5)
GUI["Group"..i].back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","green")
GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI["Group"..i]:setValue(100,100)
GUI["Group"..i].front:echo([[&lt;span style = "color: black"&gt;_&lt;/span&gt;]]..i)
GUI["Group"..i].front:setClickCallback("on_bomb_press")
end</script>
					<eventHandlerList />
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>HealBot Functions</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function on_bomb_press()
  echo("Set the on Click functions for healbot\n")
end

function heal_bot(index)
  	--send("cast '"..HealBot_Spell.."'")
	send("cast '"..HealBot_OnClick_Spell.."' "..index)
end
</script>
					<eventHandlerList />
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>HealBot Variables</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
HealBot_OnClick_Spell = "heal"

spell1 = "heal"
spell2 = "full heal"
spell3 = "vit"</script>
					<eventHandlerList />
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>HealBot Buttons</name>
					<packageName></packageName>
					<script>
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>HealBot Button Functions</name>
						<packageName></packageName>
						<script>-- HealBot SpellIcon 1
GUI.SpellIcon1:setClickCallback("toggle_Spell1")
echo("GUI.SpellIcon1", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )


function toggle_Spell1()
	HealBot_OnClick_Spell = spell1
	echo("GUI.SpellIcon1", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="Crimson"&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
	cecho(calign(spell1, {width = "80", alignment = "center", cap = "[Spell Set]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
	echo("\n")
	cecho(calign(spell1, {width = "80", alignment = "center", cap = "[Spell Set]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
	echo("\n\n")
	echo("GUI.SpellIcon1", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo("GUI.SpellIcon2", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo("GUI.SpellIcon3", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
end


-- HealBot SpellIcon 2
GUI.SpellIcon2:setClickCallback("toggle_Spell2")
echo("GUI.SpellIcon2", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )


function toggle_Spell2()
	HealBot_OnClick_Spell = spell2
	echo("GUI.SpellIcon2", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="Crimson"&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
	cecho(calign(spell2, {width = "80", alignment = "center", cap = "[Spell Set]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
	echo("\n")
	cecho(calign(spell2, {width = "80", alignment = "center", cap = "[Spell Set]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
	echo("\n\n")
	echo("GUI.SpellIcon1", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo("GUI.SpellIcon2", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo("GUI.SpellIcon3", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
end

-- HealBot SpellIcon 3
GUI.SpellIcon3:setClickCallback("toggle_Spell3")
echo("GUI.SpellIcon3", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )


function toggle_Spell3()
	HealBot_OnClick_Spell = spell3
	echo("GUI.SpellIcon3", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="Crimson"&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )
	cecho(calign(spell3, {width = "80", alignment = "center", cap = "[Spell Set]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
	echo("\n")
	cecho(calign(spell3, {width = "80", alignment = "center", cap = "[Spell Set]", mirror = false, spacer = "=", inside = false, capColor = "&lt;khaki&gt;", spacerColor = "&lt;khaki&gt;", textColor = "&lt;red&gt;"}))
	echo("\n\n")
	echo("GUI.SpellIcon1", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell1..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo("GUI.SpellIcon2", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;]]..spell2..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
	echo("GUI.SpellIcon3", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;]]..spell3..[[&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;]] )
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>HealBot Buttons</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

GUI.SpellIconCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  border-radius: 3px;
  margin: 3px;
  qproperty-wordWrap: true;
]])

for i=1,3 do
  GUI["SpellIcon"..i] = Geyser.Label:new({
    name = "GUI.SpellIcon"..i,
  },GUI.SpellToggles)
  GUI["SpellIcon"..i]:setStyleSheet(GUI.SpellIconCSS:getCSS())
  GUI["SpellIcon"..i]:echo("&lt;center&gt;Spell "..i)
end

</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Gauge Updaters</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>HEALTH</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function HEALTH(hp, hpmax)
	if hp&gt;hpmax then myHpPer = 100
	else
		myHpPer = math.floor((hp/hpmax)*100)
	end

	if (myHpPer &gt;= 100) then
    --brightGreen
		GUI.GaugeFrontCSS:set("background-color","#00FF00")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho("&lt;black&gt;HPS: " ..myHpPer.."%")
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 90) then
	--darkGreen
		GUI.GaugeFrontCSS:set("background-color","#009900")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho("&lt;black&gt;HPS: " ..myHpPer.."%")
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 80) then
    --brightYellow
		GUI.GaugeFrontCSS:set("background-color","#FFFF00")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho("&lt;black&gt;HPS: " ..myHpPer.."%")	
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 70) then
    --darkYellow
		GUI.GaugeFrontCSS:set("background-color","#999900")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho("&lt;black&gt;HPS: " ..myHpPer.."%")
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 60) then
    --brightMagenta
		GUI.GaugeFrontCSS:set("background-color","#FF00FF")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:cecho("&lt;black&gt;HPS: " ..myHpPer.."%")	
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 50) then
    --darkMagenta
		GUI.GaugeFrontCSS:set("background-color","#990099")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo("HPS: " ..myHpPer.."%")	
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 40) then
    --brightRed
		GUI.GaugeFrontCSS:set("background-color","#FF0000")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo("HPS: " ..myHpPer.."%")		
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 30) then
    --brightRed
		GUI.GaugeFrontCSS:set("background-color","#FF0000")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo("HPS: " ..myHpPer.."%")			
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 20) then
    --darkRed
		GUI.GaugeFrontCSS:set("background-color","#990000")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo("HPS: " ..myHpPer.."%")						
		GUI.Health:setValue(myHpPer,100)
	elseif (myHpPer &gt;= 10) then
    --darkRed
		GUI.GaugeFrontCSS:set("background-color","#990000")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo("HPS: " ..myHpPer.."%")			
		GUI.Health:setValue(myHpPer,100)
	else
    --darkRed
		GUI.GaugeFrontCSS:set("background-color","#990000")
		GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Health.front:echo("HPS: " ..myHpPer.."%")		
		GUI.Health:setValue(myHpPer,100)
	end

end -- HEALTH</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>EXPERIENCE</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function EXP(expPer)
GUI.Experience:setValue(expPer,100)
GUI.Experience.front:echo("EXP: " ..expPer.."%")
--darkward.gauge2a:setValue(maPer,100)
--darkward.gauge2b:setValue(100,100,"&lt;left&gt;"..ma.."/"..mamax.." EXP&lt;/left&gt;")


end -- EXP



function EXPTEXT(expText)
GUI.Experience:setValue(100,100)
GUI.Experience.front:echo("EXP_REM: " ..expText)
--darkward.gauge2a:setValue(maPer,100)
--darkward.gauge2b:setValue(100,100,"&lt;left&gt;"..ma.."/"..mamax.." EXP&lt;/left&gt;")


end -- EXP</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>MOVES</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function MOVES(mv, mvmax)
	mvPer = math.floor((mv/mvmax)*100)

	if (mvPer &gt;= 100) then
    --	Gold
		GUI.GaugeFrontCSS:set("background-color","gold")
		GUI.GaugeFrontCSS:set("color","black")	
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 90) then
	--	Gold
		GUI.GaugeFrontCSS:set("background-color","gold")
		GUI.GaugeFrontCSS:set("color","black")	
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 80) then
    --DarkKhaki
		GUI.GaugeFrontCSS:set("background-color","darkkhaki")
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")	
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 70) then
    --DarkKhaki
		GUI.GaugeFrontCSS:set("background-color","darkkhaki")
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 60) then
    --Goldenrod
		GUI.GaugeFrontCSS:set("background-color","Goldenrod")
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")	
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 50) then
    --Goldenrod
		GUI.GaugeFrontCSS:set("background-color","Goldenrod")
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")	
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 40) then
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set("background-color","DarkGoldenrod")
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")		
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 30) then
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set("background-color","DarkGoldenrod")
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")			
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 20) then
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set("background-color","DarkGoldenrod")
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")						
		GUI.Endurance:setValue(mvPer,100)
	elseif (mvPer &gt;= 10) then
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set("background-color","DarkGoldenrod")
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")			
		GUI.Endurance:setValue(mvPer,100)
	else
    --DarkGoldenrod 
		GUI.GaugeFrontCSS:set("background-color","DarkGoldenrod")
		GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI.Endurance.front:cecho("&lt;black&gt;MVS: " ..mvPer.."%")		
		GUI.Endurance:setValue(mvPer,100)
	end

end -- MOVES
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>MYPOSITION</name>
					<packageName></packageName>
					<script>function MYPOSITION(myPosition)
	if (myPosition == "standing") then
    --Green
		myPositionLabel:setStyleSheet([[
			background: green;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myPositionLabel:echo("My Position: "..myPosition)
	elseif (myPosition == "sitting") then
	--Yellow
		myPositionLabel:setStyleSheet([[
			background: yellow;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myPositionLabel:echo("My Position: "..myPosition)
	elseif (myPosition == "kneeling") then
    --Blue
		myPositionLabel:setStyleSheet([[
			background: DodgerBlue;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myPositionLabel:echo("My Position: "..myPosition)
	else
    --Red
		myPositionLabel:setStyleSheet([[
			background: red;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myPositionLabel:echo("My Position: "..myPosition)
	end

end -- MYPOSITION</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>MYTANKPOSITION</name>
					<packageName></packageName>
					<script>function MYTANKPOSITION(myTankPos)
	if (myTankPos == "sta") then
    --Green
		myTankPositionLabel:setStyleSheet([[
			background: Green;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myTankPositionLabel:echo(myTank.." : Standing")
	elseif (myTankPos == "sit") then
	--Yellow
		myTankPositionLabel:setStyleSheet([[
			background: yellow;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myTankPositionLabel:echo(myTank.." : Sitting")
	elseif (myTankPos == "kne") then
    --Blue
		myTankPositionLabel:setStyleSheet([[
			background: DodgerBlue;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myTankPositionLabel:echo(myTank.." : Kneeling")
	elseif (myTankPos == "OUT_OF_COMBAT") then
	--Gray  
		myTankPositionLabel:setStyleSheet([[
			background: gray;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myTankPositionLabel:echo("Out of Combat")
    
	else
    --Red
		myTankPositionLabel:setStyleSheet([[
			background: red;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myTankPositionLabel:echo(myTank.." : "..myTankPos)
	end

end -- MYTANKPOSITION</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>MYENEMYPOSITION</name>
					<packageName></packageName>
					<script>function MYENEMYPOSITION(myEnemyPos)
	if (myEnemyPos == "sta") then
    --Green
		myEnemyPositionLabel:setStyleSheet([[
			background: Green;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myEnemyPositionLabel:echo(myEnemy.." : Standing")
	elseif (myEnemyPos == "sit") then
	--Yellow
		myEnemyPositionLabel:setStyleSheet([[
			background: yellow;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myEnemyPositionLabel:echo(myEnemy.." : Sitting")
	elseif (myEnemyPos == "kne") then
    --Blue
		myEnemyPositionLabel:setStyleSheet([[
			background: DodgerBlue;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myEnemyPositionLabel:echo(myEnemy.." : Kneeling")
	elseif (myEnemyPos == "OUT_OF_COMBAT") then
	--Gray  
		myEnemyPositionLabel:setStyleSheet([[
			background: gray;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myEnemyPositionLabel:echo("Out of Combat")
    
	else
    --Red
		myEnemyPositionLabel:setStyleSheet([[
			background: red;
      qproperty-alignment: 'AlignCenter | AlignMid';
      border-width: 1px;
      border-style: solid;
      border-color: khaki;
      border-radius: 1px;            
		]])
		myEnemyPositionLabel:echo(myEnemy.." : "..myEnemyPos)
	end

end -- MYENEMYPOSITION</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>GUI</name>
				<packageName></packageName>
				<script>GUI = GUI or {}
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Set Borders</name>
					<packageName></packageName>
					<script>local w,h = getMainWindowSize()
setBorderLeft(w/5)
setBorderTop(h/20)
setBorderBottom(h/15)
setBorderRight(w/4)</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Create Background</name>
					<packageName></packageName>
					<script>GUI.BackgroundCSS = CSSMan.new([[
  background-color: rgb(20,0,20);
]])

GUI.Left = Geyser.Label:new({
  name = "GUI.Left",
  x = 0, y = 0,
  width = "20%",
  height = "100%",
})
GUI.Left:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Right = Geyser.Label:new({
  name = "GUI.Right",
  x = "-25%", y = 0,
  width = "25%",
  height = "100%",
})
GUI.Right:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Top = Geyser.Label:new({
  name = "GUI.Top",
  x = "20%", y = 0,
  width = "55%",
  height = "5%",
})
GUI.Top:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Bottom = Geyser.Label:new({
  name = "GUI.Bottom",
  x = "20%", y = "95%",
  width = "55%",
  height = "5%",
})
GUI.Bottom:setStyleSheet(GUI.BackgroundCSS:getCSS())

-- Add Group Box Holder
GUI.GroupCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  margin: 1px;
]])</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Header Icons</name>
					<packageName></packageName>
					<script>GUI.Header = Geyser.HBox:new({
  name = "GUI.Header",
  x = 0, y = 0,
  width = "100%",
  height = "100%",
},GUI.Top)

GUI.IconCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  border-radius: 5px;
  margin: 5px;
  qproperty-wordWrap: true;
]])

for i=1,4 do
  GUI["Icon"..i] = Geyser.Label:new({
    name = "GUI.Icon"..i,
  },GUI.Header)
  GUI["Icon"..i]:setStyleSheet(GUI.IconCSS:getCSS())
  GUI["Icon"..i]:echo("&lt;center&gt;GUI. Icon"..i)
end

GUI["BloodLustIcon"] = Geyser.Label:new({
  name = "GUI.BloodLustIcon", h_stretch_factor=4.0
},GUI.Header)
GUI.BloodLustIcon:setStyleSheet(GUI.IconCSS:getCSS())
GUI.BloodLustIcon:echo("&lt;center&gt;Blood Lust")

for i=9,12 do
  GUI["Icon"..i] = Geyser.Label:new({
    name = "GUI.Icon"..i,
  },GUI.Header)
  GUI["Icon"..i]:setStyleSheet(GUI.IconCSS:getCSS())
  GUI["Icon"..i]:echo("&lt;center&gt;GUI. Icon"..i)
end

-- Header Icon 1
GUI.Icon1:setClickCallback("toggle_loot")
lootOn = true
echo("GUI.Icon1", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;AutoLoot&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ON&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	


-- Header Icon 2
GUI.Icon2:setClickCallback("toggle_loot_type")
lootVar = "all"
echo("GUI.Icon2", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;LootVar&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;ALL&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )


-- Header Icon 3
echo("GUI.Icon3", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="red"&gt;Addict Timer&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;0:00&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )


-- Header Icon 4
echo("GUI.Icon4", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="red"&gt;Addicted&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;0%&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )


-- Header Icon 9
GUI.Icon9:setClickCallback("toggle_healbot")
echo("GUI.Icon9", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;Heal&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;Grid&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )


-- Header Icon 10
GUI.Icon10:setClickCallback("spam_passwords")
echo("GUI.Icon10", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;Pass&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="DodgerBlue"&gt;Words&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )



-- Header Icon11
GUI.Icon11:setClickCallback("toggle_AutoId")
autoId = false
echo("GUI.Icon11", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;AutoId&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="red"&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	

-- Header Icon12
GUI.Icon12:setClickCallback("toggle_afk")
afkStatus = false
echo("GUI.Icon12", [[&lt;p&gt;&lt;b&gt;&lt;center&gt;&lt;font color="khaki"&gt;AFK Status&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;b&gt;&lt;center&gt;&lt;font color="red"&gt;OFF&lt;/font&gt;&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;]] )	
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Gauges</name>
					<packageName></packageName>
					<script>GUI.Footer = Geyser.HBox:new({
  name = "GUI.Footer",
  x = 0, y = 0,
  width = "100%",
  height = "100%",
},GUI.Bottom)

GUI.LeftColumn = Geyser.VBox:new({
  name = "GUI.LeftColumn",
},GUI.Footer)

GUI.MiddleColumn = Geyser.VBox:new({
  name = "GUI.MiddleColumn",
},GUI.Footer)

GUI.RightColumn = Geyser.VBox:new({
  name = "GUI.RightColumn",
},GUI.Footer)


GUI.GaugeBackCSS = CSSMan.new([[
  background-color: rgba(0,0,0,0);
  color: khaki;
  border-style: solid;
  border-color: khaki;
  border-width: 1px;
  border-radius: 2px;
  margin: 2px;
]])

GUI.GaugeFrontCSS = CSSMan.new([[
  background-color: rgba(0,0,0,0);
  color: khaki;
  border-style: solid;
  border-color: khaki;
  border-width: 1px;
  border-radius: 2px;
  margin: 2px;
]])

myPositionLabel = Geyser.Label:new({
  name = "myPositionLabel",
  width = "50%", height = "50%",
  fgColor = "black",
  color = "Green",
  message = [["myPosition"]]
},GUI.LeftColumn)

GUI.Health = Geyser.Gauge:new({
  name = "GUI.Health",
  width = "100%", height = "50%",
},GUI.LeftColumn)
GUI.Health.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","Crimson")
GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Health:setValue(100,100)
GUI.Health.front:echo("HPS")

-- Label for tracking Tank Position
myTankPositionLabel = Geyser.Label:new({
  name = "myTankPositionLabel",
  width = "50%", height = "50%",
  fgColor = "black",
  color = "Green",
  message = [["myTankPosition"]]
},GUI.MiddleColumn)

-- Gauge for tracking moves
GUI.Endurance = Geyser.Gauge:new({
  name = "GUI.Endurance",
},GUI.MiddleColumn)
GUI.Endurance.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","GoldenRod")
GUI.Endurance.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Endurance:setValue(100,100)
--GUI.Endurance.front:echo("GUI.Endurance")
GUI.Endurance.front:echo("MVS")

myEnemyPositionLabel = Geyser.Label:new({
  name = "myEnemyPositionLabel",
  width = "50%", height = "50%",
  fgColor = "black",
  color = "Green",
  message = [["myEnemyPosition"]]
},GUI.RightColumn)

GUI.Experience = Geyser.Gauge:new({
  name = "GUI.Experience",
},GUI.RightColumn)
GUI.Experience.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","DimGray")
GUI.Experience.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Experience:setValue(100,100)
GUI.Experience.front:echo("EXP")</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Boxes</name>
					<packageName></packageName>
					<script>--  margin-right: 10px;
--  margin-left: 5px;

GUI.MapCSS = CSSMan.new([[
  background-color: rgba(0,0,0,50);
  border-style: solid;
  border-width: 1px;
  border-color: DodgerBlue;
  margin: 1px;
]])

GUI.BoxCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  margin: 1px;
]])
GUI.ChatCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 1px;
  border-color: khaki;
  margin: 1px;
]])

GUI.ChatBoxCSS = CSSMan.new([[
  background-color: rgba(0,0,0,100);
  border-style: solid;
  border-width: 0px;
  border-color: khaki;
  margin: 1px;
]])

GUI.Box1 = Geyser.Label:new({
  name = "GUI.Box1",
  x = 0, y = 0,
  width = "100%",
  height = "50%",
},GUI.Right)
GUI.Box1:setStyleSheet(GUI.ChatCSS:getCSS())
--GUI.Box1:echo("&lt;center&gt;GUI.Box1")


GUI.ChatBox1 = Geyser.Label:new({
  name = "GUI.ChatBox1",
  x = "0%", y = "0%",
  width = "100%",
  height = "100%",
},GUI.Box1)
GUI.ChatBox1:setStyleSheet(GUI.ChatBoxCSS:getCSS())

GUI.Box2 = Geyser.Label:new({
  name = "GUI.Box2",
  x = 0, y = "50%",
  width = "100%",
  height = "25%",
},GUI.Right)
GUI.Box2:setStyleSheet(GUI.ChatCSS:getCSS())
--GUI.Box2:echo("&lt;center&gt;GUI.Box2")

GUI.Box2HealGrid = Geyser.Label:new({
  name = "GUI.Box2HealGrid",
  x = "2%", y = "2%",
  width = "96%",
  height = "96%",
},GUI.Box2)


GUI.Box3 = Geyser.Label:new({
  name = "GUI.Box3",
  x = 0, y = "75%",
  width = "100%",
  height = "25%",
},GUI.Right)
GUI.Box3:setStyleSheet(GUI.ChatCSS:getCSS())
GUI.Box3:echo("&lt;center&gt;GUI.Box3")

GUI.Box3Mini = Geyser.MiniConsole:new({
  name = "GUI.Box3Mini",
  x = "1%", y = "1%",
  width = "98%",
  height = "98%",
},GUI.Box3)
GUI.Box3Mini:setColor("black")

GUI.Box4 = Geyser.Label:new({
  name = "GUI.Box4",
  x = "0%", y = "0%",
  width = "100%",
  height = "30%",
},GUI.Left)
GUI.Box4:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box4:echo("&lt;center&gt;GUI.Box4")

GUI.Box4Mini = Geyser.MiniConsole:new({
  name = "GUI.Box4Mini",
  x = "1%", y = "1%",
  width = "98%",
  height = "98%",
},GUI.Box4)
GUI.Box4Mini:setColor("black")
setWindowWrap("GUI.Box4Mini", 50)

GUI.Box5 = Geyser.Label:new({
  name = "GUI.Box5",
  x = "0%", y = "30%",
  width = "100%",
  height = "35%",
},GUI.Left)
GUI.Box5:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box5:echo("&lt;center&gt;GUI.Box5")

GUI.Box5Mini = Geyser.MiniConsole:new({
  name = "GUI.Box5Mini",
  x = "1%", y = "1%",
  width = "98%",
  height = "98%",
},GUI.Box5)
GUI.Box5Mini:setColor("black")

--GUI.Box6 = Geyser.Label:new({
--  name = "GUI.Box6",
--  x = "50%", y = "25%",
--  width = "50%",
--  height = "50%",
--},GUI.Left)
--GUI.Box6:setStyleSheet(GUI.BoxCSS:getCSS())
--GUI.Box6:echo("&lt;center&gt;GUI.Box6")

GUI.Box7 = Geyser.Label:new({
  name = "GUI.Box7",
  x = "0%", y = "65%",
  width = "100%",
  height = "35%",
},GUI.Left)
GUI.Box7:setStyleSheet(GUI.BoxCSS:getCSS())
GUI.Box7:echo("&lt;center&gt;GUI.Box7")

GUI.Box7Mini = Geyser.MiniConsole:new({
  name = "GUI.Box7Mini",
  x = "1%", y = "1%",
  width = "98%",
  height = "98%",
},GUI.Box7)
GUI.Box7Mini:setColor("black")</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>EMCO-2.1</name>
			<packageName>EMCO-2.1</packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>EMCO</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="no" isFolder="no">
					<name>Code</name>
					<packageName></packageName>
					<script>if not EMCO then
	local path = package.path
	local home_dir = getMudletHomeDir() .. "/EMCO-2.1"
	local lua_dir = string.format( "%s/%s", home_dir, [[?.lua]] )
	local init_dir = string.format( "%s/%s", home_dir, [[?/init.lua]] )
	package.path = string.format( "%s;%s;%s", path, lua_dir, init_dir )

	local okay, content = pcall( require, "EMCO" )
	package.path = path
	if okay then
		EMCO = content
	else
		error(string.format("EMCO: Error loading module: %s\n", content))
	end
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>DurisScripts</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<ScriptGroup isActive="no" isFolder="yes">
				<name>EXPBOT</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>doCombat</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function doCombat()
	if mySpellCount[10]&gt;0 then
		send("cast 'creeping doom' "..myTarget)
		mySpellCount[10] = mySpellCount[10]-1
	elseif mySpellCount[9]&gt;0 then
		send("cast 'sunray' "..myTarget)
		mySpellCount[9] = mySpellCount[9]-1
	elseif mySpellCount[7]&gt;0 then
		send("cast 'cyclone' "..myTarget)
		mySpellCount[7] = mySpellCount[7]-1		
	elseif mySpellCount[6]&gt;0 then
		send("cast 'earthen maul' "..myTarget)
		mySpellCount[6] = mySpellCount[6]-1			
	elseif mySpellCount[4]&gt;0 then
		send("cast 'lightning bolt' "..myTarget)
		mySpellCount[4] = mySpellCount[4]-1
	elseif mySpellCount[2]&gt;0 then
		send("cast 'sticks to snakes' "..myTarget)
		mySpellCount[2] = mySpellCount[2]-1
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>checkRoom</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function checkRoom()
	send("look room")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>checkSpells</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function checkSpells()
	if spellsMissing then
		send("commune")
	else
		checkHealth()
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>checkHealth</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function checkHealth()
	if myHEALTH &lt; myHealthMax then
		doHealSelf()
	else
		checkRoom()
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>doHealSelf</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function doHealSelf()
	if tonumber(myLevel)&gt;20 then
		send("cast 'natures touch' me")
	elseif tonumber(myLevel)&gt;15 then
		if checkSpring then
			send("drink spring")
		else
			send("cast 'create spring'")
			send("drink spring")
		end
	else
		send("rest")
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>XPBOT</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function XPBot()
	if myCombatStatus then
		doCombat()
	else
		checkSpells()
	end
end	</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>TableFunctions</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------



</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>MinValue</name>
					<packageName></packageName>
					<script>function table.min( myTable)
   local minValue
   for name, value in ipairs( myTable) do
      minValue = ((not minValue or value &lt; minValue) and value)  or minValue
   end
   return minValue
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>spairs</name>
					<packageName></packageName>
					<script>function spairs(t, order)
    -- collect the keys
    local keys = {}
    for k in pairs(t) do keys[#keys+1] = k end

    -- if order function given, sort by it by passing the table and keys a, b,
    -- otherwise just sort the keys 
    if order then
        table.sort(keys, function(a,b) return order(t, a, b) end)
    else
        table.sort(keys)
    end

    -- return the iterator function
    local i = 0
    return function()
        i = i + 1
        if keys[i] then
            return keys[i], t[keys[i]]
        end
    end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="no" isFolder="no">
					<name>spairs_print_ascending</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function spairs_print(tableName, order)
		for k,v in spairs(tableName, function(t,a,b) return t[b] &gt; t[a] end) do
   			cecho("Left3", "&lt;green&gt;"..k.." (&lt;yellow&gt;"..v..")\n")
		end
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Assign Heal Targets</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
healT={}
function spairs_var(tableName, order)
		i=1
		for k,v in spairs(tableName, function(t,a,b) return t[b] &gt; t[a] end) do
   			--cecho("Left2", "&lt;green&gt;"..k.."&lt;yellow&gt;"..v.."\n")
			healT["healTarget"..i] = k
			i = i+1
		end
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Table Contains</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function table.contains(table, element)
  for _, value in pairs(table) do
    if value == element then
      return true
    end
  end
  return false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Sets</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function addToSet(set, key)
    set[key] = true
end

function removeFromSet(set, key)
    set[key] = nil
end

function setContains(set, key)
    return set[key] ~= nil
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>findString</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function findString(str, word)

	if string.find(str, word) then
		print ("The word was found.")
	else
		print ("The word was not found.")
	end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Variables</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>myVariables</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
myName="Idor"
myLevel="10"
myClass="Paladin"
myRace="Halfling"
myRacewar="Good"
myInstrument="drums"
mySong="SongOfSleep"
myBag="satchel"
myTank="Drella"
myTankCond=""
myTankPos=""
myEnemy=""
myEnemyCond=""
myEnemyPos=""
myWeapon="sword"
LootVar="all"
autoId = false
mySkills= mySkills or {}
Dismount_Flag = 1

CombatMiss = CombatMiss or 0
CombatHit = CombatHit or 0
CombatDodge = CombatDodge or 0

myPrevExp = myPrevExp or nil
myCurExp = myCurExp or nil

myInRoom = myInRoom or {}
listInRoom = listInRoom or {}
myActiveSpells = myActiveSpells or {}
myRescueList= myRescueList or {}
myTankList= myTankList or {}
mySpellCount = mySpellCount or {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

myCombatStatus=false
spellsMissing = true
checkSpring = false


BardSongList=[[Songs
========================
 
&lt;khaki&gt;Sleep          &lt;DodgerBlue&gt;Flute
&lt;khaki&gt;Calming        &lt;DodgerBlue&gt;Harp
&lt;khaki&gt;Discord        &lt;DodgerBlue&gt;Flute
&lt;khaki&gt;Harmony        &lt;DodgerBlue&gt;Flute
&lt;khaki&gt;Protection     &lt;DodgerBlue&gt;Horn
&lt;khaki&gt;Forgetfulness  &lt;DodgerBlue&gt;Mandolin
&lt;khaki&gt;Cowardice      &lt;DodgerBlue&gt;Drums
&lt;khaki&gt;Peace          &lt;DodgerBlue&gt;Harp
&lt;khaki&gt;Dissonance     &lt;DodgerBlue&gt;Horn
&lt;khaki&gt;Flight         &lt;DodgerBlue&gt;Horn
&lt;khaki&gt;Dragons        &lt;DodgerBlue&gt;Horn
&lt;khaki&gt;Healing        &lt;DodgerBlue&gt;Lyre
&lt;khaki&gt;Harming        &lt;DodgerBlue&gt;Lyre
&lt;khaki&gt;Storms         &lt;DodgerBlue&gt;Drums
&lt;khaki&gt;Heroism        &lt;DodgerBlue&gt;Drums
&lt;khaki&gt;Revelation     &lt;DodgerBlue&gt;Mandolin
&lt;khaki&gt;Chaos          &lt;DodgerBlue&gt;Drums
&lt;khaki&gt;Charming       &lt;DodgerBlue&gt;Flute
 
]]

Skill_List = {"1h Bludgeon","1h piercing","1h slashing","2h bludgeon","2h slashing","appraise","Attack","Aura of Battle Lust","Aura of Endurance","Aura of Improved Healing","Aura of Precision","Aura of Protection","awareness","backstab","Bandage","Bash","Blindfighting","Carve","Circle","Cleave","Climb","concentration","Control Flee","Detect Evil","Detect Good","Dirttoss","Disarm","disguise","Dodge","Double","double attack","drums","Dual Wield","Evade","First Aid","Fishing","flute","Garrote","Guard","Hamstring","harp","hide","horn","Instant Kill","Kick","Lay Hands","listen","lore","lyre","mandolin","Meditate","Mine","Mount","Parry","Pick Lock","Quick Chant","Quick Step","Ranged Weapons","Rescue","Retreat","riff","Riposte","Safe Fall","salvage","scribe","Shadowstep","shield block","Skewer","Slip","sneak","sneaky strike","song of calming","song of chaos","song of charming","song of cowardice","song of discord","song of dissonance","song of dragons","song of flight","song of forgetfulness","song of harming","song of harmony","song of healing","song of heroism","song of peace","song of protection","song of revelation","song of sleep","song of storms","sorcerous spell knowledge","Spinal Tap","Steal","Subterfuge","Summon Mount","Swim","Switch Opponents","Trap","trip","Triple Attack","Unarmed Damage","Vicious Attack"}
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Prompt_Variables</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
myHEALTH = 100
myHEALTH_MAX = 100</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Direction Lookup</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
flee_Dir = {north = "South",
	east = "West",
	south = "North",
	west = "east",
	up = "down",
	down = "up",
	northwest = "southeast",
	northeast = "southwest",
	southeast = "northwest",
	southwest = "northeast",
	n = "S",
	e = "W",
	s = "N",
	w = "E",
	u = "D",
	d = "U",
	nw = "SE",
	ne = "SW",
	se = "NW",
	sw = "NE"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Items with Proc</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


Proc_Items = {
"a gleaming dwarven warhammer covered with runic script",
"a long slime-covered tendril with an unblinking eye",
"a two-handed adamantite dwarven battle-hammer",
"an ancient adamantium warhammer of dwarven kings",
"the black dagger of reckoning",
"the mithril axe of the dwarven lords",
"the righteous warhammer of Clangeddin Silverbeard",
"the smouldering forge hammer of Urtengor",
"a cold steel axe called 'Brainripper'",
"a diamondine short spear called 'Mankiller'",
"the jewel of the Spider Queen",
"its razor sharp talons",
"Sunlash, the barbed whip of Injustice and Pain",
"the bastard sword 'Stalker'",
"the flaming whip of Mrinlor",
"the granite dagger 'BloodFeast'",
"the great claymore 'Mist'",
"the helm of the dragonlords",
"the platemail of the DragonLord",
"a searing two-handed sword of lightning",
"a massive spiked demon mace of the tanar'ri",
"Pek'Nasisk, the venom lash",
"Shokurung'otaghe'rakag'onk'rakag, the axe of ill repute",
"the sword of scourging",
"the tome of Strahd",
"'Einjar' the titan shield of purity",
"the writhing serpent of miracles",
"a massive black steel club called Crusher",
"a shard of bluestone called Freeze",
"'B'ardingol', The Foe Hammer",
"a dagger called 'Domination'",
"a dagger called 'Submission'",
"a huge double-bladed axe called 'Skull Splitter'",
"a sacrificial blood dagger of Kvasir",
"the mystic axe of the dragonkind",
"the totem of the ancient dragon riders",
"a black morningstar",
"a drusus named 'Fade to Black'",
"a falchion named 'Magebane'",
"a longsword named 'Elfdawn'",
"a massive sword named 'Lightning Bolt'",
"a scimitar named 'Woundhealer'",
"an ancient blade of paladins",
"the blade of the Golden Flame",
"a black-bladed dagger",
"a fierce blade of doom",
"Krazakan, the githyanki slayer",
"a blood red sword named 'Death Rider'",
"Tiamat's poison tail stinger",
"the rod of Dispator",
"a blazing longsword dubbed 'Rising Sun'",
"a blazing mace dubbed 'Rising Sun'",
"a massive longsword dubbed 'Dusk and Dawn'",
"an icy longsword dubbed 'Rising Frost'",
"an icy mace dubbed 'Rising Frost'",
"the titan warhammer, 'Purelight'",
"a mace of para-elemental ice",
"a flaming sword of the valkyrie",
"a great axe named 'Frostbite'",
"Khildarak's war hammer",
"a mace named 'Vengeance'",
"a warhammer of the frozen north",
"a longsword named 'Cinder'",
"a fragment of moonstone heart",
"a MaDMaNs slasher",
"a MaDMaNs stabber",
"a katana called 'Retribution'",
"the lost sword of Cymrych Hugh",
"a black longsword named 'Cauterizer'",
"a cloak of Elvenkind",
"a pair of pale, misty gloves",
"a sleek adamantium dagger named 'Blight'",
"an elaborate rune covered sword named 'Mournblade'",
"the death-mask of Nakral",
"a bloodblade called 'Lifereaver'",
"a frost brand named 'Stormbringer'",
"a ring of regeneration",
"the legendary platemail of defense",
"the shield of the earthwyrm",
"a gold and ivory mace named 'Dragondeath'",
"a severed tail spike",
"the demonic warmace 'Pure-Dark'",
"the icecrown of the frost revenants",
"the sphere of wind",
"a pair of dusty boots",
"a pair of gauntlets formed of dust",
"a pair of stone gauntlets",
"the mace of the earth",
"the orb of the sea",
"the hammer of titankind",
"a blood dagger of Tezcatlipoca",
"a staff of power",
"the doubling sword of Chaos",
"Tsunami, the trident of storms",
"the ice mace of Sevenoaks",
"the unholy avenger named 'Bloodlust'",
"something",
"Illyn's Holy Sword",
"Avernus the life stealer",
"a black staff headed with a goat skull",
"the huge bone broadsword 'Desecration'",
"a runestone dagger",
"'Starlight' the gold-linked morning star",
"a strange scroll of enchantment",
"an earring of wonderous power",
"the heart of Bahamut",
"the heart of Dragonnia",
"the heart of Tiamat",
"the infamous crystal dagger named 'Venom'",
"the Legend of The Lore Keeper",
"the neatly wrapped gift of the cosmos",
"a flaming mace of the Ruzdo",
"a jagged obsidian dagger with a sapphire hilt",
"a faded-red dagger called 'Silencer'",
"the crown of Aramus",
"the stone mace 'Godsfury'",
"the holy warhammer 'Discipline'",
"a pair of aboleth leggings",
"Chaos, The Unholy Avenger",
"the pendant of the aboleth",
"the totem of Mox",
"the Soulrender",
"Silence, the dagger of anguish",
"an electium katar dubbed 'Miasma'",
"an obsidian buckle named Rage",
"the humming sword named 'Blaze'",
"the lost blade of the Astral Dancer, 'Ender'",
"a caustic dagger",
"a flaming axe of the Azer",
"a diorite shard named 'Seeker'",
"a rune-covered svalich wood quarterstaff",
"the rod of summoning",
"a darkened blade bearing a Thieves Guild insignia",
"a black bladed longsword",
"a dagger named 'Fade'",
"a giant longsword named 'Disintegrator'",
"the three-headed flail of Yeenoghu",
"a barbed whip dubbed 'Cometstrike'",
"the staff of the storm",
"a two-handed black minotaur axe",
"grenadier proc",
"a great warhammer named 'Fearfrost'",
"a tricksters dagger of deception and illusions",
"a crumpled note",
"the globe of shadows",
"trash",
"a massive blackrock hammer named 'Searing Fist'",
"a saber of the Felwood Kings",
"the claw of Krizzix",
"a cold saber called 'icicle'",
"the Soulsword",
"an adamantium dirk",
"a large glowing sword of the tundra",
"a sword named Snakebite"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Class Epic Skills</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
Epic_Skills = {"empower song",
"enchant",
"epic agility",
"epic charisma",
"epic constitution",
"epic dexterity",
"epic intelligence",
"epic luck",
"epic power",
"epic strength",
"epic wisdom",
"indomitable rage",
"infuse life",
"infuse magical device",
"jin touch",
"ki strike",
"silent spell",
"smelt",
"spell penetration",
"spellbind",
"summon blizzard",
"summon familiar",
"toughness"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>shamanVariables</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
myTotem = "limestone"
--AnimalTotem = "bear"
--ElementalTotem = "obsidian"
--SpiritualTotem = "quartz"
AnimalTotem = "raven"
ElementalTotem = "limestone"
SpiritualTotem = "ivory"</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>DurisClasses</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
Duris_Classes = {"Warrior","Mercenary","Rogue","Bard","Conjurer","Summoner","Sorcerer","Psionicist","Druid","Cleric","Ethermancer","Monk","Paladin","Anti-Paladin","Berserker","Ranger","Reaver","Illusionist","Alchemist","Shaman","Necromancer","Blighter","Dreadlord","Avenger"}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Necro variables</name>
					<packageName></packageName>
					<script>--Necro Variables
Pet_1 = "1.wraith"
Pet_2 = "2.wraith"
Pet_3 = "3.wraith"
Pet_4 = "4.wraith"</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>StringStuff</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Title Case</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function titlecase(str)
    local buf = {}
    for word in string.gfind(str, "%S+") do          
        local first, rest = string.sub(word, 1, 1), string.sub(word, 2)
        table.insert(buf, string.upper(first) .. string.lower(rest))
    end    
    return table.concat(buf, " ")
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>DurisClassList</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>ClassList</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
DurisClassList = {
"Warrior",
"Ranger",
"Paladin",
"Anti-Paladin",
"Monk",
"Reaver",
"Berserker",
"Dreadlord",
"Avenger",
"Cleric",
"Druid",
"Shaman",
"Ethermancer",
"Rogue",
"Bard",
"Mercenary",
"Sorcerer",
"Conjurer",
"Illusionist",
"Alchemist",
"Psionicist",
"Necromancer",
"Theurgist",
"Summoner"
}

ActiveClass = "None"




</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Decho Class List</name>
					<packageName></packageName>
					<script>DurisClassListDecho = {
Warrior = "&lt;0,0,255:0,0,0&gt;Warrior",
Swordsman = "&lt;0,0,255:0,0,0&gt;Swordsman",
Guardian = "&lt;128,128,0:0,0,0&gt;Guardian",
Swashbuckler = "&lt;85,85,255:0,0,0&gt;Swa&lt;0,0,255:0,0,0&gt;sh&lt;255,255,255:0,0,0&gt;buc&lt;0,0,255:0,0,0&gt;kler",
Ranger = "&lt;0,255,0:0,0,0&gt;Ranger",
Blademaster = "&lt;0,128,128:0,0,0&gt;Blademaster",
Huntsman = "&lt;0,179,0:0,0,0&gt;Huntsman",
Marshall = "&lt;0,179,0:0,0,0&gt;Ma&lt;128,128,0:0,0,0&gt;rsha&lt;0,179,0:0,0,0&gt;ll",
Psionicist = "&lt;85,85,255:0,0,0&gt;Psionicist",
Pyrokinetic = "&lt;128,0,0:0,0,0&gt;Pyr&lt;255,0,0:0,0,0&gt;okine&lt;128,0,0:0,0,0&gt;tic",
Enslaver = "&lt;255,0,255:0,0,0&gt;En&lt;128,0,128:0,0,0&gt;slav&lt;255,0,255:0,0,0&gt;er",
Psycheporter = "&lt;85,85,255:0,0,0&gt;Psyche&lt;128,128,128:0,0,0&gt;porter",
Paladin = "&lt;255,255,255:0,0,0&gt;Paladin",
Crusader = "&lt;192,192,192:0,0,0&gt;Crusa&lt;255,255,255:0,0,0&gt;der",
Cavalier = "&lt;255,255,255:0,0,0&gt;Cavalier",
["Anti-Paladin"] = "&lt;128,128,128:0,0,0&gt;Anti-Paladin",
["Dark Knight"] =  "&lt;128,128,128:0,0,0&gt;Dark Knight",
["Demonic Rider"] = "&lt;255,255,255:0,0,0&gt;&lt;128,128,128:0,0,0&gt;Dem&lt;128,0,0:0,0,0&gt;onic Ri&lt;128,128,128:0,0,0&gt;der",
Violator = "&lt;128,128,128:0,0,0&gt;Vi&lt;128,0,0:0,0,0&gt;o&lt;128,128,128:0,0,0&gt;lat&lt;128,0,0:0,0,0&gt;or",
Cleric = "&lt;0,128,128:0,0,0&gt;Cleric",
Zealot = "&lt;255,255,0:0,0,0&gt;Zealot",
Healer = "&lt;255,255,255:0,0,0&gt; Healer",
Holyman = "&lt;0,128,128:0,0,0&gt;Holy&lt;255,255,255:0,0,0&gt;man",
Monk = "&lt;128,128,128:0,0,0&gt;M&lt;255,255,255:0,0,0&gt;on&lt;128,128,128:0,0,0&gt;k",
["Red Dragon"] = "&lt;128,0,0:0,0,0&gt;Re&lt;255,0,0:0,0,0&gt;d Dra&lt;128,0,0:0,0,0&gt;gon",
Elaphidist = "&lt;0,179,0:0,0,0&gt;Elap&lt;0,255,0:0,0,0&gt;hi&lt;0,179,0:0,0,0&gt;dist:",
Druid = "&lt;0,179,0:0,0,0&gt;Druid",
["Forest Druid"] = "&lt;0,179,0:0,0,0&gt;Fo&lt;0,255,0:0,0,0&gt;re&lt;0,179,0:0,0,0&gt;st Druid",
["Storm Druid"] = "&lt;0,128,128:0,0,0&gt;Storm &lt;0,255,255:0,0,0&gt;Druid",
Shaman = "&lt;0,255,255:0,0,0&gt;Shaman",
Elementalist = "&lt;128,0,0:0,0,0&gt;El&lt;255,0,0:0,0,0&gt;em&lt;128,128,128:0,0,0&gt;enta&lt;255,0,0:0,0,0&gt;li&lt;128,0,0:0,0,0&gt;st",
Spiritualist = "&lt;255,255,255:0,0,0&gt;Spir&lt;0,255,255:0,0,0&gt;itua&lt;255,255,255:0,0,0&gt;list",
Animalist = "&lt;128,128,0:0,0,0&gt;Ani&lt;255,255,0:0,0,0&gt;mal&lt;128,128,0:0,0,0&gt;ist",
Sorcerer = "&lt;255,0,255:0,0,0&gt;Sorcerer",
Wildmage = "&lt;255,0,255:0,0,0&gt;Wild&lt;128,0,128:0,0,0&gt;mage",
Wizard = "&lt;128,128,128:0,0,0&gt;Wizard",
Shadowmage = "&lt;128,128,128:0,0,0&gt;Shadow&lt;192,192,192:0,0,0&gt;mage",
Necromancer = "&lt;128,0,128:0,0,0&gt;Necromancer",
Diabolis = "&lt;128,0,128:0,0,0&gt;Dia&lt;128,0,0:0,0,0&gt;bolis",
Necrolyte = "&lt;128,0,128:0,0,0&gt;Ne&lt;128,128,128:0,0,0&gt;cro&lt;128,0,128:0,0,0&gt;lyte",
Reaper = "&lt;128,128,128:0,0,0&gt;Reap&lt;192,192,192:0,0,0&gt;er",
Conjurer = "&lt;255,255,0:0,0,0&gt;Conjurer",
["Air Magus"] = "&lt;0,255,255:0,0,0&gt;Air Magus",
["Water Magus"] = "&lt;0,0,255:0,0,0&gt;Water Magus",
["Fire Magus"] = "&lt;128,0,0:0,0,0&gt;Fire Magus",
["Earth Magus"] = "&lt;128,128,0:0,0,0&gt;Earth Magus",
Rogue = "&lt;128,0,0:0,0,0&gt;Rogue",
Assassin = "&lt;128,0,0:0,0,0&gt;Assassin",
Thief = "&lt;128,128,128:0,0,0&gt;Thief",
["Shadow Archer"] = "&lt;128,128,128:0,0,0&gt;Sh&lt;192,192,192:0,0,0&gt;a&lt;128,128,128:0,0,0&gt;dow &lt;0,0,255:0,0,0&gt;Arc&lt;85,85,255:0,0,0&gt;her",
Mercenary = "&lt;128,128,0:0,0,0&gt;Mercenary",
Brigand = "&lt;128,128,0:0,0,0&gt;Br&lt;128,128,128:0,0,0&gt;ig&lt;128,128,0:0,0,0&gt;and",
["Bounty Hunter"] = "&lt;128,128,0:0,0,0&gt;Bounty &lt;128,128,128:0,0,0&gt;Hunter",
Bard = "&lt;128,128,128:0,0,0&gt;B&lt;85,85,255:0,0,0&gt;ar&lt;128,128,128:0,0,0&gt;d",
Disharmonist = "&lt;128,0,0:0,0,0&gt;D&lt;128,0,128:0,0,0&gt;is&lt;0,179,0:0,0,0&gt;ha&lt;0,128,128:0,0,0&gt;rm&lt;128,128,0:0,0,0&gt;on&lt;85,85,255:0,0,0&gt;ist",
Scoundrel = "&lt;255,0,0:0,0,0&gt;Scoundrel",
Minstrel = "&lt;255,255,0:0,0,0&gt;Min&lt;128,128,0:0,0,0&gt;str&lt;255,255,0:0,0,0&gt;el",
Alchemist = "&lt;0,255,255:0,0,0&gt;Alc&lt;0,128,128:0,0,0&gt;hem&lt;0,255,255:0,0,0&gt;ist",
["Battle-Forger"] = "&lt;0,255,255:0,0,0&gt;Bat&lt;0,128,128:0,0,0&gt;tle-For&lt;0,255,255:0,0,0&gt;ger",
Blacksmith = "&lt;128,128,128:0,0,0&gt;Bla&lt;0,128,128:0,0,0&gt;cksm&lt;128,128,128:0,0,0&gt;ith",
BeRSeRKeR = "&lt;128,0,0:0,0,0&gt;BeR&lt;255,0,0:0,0,0&gt;SeR&lt;128,0,0:0,0,0&gt;KeR",
MaUleR = "&lt;128,0,0:0,0,0&gt;Ma&lt;255,0,0:0,0,0&gt;Ule&lt;128,0,0:0,0,0&gt;R",
RaGeloRd = "&lt;255,0,0:0,0,0&gt;Ra&lt;128,0,0:0,0,0&gt;Ge&lt;255,0,0:0,0,0&gt;lo&lt;128,0,0:0,0,0&gt;Rd",
Reaver = "&lt;128,128,128:0,0,0&gt;Re&lt;255,255,255:0,0,0&gt;av&lt;128,128,128:0,0,0&gt;er",
["Ice Reaver"] = "&lt;0,255,255:0,0,0&gt;I&lt;255,255,255:0,0,0&gt;c&lt;0,255,255:0,0,0&gt;e &lt;128,128,128:0,0,0&gt;Re&lt;192,192,192:0,0,0&gt;av&lt;128,128,128:0,0,0&gt;er",
["Flame Reaver"] = "&lt;255,255,255:0,0,0&gt;&lt;128,0,0:0,0,0&gt;F&lt;255,0,0:0,0,0&gt;l&lt;255,255,0:0,0,0&gt;a&lt;255,0,0:0,0,0&gt;m&lt;128,0,0:0,0,0&gt;e &lt;128,128,128:0,0,0&gt;Re&lt;192,192,192:0,0,0&gt;av&lt;128,128,128:0,0,0&gt;er",
["Shock Reaver"] = "&lt;85,85,255:0,0,0&gt;Sh&lt;0,0,255:0,0,0&gt;o&lt;255,255,255:0,0,0&gt;ck &lt;128,128,128:0,0,0&gt;Re&lt;192,192,192:0,0,0&gt;av&lt;128,128,128:0,0,0&gt;er",
["Earth Reaver"] = "&lt;128,128,128:0,0,0&gt;Ea&lt;128,128,0:0,0,0&gt;rt&lt;128,128,128:0,0,0&gt;h R&lt;128,128,0:0,0,0&gt;ea&lt;128,128,128:0,0,0&gt;ve&lt;128,128,0:0,0,0&gt;r",
Illusionist = "&lt;255,255,255:0,0,0&gt;Il&lt;0,255,255:0,0,0&gt;lu&lt;0,128,128:0,0,0&gt;si&lt;0,255,255:0,0,0&gt;on&lt;255,255,255:0,0,0&gt;ist",
Magician = "&lt;0,0,255:0,0,0&gt;M&lt;255,255,0:0,0,0&gt;ag&lt;0,0,255:0,0,0&gt;ic&lt;255,255,0:0,0,0&gt;ia&lt;0,0,255:0,0,0&gt;n",
["Dark Dreamer"] = "&lt;128,128,128:0,0,0&gt;Dark &lt;128,0,128:0,0,0&gt;Dreamer",
Blighter = "&lt;128,128,128:0,0,0&gt;Bl&lt;128,128,0:0,0,0&gt;i&lt;0,179,0:0,0,0&gt;gh&lt;128,128,0:0,0,0&gt;t&lt;128,128,128:0,0,0&gt;er&lt;255,255,255:0,0,0&gt;",
["Storm Bringer"] = "&lt;255,255,0:0,0,0&gt;St&lt;128,128,0:0,0,0&gt;or&lt;255,255,0:0,0,0&gt;m &lt;128,128,128:0,0,0&gt;Bringer",
Scourge = "&lt;0,255,0:0,0,0&gt;Sc&lt;0,179,0:0,0,0&gt;ou&lt;255,255,0:0,0,0&gt;rg&lt;0,255,0:0,0,0&gt;e",
Ruiner = "&lt;128,128,128:0,0,0&gt;Ru&lt;192,192,192:0,0,0&gt;in&lt;128,128,128:0,0,0&gt;er",
Dreadlord = "&lt;128,128,128:0,0,0&gt;Dread&lt;128,0,0:0,0,0&gt;lord",
Deathlord = "&lt;128,128,128:0,0,0&gt;Death&lt;128,0,0:0,0,0&gt;lord",
Shadowlord = "&lt;128,128,128:0,0,0&gt;Shadow&lt;128,0,0:0,0,0&gt;lord",
Ethermancer = "&lt;192,192,192:0,0,0&gt;Ethermancer",
["Tempest Magus"] = "&lt;0,255,255:0,0,0&gt;Tem&lt;0,128,128:0,0,0&gt;pe&lt;0,255,255:0,0,0&gt;st Ma&lt;0,128,128:0,0,0&gt;gu&lt;0,255,255:0,0,0&gt;s",
["Frost Magus"] = "&lt;255,255,255:0,0,0&gt;Fro&lt;0,128,128:0,0,0&gt;st &lt;0,255,255:0,0,0&gt;Magus",
["Star Magus"] = "&lt;255,255,0:0,0,0&gt;St&lt;128,128,0:0,0,0&gt;a&lt;255,255,0:0,0,0&gt;r &lt;128,128,128:0,0,0&gt;Ma&lt;192,192,192:0,0,0&gt;gu&lt;128,128,128:0,0,0&gt;s",
Avenger = "&lt;255,255,255:0,0,0&gt;Avenger",
Lightbringer = "&lt;255,255,0:0,0,0&gt;Light&lt;255,255,255:0,0,0&gt;bringer",
Inquisitor = "&lt;255,255,255:0,0,0&gt;Inq&lt;192,192,192:0,0,0&gt;uisi&lt;255,255,255:0,0,0&gt;tor",
Theurgist = "&lt;0,128,128:0,0,0&gt;Th&lt;0,255,255:0,0,0&gt;eur&lt;255,255,255:0,0,0&gt;gist",
Medium = "&lt;192,192,192:0,0,0&gt;Medium",
Templar = "&lt;255,255,0:0,0,0&gt;T&lt;255,0,0:0,0,0&gt;e&lt;128,0,0:0,0,0&gt;mpl&lt;255,0,0:0,0,0&gt;a&lt;255,255,0:0,0,0&gt;r",
Thaumaturge = "&lt;255,255,255:0,0,0&gt; T&lt;0,128,128:0,0,0&gt;h&lt;0,255,255:0,0,0&gt;a&lt;255,255,255:0,0,0&gt;u&lt;0,255,255:0,0,0&gt;m&lt;0,128,128:0,0,0&gt;a&lt;0,255,255:0,0,0&gt;t&lt;255,255,255:0,0,0&gt;u&lt;0,255,255:0,0,0&gt;r&lt;0,128,128:0,0,0&gt;g&lt;0,255,255:0,0,0&gt;e",
Summoner = "&lt;255,0,0:0,0,0&gt;Summoner",
Controller = "&lt;0,128,128:0,0,0&gt;Con&lt;0,255,255:0,0,0&gt;trol&lt;255,255,255:0,0,0&gt;ler",
Mentalist = "&lt;128,0,0:0,0,0&gt;M&lt;255,0,0:0,0,0&gt;e&lt;255,255,0:0,0,0&gt;n&lt;255,255,255:0,0,0&gt;tal&lt;255,255,0:0,0,0&gt;i&lt;255,0,0:0,0,0&gt;s&lt;128,0,0:0,0,0&gt;t",
Naturalist = "&lt;0,179,0:0,0,0&gt;Nat&lt;0,255,0:0,0,0&gt;ural&lt;128,128,0:0,0,0&gt;ist"
}</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>WhoList</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function WhoClass(xname)

	if myWhoList[xname] ~= nil then
		return ( myWhoList[xname].Class )
	end

	return(nil)	
end</script>
				<eventHandlerList />
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>HealGrid Group</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>updateHealGrid</name>
					<packageName></packageName>
					<script>--Function to update the Heal Grid based on DurisMUD group command output
function updateHealGrid ()
	for i in ipairs(testGroup) do
		local v = testGroup[i].PCT
		local k = testGroup[i].Name
		if v &gt; 100 then
			v = 100
		end
		GUI["Group"..i]:setValue(v,100)
		GUI["Group"..i].front:cecho("&lt;black&gt;"..string.sub(k,1,13))
			if (v &gt;= 100) then
				GUI.GaugeFrontCSS:set("background-color","#00FF00")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			elseif (v &gt;= 90) then
				GUI.GaugeFrontCSS:set("background-color","#009900")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			elseif (v &gt;= 80) then
				GUI.GaugeFrontCSS:set("background-color","#FFFF00")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			elseif (v &gt;= 70) then
				GUI.GaugeFrontCSS:set("background-color","#999900")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			elseif (v &gt;= 60) then
				GUI.GaugeFrontCSS:set("background-color","#FF00FF")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			elseif (v &gt;= 50) then
				GUI.GaugeFrontCSS:set("background-color","#990099")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			elseif (v &gt;= 40) then
				GUI.GaugeFrontCSS:set("background-color","#FF0000")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			elseif (v &gt;= 30) then
				GUI.GaugeFrontCSS:set("background-color","#FF0000")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			elseif (v &gt;= 20) then
				GUI.GaugeFrontCSS:set("background-color","#990000")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			else
				GUI.GaugeFrontCSS:set("background-color","#990000")
				GUI["Group"..i].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
			end
		GUI["Group"..i].front:setClickCallback("heal_bot", k)
	end


	for z=#testGroup+1,25 do
		GUI.GaugeFrontCSS:set("background-color","black")
		GUI["Group"..z].front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
		GUI["Group"..z]:setValue(100,100)
		GUI["Group"..z].front:echo([[&lt;span style = "color: black"&gt;___&lt;/span&gt;]])
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>updateGroupDisplay</name>
					<packageName></packageName>
					<script>--updateGroupDisplay
--Populates GUI.Box3.Mini with modified Group command output

function updateGroupDisplay ()
	-- New Group Output
	clearUserWindow("GUI.Box3Mini")


	GUI.Box3Mini:decho(string.format("\n"..RGB.G.."%4s  "..RGB.Y.."%4s  "..RGB.W.."%-30s  %-16s", "HP%", "Move", "Name", "Class"))
	GUI.Box3Mini:decho(string.format("\n"..RGB.G.."%4s  "..RGB.Y.."%4s  "..RGB.W.."%-30s  %-16s", "====", "====", "========================","================"))
	for key in ipairs(testGroup) do
		CharName = testGroup[key].Name
		local pct = tonumber(testGroup[key].PCT)
		local MVpct = (testGroup[key].MV/testGroup[key].MAXMV)*100
		local HPcolor = RGB.G
		local MVcolor = RGB.G

	--Set HPcolor
		if pct &lt; 95 and pct &gt; 84 then
			HPcolor= RGB.g
		elseif pct &lt; 85 and pct &gt; 74 then
			HPcolor= RGB.Y
		elseif pct &lt; 75 and pct &gt; 64 then
			HPcolor= RGB.y
		elseif pct &lt; 65 and pct &gt; 54 then
			HPcolor= RGB.M
		elseif pct &lt; 55 and pct &gt; 44 then
			HPcolor= RGB.m
		elseif pct &lt; 45 and pct &gt; 34 then
			HPcolor= RGB.R			
		elseif pct &lt; 35 and pct &gt; -500 then
			HPcolor= RGB.r
		end
		
	--Set MVcolor
		if MVpct &lt; 95 and MVpct &gt; 84 then
			MVcolor= RGB.g
		elseif MVpct &lt; 85 and MVpct &gt; 74 then
			MVcolor= RGB.Y
		elseif MVpct &lt; 75 and MVpct &gt; 64 then
			MVcolor= RGB.y
		elseif MVpct &lt; 65 and MVpct &gt; 54 then
			MVcolor= RGB.M
		elseif MVpct &lt; 55 and MVpct &gt; 44 then
			MVcolor= RGB.m
		elseif MVpct &lt; 45 and MVpct &gt; 34 then
			MVcolor= RGB.R			
		elseif MVpct &lt; 35 and MVpct &gt; -500 then
			MVcolor= RGB.r
		end

	--Build Group Display
		if string.findPattern(string.trim(CharName), " ") ~= nil then
			GUI.Box3Mini:decho(string.format("\n"..HPcolor.."%4s  "..MVcolor.."%4s  "..RGB.W.."%-30s  %-10s", testGroup[key].PCT, testGroup[key].MV, string.cut(testGroup[key].Name, 30), RGB.Y.."Pet"))
		else
			CharClass = DurisClassListDecho[string.trim(myWhoList[CharName].Class)] or myWhoList[CharName].Class
			CharLevel = myWhoList[CharName].Level
			GUI.Box3Mini:decho(string.format("\n"..HPcolor.."%4s  "..MVcolor.."%4s  "..RGB.W.."%-30s  %-16s", testGroup[key].PCT, testGroup[key].MV, string.cut(testGroup[key].Name, 30), CharClass))
		end
	end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>RaceList</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>DurisMUD Race List</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
RaceList = {
"Human",
"Barbarian",
"Grey Elf",
"Dwarf",
"Halfling",
"Gnome",
"Centaur",
"Githzerai",
"Firbolg",
"Drow Elf",
"Duergar",
"Ogre",
"Troll",
"Orc",
"Githyanki",
"Goblin",
"Drider",
"Kobold",
"Thri-Kreen",
"Minotaur",
"Illithid"
}</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Duris Spell Casting from Table</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>castSpell</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function castSpell(charClass, spellname, target)
	local c = charClass
	local s = c[spellname]
	local t = target or false
   if s and t then
		send("cast '"..s.."'"..t)
   elseif s then
		send("cast '"..s.."'")
	else
      for k, v in pairs(c) do
         print(k , v)
		end
   end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Druid Spell Table</name>
					<packageName></packageName>
					<script>-- Druid Spell Table

druid = {
ani = "Animal Friendship",
af = "Awaken Forest",
ag = "Animal Growth",
aid = "Aid",
as = "Acid Stream",
av = "Animal Vision",
bark = "Barkskin",
blade = "Flame Blade",
bs = "Blood to Stone",
bw = "Binding Wind",
call = "Call woodland beings",
cd = "Creeping Doom",
land = "Consecrate Land",
cl = "Call Lightning",
cs = "Create Spring",
cy = "Cyclone",
dis = "Disease",
dm = "Dispel Magic",
ea = "Elemental Aura",
em = "Earthen Maul",
en = "Entangle",
endu = "Endurance",
eq = "Earthquake",
es = "Earth Spike",
els = "Elemental Swarm",
ff = "Faerie Fire",
fog = "Faerie Fog",
fort = "Fortitude",
fs = "Firestorm",
g = "Grow",
hu = "Hurricane",
iw = "Ironwood",
lb = "Lightning Bolt",
lc = "Lightning Curtain",
moon = "Moonstone",
nb = "Natures Blessing",
nova = "Nova",
nt = "Natures Touch",
po = "Poison",
prota = "Protection from Animals",
pul = "Pulchritude",
pwt = "Pass Without Trace",
reg = "Regeneration",
si = "Summon insects",
sb = "spore burst",
ser = "Serendipity",
sg = "Spike Growth",
sr = "Sunray",
ss = "Sticks to Snakes",
storm = "Storm Shield",
tran = "Tranquility",
v = "Vines",
well = "Moonwell",
wt = "Wind Tunnel",
ww = "Wandering Woods"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Necromancer Spell Table</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
Necromancer = {
detm = "Detect Magic",
mm = "Magic Missile",
mc = "Minor Creation",
pres = "Preserve",
protu = "Protection from Undead",
ct = "Chill Touch",
protc = "Protection from Cold",
protl = "Protection from Living",
sl = "Sleep",
vto = "Vampiric Touch",
ad = "Animate Dead",
dm = "Dispel Magic",
emb = "Embalm",
sense = "Sense Follower",
rmin = "Rejuvenate Minor",
str = "Strength",
wit = "Wither",
ll = "Life Leech",
unm = "Unmaking",
cs = "Coldshield",
conc = "Concealment",
fe = "Feeblemind",
fs = "Fireshield",
hu = "Heal Undead",
lev = "Levitate",
rs = "Raise Spectre",
qq = "Teleport",
cc = "Cone of Cold",
mg = "Minor Globe of Invulnerability",
rmaj = "Rejuvenate Major",
vu = "Vitalize Undead",
en = "Enervation",
pu = "Protect Undead",
rw = "Raise Wraith",
rtn = "Reveal True Name",
knock = "Knock",
di = "Detect Invisibility",
disi = "Dispel Invisible",
has = "Haste",
invis = "Improved Invisibility",
nc = "Negative Concussion Blast",
age = "Age",
dim = "Dimension Door",
rv = "Raise Vampire",
ud = "Undeath to Death",
ed = "Energy Drain",
cof = "Cloak of Fear",
fly = "Fly",
me = "Mass Embalm",
rl = "Raise Lich",
tran = "Vampiric Trance",
wb = "Wall of Bones",
cf = "Corpseform",
cd = "Create Dracolich",
pwk = "Power Word Kill",
bm = "Blackmantle",
sg = "Summon Ghasts",
cgd = "Create Greater Dracolich"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Summoner Spell Table</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

Summoner = {
detm = "Detect Magic",
mm = "Magic Missile",
mc = "Minor Creation",
ct = "Chill Touch",
bh = "Burning Hands",
mi = "Mirror Image",
sleep = "Sleep",
ai = "Acidimmolate",
agi = "Agility",
conc = "Concealment",
dm = "Dispel Magic",
mf = "Mage Flame",
sg = "Shocking Grasp",
str = "Strength",
ew = "Enchant Weapon",
infra = "Infravision",
lev = "Levitate",
lb = "Lightning Bolt",
ray = "Ray of Enfeeblement",
rtn = "Reveal True Name",
wall = "Wall of Force",
cs = "Coldshield",
cb = "Contain Being",
fs = "Fireshield",
id = "Identify",
sf = "Sense Follower",
slow = "Slowness",
color = "Color Spray",
fe = "Feeblemind",
mglobe = "Minor Globe of Invulnerability",
ss = "Stone skin",
qq = "Teleport",
aw = "Airy Water",
cc = "Cone of Cold",
dim = "Dimension Door",
fb = "Fireball",
has = "Haste",
is = "Icestorm",
wallf = "Wall of Flames",
walli = "Wall of Ice",
web = "Web",
di = "Detect Invisibility",
globe = "Globe of Invulnerability",
invis = "Improved Invisibility",
ps = "Prismatic Spray",
relo = "Relocate",
far = "Farsee",
gss = "Group Stone Skin",
gglobe = "Group Globe of Invulnerability",
cube = "Prismatic Cube",
cc = "Prismatic Cube"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Conjurer Spell Table</name>
					<packageName></packageName>
					<script>Conjurer = {
agi = "agility",
aw = "airy water",
bh = "burning hands",
ce = "conjure elemental",
cge = "conjure greater elemental",
conc = "concealment",
cone = "cone of cold",
cs = "coldshield",
cs = "color spray",
ct = "chill touch",
cube = "prismatic cube",
detm = "detect magic",
di = "detect invisibility",
dim = "dimension door",
dis = "disintegrate",
dm = "dispel magic",
ew = "enchant weapon",
farsee = "farsee",
fb = "fireball",
feeb = "feeblemind",
fly = "fly",
fs = "fireshield",
gate = "gate",
gglobe = "group globe of invulnerability",
globe = "globe of invulnerability",
gss = "group stornogs spheres",
gstone = "group stone skin",
has = "haste",
id = "identify",
ii = "improved invisibility",
infra = "infravision",
is = "ice storm",
lb = "lightning bolt",
lev = "levitate",
mc = "minor creation",
mf = "mage flame",
mglobe = "minor globe of invulnerability",
mi = "mirror image",
mm = "magic missile",
pris = "prismatic spray",
ray = "ray of enfeeblement",
relo = "relocate",
rtn = "reveal true name",
sf = "sense follower",
sg = "shocking grasp",
shroud = "stornogs metamagic shroud",
sle = "sleep",
slow = "slowness",
ss = "stornogs spheres",
shell = "stornogs shimmering starshell",
stone = "stone skin",
str = "strength",
tel = "teleport",
web = "web",
wf = "wall of force",
fw = "wall of flames",
iw = "wall of iron",
wi = "wall of ice",
ws = "wall of stone"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Ethermancer Spell Table</name>
					<packageName></packageName>
					<script>Ethermancer = {
aw = "arcane whirlwind",
beacon = "frost beacon",
blur = "blur",
cc = "cone of cold",
cold = "coldshield",
cs = "cold snap",
ct = "chill touch",
detm = "detect magic",
dm = "dispel magic",
ef = "ethereal form",
er = "ethereal recharge",
fb = "frost bolt",
ff = "faerie fire",
fog = "faerie fog",
frost = "frostbite",
fs = "faerie sight",
im = "ice missile",
is = "ice storm",
it = "induce tupor",
lb = "lightning bolt",
lc = "lightning curtain",
ls = "lightning shield",
mfly = "mass fly",
purs = "purify spirit",
ps = "plane shift",
purge = "purge",
sd = "static discharge",
se = "storm empathy",
tt = "tempest terrain",
va = "vapor armor",
vs = "vapor strike",
wb = "wind blade",
wind = "windwalk"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Illusionist Spell Table</name>
					<packageName></packageName>
					<script>Illusionist = {
as = "asphyxiate",
b = "blindness",
bb = "boulder",
bh = "burning hands",
cd = "darkness",
cl = "continual light",
clone = "clone form",
conc = "concealment",
del = "delirium",
deti = "detect illusion",
detm = "detect magic",
dim = "shadow travel",
dis = "dispel invisible",
dm = "dispel magic",
drag = "dragon",
dt = "dream travel",
f = "hammer",
farsee = "farsee",
fl = "flicker",
fly = "fly",
ii = "insects",
imp = "imprisonment",
infra = "infravision",
iq = "illusionary wall",
lev = "levitate",
mask = "mask",
massi = "mass invisibility",
mc = "minor creation",
mi = "mirror image",
mir = "mirage",
mm = "magic missile",
nm = "nightmare",
non = "nonexistence",
pa = "phantom armor",
ref = "reflection",
rtn = "reveal true name",
sle = "sleep",
sm = "shadow monster",
ss = "shadow shield",
sv = "stunning visions",
titan = "titan",
v = "vanish"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Paladin Spell Table</name>
					<packageName></packageName>
					<script>Paladin = {
ah = "accelerated healing",
bless = "bless",
ca = "armor",
cb = "cure blind",
cc = "cure critic",
cd = "cure disease",
cl = "cure light",
light = "continual light",
cs = "cure serious",
de = "dispel evil",
dh = "dharma",
du = "destroy undead",
gh = "group heal",
h = "heal",
hw = "holy word",
inv = "invigorate",
j = "judgement",
prote = "protection from evil",
ra = "righteous aura",
rc = "remove curse",
rp = "remove poison",
sanc = "sanctuary",
ss = "soulshield",
tu = "turn undead"
}</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Psionicist Spell Table</name>
					<packageName></packageName>
					<script>Psionicist = {
ac = "adrenaline control",
as = "aura sight",
ba = "ballistic attack",
bio = "biofeedback",
ca = "cell adjustment",
cs = "create sound",
df = "death field",
ea = "enhance agility",
eb = "ego blast",
ec = "enhance constitution",
ed = "enhance dexterity",
ef = "ectoplasmic form",
en = "enrage",
energy = "energy containment",
eq = "ether warp",
es = "enhance strength",
ew = "ego whip",
ex = "excogitate",
f = "detonate",
farsee = "flesh armor",
fly = "flight",
intf = "intellect fortress",
ip = "inflict pain",
iw = "tower of iron will",
lh = "lend health",
ma = "molecular agitation",
mc = "molecular control",
pc = "psychic crush",
worm = "wormhole"
}</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Load Duris Database</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--- Initialize the duris db
db:create("durisdata", {stats={"VNUM", "TYPE", "SLOT", "NAME", "LOCATIONLOWERCASE", "LOCATION", "STATS", "ITEMVALUE"}})
</script>
				<eventHandlerList />
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Colors</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>RGB</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
RGB = {}
RGB.r = "&lt;128,0,0&gt;"			-- Dark Red
RGB.R = "&lt;255,0,0&gt;"			-- Bright Red
RGB.m = "&lt;128,0,128&gt;"		-- Dark Magenta
RGB.M = "&lt;255,0,255&gt;"		-- Bright Magenta
RGB.y = "&lt;128,128,0&gt;"		-- Dark Yellow
RGB.Y = "&lt;255,255,0&gt;"		-- Bright Yellow
RGB.g = "&lt;0,179,0&gt;"			-- Dark Green
RGB.G = "&lt;0,255,0&gt;"			-- Bright Green
RGB.c = "&lt;0,128,128&gt;"		-- Dark Cyan
RGB.C = "&lt;0,255,255&gt;"		-- Bright Cyan
RGB.b = "&lt;0,0,128&gt;"			-- Dark Blue
RGB.B = "&lt;0,0,255&gt;"			-- Bright Blue
RGB.w = "&lt;192,192,192&gt;"	-- Dark White
RGB.W = "&lt;255,255,255&gt;"	-- Bright White
RGB.l = "&lt;64,64,64&gt;"		-- Dark Black
RGB.L = "&lt;128,128,128&gt;"	-- Bright Black</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>ANSI</name>
					<packageName></packageName>
					<script>--ANSI COLOR to HTML
ANSI = {
l = "#000000",
r = "#800000", 
g = "#008000",
y = "#808000",
b = "#000080",
m = "#800080",
c = "#008080",
w = "#C0C0C0",
L = "#808080",
R = "#FF0000",
G = "#00FF00",
Y = "#FFFF00",
B = "#0000FF",
M = "#FF00FF",
C = "#00FFFF",
W = "#EBEBEB"
}</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Character Roller Info</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Variables for Character Roller</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
myRolls= myRolls or {}

scoreLookup = {
lame = 1, 
poor = 2, 
["below average"] = 3, 
average = 4, 
["above average"] = 5, 
good = 6, 
["very good"] = 7, 
excellent = 8
}

RolledStr=""
RolledPow=""
RolledDex=""
RolledInt=""
RolledAgi=""
RolledWis=""
RolledCon=""
RolledCha=""
RolledLuc=""
RolledUnu=""</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>fText-1.3.0</name>
			<packageName>fText-1.3.0</packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>TextFormatter</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>standaloneFormatter</name>
					<packageName></packageName>
					<script>--- fText processing
-- @module demonnic
demonnic = demonnic or {}
local dec = {"d", "decimal", "dec"}
local hex = {"h", "hexidecimal", "hex"}
local col = {"c", "color", "colour", "col", "name"}

function demonnic.wordWrap(str, limit, indent, indent1)
  -- pulled from http://lua-users.org/wiki/StringRecipes
  indent = indent or ""
  indent1 = indent1 or indent
  limit = limit or 72
  local here = 1-#indent1
  local function check(sp, st, word, fi)
    if fi - here &gt; limit then
      here = st - #indent
      return "\n"..indent..word
    end
  end
  return indent1..str:gsub("(%s+)()(%S+)()", check)
end

function demonnic.xwrap(text, limit, type)
  local colorPattern
  if table.contains(dec, type) then
    colorPattern = _Echos.Patterns.Decimal[1]
  elseif table.contains(hex, type) then
    colorPattern = _Echos.Patterns.Hex[1]
  elseif table.contains(col, type) then
    colorPattern = _Echos.Patterns.Color[1]
  else
    return demonnic.wordWrap(text, limit)
  end
  local strippedString = rex.gsub(text, colorPattern, "")
  local strippedLines = demonnic.wordWrap(strippedString, limit):split("\n")
  local lineIndex = 1
  local line = ""
  local strLine = ""
  local lines = {}
  local strLines = {}
  local workingLine = strippedLines[lineIndex]:split("")
  local workingLineLength = #workingLine
  local lineColumn = 0
  for str, color, res in rex.split(text, colorPattern) do
    if res then
      if type == "Hex" then
        color = "#r"
      elseif type == "Dec" then
        color = "&lt;r&gt;"
      elseif type == "Color" then
        color = "&lt;reset&gt;"
      end
    end
    color = color or ""
    local strLen = str:len()
    if lineColumn + strLen &lt;= workingLineLength then
      strLine = strLine .. str
      line = line .. str .. color
      lineColumn = lineColumn + strLen
    else
      local neededChars = workingLineLength - lineColumn
      local take = str:sub(1,neededChars)
      local leave = str:sub(neededChars+1, -1)
      strLine = strLine .. take
      line = line .. take
      table.insert(lines, line)
      table.insert(strLines, strLine)
      line = ""
      strLine = ""
      lineIndex = lineIndex + 1
      workingLine = strippedLines[lineIndex]:split("")
      workingLineLength = #workingLine
      lineColumn = 0
      if leave:sub(1,1) == " " then leave = leave:sub(2,-1) end
      while leave ~= "" do
        take = leave:sub(1, workingLineLength)
        leave = leave:sub(workingLineLength + 1, -1)
        if leave:sub(1,1) == " " then leave = leave:sub(2,-1) end
        if take:len() &lt; workingLineLength then
          lineColumn = take:len()
          line = line .. take .. color
          strLine = strLine .. take
        else
          lineIndex = lineIndex + 1
          workingLine = strippedLines[lineIndex]
          if workingLine then
            workingLine = strippedLines[lineIndex]:split("")
            workingLineLength = #workingLine
          end
          table.insert(lines, take)
          table.insert(strLines, take)
        end
      end
    end
  end
  if line ~= "" then table.insert(lines, line) end
  return table.concat(lines, "\n")
end

function demonnic:fText(str, opts)
  local options = demonnic:fixFormatOptions(str, opts)
  if options.wrap and (options.strLen &gt; options.effWidth) then
    local wrapped = demonnic.xwrap(str, options.effWidth, options.formatType)
    local lines = wrapped:split("\n")
    local formatted = {}
		options.fixed = false
    for _,line in ipairs(lines) do
      table.insert(formatted, demonnic:fLine(line, options))
    end
    return table.concat(formatted, "\n")
  else
    return demonnic:fLine(str, options)
  end
end

function demonnic:fixFormatOptions(str, opts)
  if opts.fixed then return table.deepcopy(opts) end
  --Set up all the things we might call the different echo types
  if opts == nil then opts = {} end -- don't overwrite options if they passed them
  --but if they passed something other than a table as the options than oopsie!
  if type(opts) ~= "table" then
    error("Improper argument: options expected to be passed as table")
  end
  --now we make a copy of the table, so we don't edit the original during all this
  local options = table.deepcopy(opts)
  if options.wrap == nil then options.wrap = true end --wrap by default.
  options.formatType = options.formatType or "" --by default, no color formatting.
  options.width = options.width or 80 --default 80 width
  options.cap = options.cap or "" --no cap by default
  options.spacer = options.spacer or " " --default spacer is the space character
  options.alignment = options.alignment or "center" --default alignment is centered
  if options.nogap == nil then options.nogap = false end
  if options.inside == nil then options.inside = false end --by default, we don't put the spacer inside
  if not options.mirror == false then options.mirror = options.mirror or true end--by default, we do want to use mirroring for the caps
  --setup default options for colors based on the color formatting type
  if table.contains(dec, options.formatType) then
    options.capColor = options.capColor or "&lt;255,255,255&gt;"
    options.spacerColor = options.spacerColor or "&lt;255,255,255&gt;"
    options.textColor = options.textColor or "&lt;255,255,255&gt;"
    options.colorReset = "&lt;r&gt;"
    options.colorPattern = _Echos.Patterns.Decimal[1]
  elseif table.contains(hex, options.formatType) then
    options.capColor = options.capColor or "#FFFFFF"
    options.spacerColor = options.spacerColor or "#FFFFFF"
    options.textColor = options.textColor or "#FFFFFF"
    options.colorReset = "#r"
    options.colorPattern = _Echos.Patterns.Hex[1]
  elseif table.contains(col, options.formatType) then
    options.capColor = options.capColor or "&lt;white&gt;"
    options.spacerColor = options.spacerColor or "&lt;white&gt;"
    options.textColor = options.textColor or "&lt;white&gt;"
    options.colorReset = "&lt;reset&gt;"
    options.colorPattern = _Echos.Patterns.Color[1]
  else
    options.capColor = ""
    options.spacerColor = ""
    options.textColor = ""
    options.colorReset = ""
    options.colorPattern = ""
  end
  options.originalString = str
  options.strippedString = rex.gsub(tostring(str), options.colorPattern, "")
  options.strLen = string.len(options.strippedString)
  options.leftCap = options.cap
  options.rightCap = options.cap
  options.capLen = string.len(options.cap)
  local gapSpaces = 0
  if not options.nogap then
    if options.alignment == "center" then
      gapSpaces = 2
    else
      gapSpaces = 1
    end
  end
  options.nontextlength = options.width - options.strLen - gapSpaces
  options.leftPadLen = math.floor(options.nontextlength / 2)
  options.rightPadLen = options.nontextlength - options.leftPadLen
  options.effWidth = options.width - ((options.capLen * gapSpaces) + gapSpaces)
  if options.capLen &gt; options.leftPadLen then
    options.cap = options.cap:sub(1, leftPadLen)
    options.capLen = string.len(options.cap)
  end
  options.fixed = true
  return options
end

function demonnic:fLine(str,opts)
  local options = demonnic:fixFormatOptions(str,opts)
  local leftCap = options.leftCap
  local rightCap = options.rightCap
  local leftPadLen = options.leftPadLen
  local rightPadLen = options.rightPadLen
  local capLen = options.capLen

  if options.alignment == "center" then --we're going to center something
    if options.mirror then --if we're reversing the left cap and the right cap (IE {{[[ turns into ]]}} )
      rightCap = string.gsub(rightCap, "&lt;", "&gt;")
      rightCap = string.gsub(rightCap, "%[", "%]")
      rightCap = string.gsub(rightCap, "{", "}")
      rightCap = string.gsub(rightCap, "%(", "%)")
      rightCap = string.reverse(rightCap)
    end --otherwise, they'll be the same, so don't do anything
    if not options.nogap then str = string.format(" %s ", str) end

  elseif options.alignment == "right" then --we'll right-align the text
    leftPadLen = leftPadLen + rightPadLen
    rightPadLen = 0
    rightCap = ""
    if not options.nogap then str = string.format(" %s", str) end

  else --Ok, so if it's not center or right, we assume it's left. We don't do justified. Sorry.
    rightPadLen = rightPadLen + leftPadLen
    leftPadLen = 0
    leftCap = ""
    if not options.nogap then str = string.format("%s ", str) end
  end--that's it, took care of both left, right, and center formattings, now to output the durn thing.
  local fullLeftCap = string.format("%s%s%s", options.capColor, leftCap, options.colorReset)
  local fullLeftSpacer = string.format("%s%s%s", options.spacerColor, string.rep(options.spacer, (leftPadLen - capLen)), options.colorReset)
  local fullText = string.format("%s%s%s", options.textColor, str, options.colorReset)
  local fullRightSpacer = string.format("%s%s%s", options.spacerColor, string.rep(options.spacer, (rightPadLen - capLen)), options.colorReset)
  local fullRightCap = string.format("%s%s%s", options.capColor, rightCap, options.colorReset)

  if options.inside then
  -- "endcap===== some text =====endcap"
  -- "endcap===== some text =====pacdne"
  -- "endcap================= some text"
  -- "some text =================endcap"
    local finalString = string.format("%s%s%s%s%s", fullLeftCap, fullLeftSpacer, fullText, fullRightSpacer, fullRightCap)
    return finalString
  else
  --"=====endcap some text endcap====="
  --"=====endcap some text pacdne====="
  --"=================endcap some text"
  --"some text endcap================="

    local finalString = string.format("%s%s%s%s%s", fullLeftSpacer, fullLeftCap, fullText, fullRightCap, fullRightSpacer)
    return finalString
  end
end

function demonnic:align(str, opts)
  local options = {}
  if opts == nil then
    opts = {}
  end
  if type(opts) == "table" then
    options = table.deepcopy(opts)
    options.formatType = ""
		options.wrap = false
  else
    error("Improper argument: options expected to be passed as table")
  end
  options = demonnic:fixFormatOptions(str, options)
  return demonnic:fLine(str, options)
end

function demonnic:dalign(str, opts)
  local options = {}
  if opts == nil then
    opts = {}
  end
  if type(opts) == "table" then
    options = table.deepcopy(opts)
    options.formatType = "d"
    options.wrap = false
  else
    error("Improper argument: options expected to be passed as table")
  end
  options = demonnic:fixFormatOptions(str, options)
  return demonnic:fLine(str, options)
end

function demonnic:calign(str, opts)
  local options = {}
  if opts == nil then
    opts = {}
  end
  if type(opts) == "table" then
    options = table.deepcopy(opts)
    options.formatType = "c"
    options.wrap = false
  else
    error("Improper argument: options expected to be passed as table")
  end
  options = demonnic:fixFormatOptions(str, options)
  return demonnic:fLine(str, options)
end

function demonnic:halign(str, opts)
  local options = {}
  if opts == nil then
    opts = {}
  end
  if type(opts) == "table" then
    options = table.deepcopy(opts)
    options.formatType = "h"
    options.wrap = false
  else
    error("Improper argument: options expected to be passed as table")
  end
  options = demonnic:fixFormatOptions(str, options)
  return demonnic:fLine(str, options)
end

function demonnic:cfText(str, opts)
  local options = {}
  if opts == nil then opts = {} end
  if type(opts) == "table" then
    options = table.deepcopy(opts)
    options.formatType = "c"
  else
    error("Improper argument: options expected to be passed as table")
  end
  options = demonnic:fixFormatOptions(str, options)
  return demonnic:fText(str, options)
end

function demonnic:dfText(str, opts)
  local options = {}
  if opts == nil then opts = {} end
  if type(opts) == "table" then
    options = table.deepcopy(opts)
    options.formatType = "d"
  else
    error("Improper argument: options expected to be passed as table")
  end
  options = demonnic:fixFormatOptions(str, options)
  return demonnic:fText(str, options)
end

function demonnic:hfText(str, opts)
  local options = {}
  if opts == nil then opts = {} end
  if type(opts) == "table" then
    options = table.deepcopy(opts)
    options.formatType = "h"
  else
    error("Improper argument: options expected to be passed as table")
  end
  options = demonnic:fixFormatOptions(str, options)
  return demonnic:fText(str, options)
end

function demonnic:test_ftext()
  local testString = "This is a test of the emergency broadcast system. This is only a test. If this had been a real emergency, we would have given you more sensible information after this. But this was only a test."

  local nTable = {width = 40, cap = "(CAP)", inside = true, alignment = 'center'}
  local cTable = table.deepcopy(nTable)
    cTable.formatType="c"
    cTable.capColor = "&lt;red:black&gt;"
    cTable.spacerColor = "&lt;purple:green&gt;"
    cTable.textColor = "&lt;purple:green&gt;"

  local dTable = table.deepcopy(nTable)
    dTable.formatType="d"
    dTable.capColor = "&lt;0,0,182&gt;"
    dTable.spacerColor = "&lt;0,182,0&gt;"
    dTable.textColor = "&lt;182,0,0&gt;"

  local hTable = table.deepcopy(nTable)
    hTable.formatType="h"
    hTable.capColor = "#FF0000"
    hTable.spacerColor = "#00FF00"
    hTable.textColor = "#0000FF"
  echo(string.rep("\n", 5))
  echo("With word wrap:\n")
  echo(demonnic:fText(testString, nTable) .. "\n")
  cecho(demonnic:fText(testString, cTable) .. "\n")
  decho(demonnic:fText(testString, dTable) .. "\n")
  hecho(demonnic:fText(testString, hTable) .. "\n")

  echo("\n\nWithout word wrap:\n")
  echo(demonnic:align(testString, nTable) .. "\n")
  decho(demonnic:dalign(testString, dTable) .. "\n")
  cecho(demonnic:calign(testString, cTable) .. "\n")
  hecho(demonnic:halign(testString, hTable) .. "\n")
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>reusableFormatter</name>
					<packageName></packageName>
					<script>--- Stand alone text formatter object. Remembers the options you set and can be adjusted as needed
-- @module demonnic.textFormatter
demonnic.TextFormatter = {}
demonnic.TextFormatter.validFormatTypes = { 'd', 'dec', 'decimal', 'h', 'hex', 'hexidecimal', 'c', 'color', 'colour', 'col', 'name'}

--- Set's the formatting type whether it's for cecho, decho, or hecho
--@tparam string typeToSet What type of formatter is this? Valid options are { 'd', 'dec', 'decimal', 'h', 'hex', 'hexidecimal', 'c', 'color', 'colour', 'col', 'name'}
function demonnic.TextFormatter:setType(typeToSet)
  local isNotValid = not table.contains(self.validFormatTypes, typeToSet)
  if isNotValid then
    error("demonnic.TextFormatter:setType: Invalid argument, valid types are:" .. table.concat(self.validFormatTypes, ", "))
  end
  self.options.formatType = typeToSet
end

function demonnic.TextFormatter:toBoolean(thing)
  if type(thing) ~= "boolean" then
    if thing == "true" then
      thing = true
    elseif thing == "false" then
      thing = false
    else
      return nil
    end
  end
  return thing
end

function demonnic.TextFormatter:checkString(str)
  if type(str) ~= "string" then
    if tostring(str) then
      str = tostring(str)
    else
      return nil
    end
  end
  return str
end

--- Sets whether or not we should do word wrapping.
--@tparam boolean shouldWrap should we do wordwrapping?
function demonnic.TextFormatter:setWrap(shouldWrap)
  local argumentType = type(shouldWrap)
  shouldWrap = self:toBoolean(shouldWrap)
  if shouldWrap == nil then
    error("demonnic.TextFormatter:setWrap(shouldWrap) Argument error, boolean expected, got " .. argumentType .. ", if you want to set the number of characters wide to format for, use setWidth()")
  end
  self.options.wrap = shouldWrap
end

--- Sets the width we should format for
--@tparam number width the width we should format for
function demonnic.TextFormatter:setWidth(width)
  if type(width) ~= "number" then
    if tonumber(width) then
      width = tonumber(width)
    else
      error("demonnic.TextFormatter:setWidth(width): Argument error, number expected, got " .. type(width))
    end
  end
  self.options.width = width
end

--- Sets the cap for the formatter
--@tparam string cap the string to use for capping the formatted string.
function demonnic.TextFormatter:setCap(cap)
  local argumentType = type(cap)
  local cap = self:checkString(cap)
  if cap == nil then error("demonnic.TextFormatter:setCap(cap): Argument error, string expect, got " .. argumentType) end
  self.options.cap = cap
end

--- Sets the color for the format cap
--@tparam string capColor Color which can be formatted via Geyser.Color.parse()
function demonnic.TextFormatter:setCapColor(capColor)
  local argumentType = type(capColor)
  local capColor = self:checkString(capColor)
  if capColor == nil then error("demonnic.TextFormatter:setCapColor(capColor): Argument error, string expected, got " .. argumentType) end
  self.options.capColor = capColor
end

--- Sets the color for spacing character
--@tparam string spacerColor Color which can be formatted via Geyser.Color.parse()
function demonnic.TextFormatter:setSpacerColor(spacerColor)
  local argumentType = type(spacerColor)
  local spacerColor = self:checkString(spacerColor)
  if spacerColor == nil then error("demonnic.TextFormatter:setSpacerColor(spacerColor): Argument error, string expected, got " .. argumentType) end
  self.options.spacerColor = spacerColor
end

--- Sets the color for formatted text
--@tparam string textColor Color which can be formatted via Geyser.Color.parse()
function demonnic.TextFormatter:setTextColor(textColor)
  local argumentType = type(textColor)
  local textColor = self:checkString(textColor)
  if textColor == nil then error("demonnic.TextFormatter:setTextColor(textColor): Argument error, string expected, got " .. argumentType) end
  self.options.textColor = textColor
end

--- Sets the spacing character to use. Should be a single character
--@tparam string spacer the character to use for spacing
function demonnic.TextFormatter:setSpacer(spacer)
  local argumentType = type(spacer)
  local spacer = self:checkString(spacer)
  if spacer == nil then error("demonnic.TextFormatter:setSpacer(spacer): Argument error, string expect, got " .. argumentType) end
  self.options.spacer = spacer
end

--- Set the alignment to format for
--@tparam string alignment How to align the formatted string. Valid options are 'left', 'right', or 'center'
function demonnic.TextFormatter:setAlignment(alignment)
  local validAlignments = {
    "left",
    "right",
    "center"
  }
  if not table.contains(validAlignments, alignment) then
    error("demonnic.TextFormatter:setAlignment(alignment): Argument error: Only valid arguments for setAlignment are 'left', 'right', or 'center'. You sent" .. alignment)
  end
  self.options.alignment = alignment
end

--- Set whether the the spacer should go inside the the cap or outside of it
--@tparam boolean spacerInside 
function demonnic.TextFormatter:setInside(spacerInside)
  local argumentType = type(spacerInside)
  spacerInside = self:toBoolean(spacerInside)
  if spacerInside == nil then
    error("demonnic.TextFormatter:setInside(spacerInside) Argument error, boolean expected, got " .. argumentType)
  end
  self.options.inside = spacerInside
end

--- Set whether we should mirror/reverse the caps. IE &lt;&lt; becomes &gt;&gt; if set to true
--@tparam boolean shouldMirror
function demonnic.TextFormatter:setMirror(shouldMirror)
  local argumentType = type(shouldMirror)
  shouldMirror = self:toBoolean(shouldMirror)
  if shouldMirror == nil then
    error("demonnic.TextFormatter:setMirror(shouldMirror): Argument error, boolean expected, got " .. argumentType)
  end
  self.options.mirror = shouldMirror
end

--- Format a string based on the stored options
--@tparam string str The string to format
function demonnic.TextFormatter:format(str)
  return demonnic:fText(str, self.options)
end

--- Creates and returns a new TextFormatter. For valid options, please see https://github.com/demonnic/fText/wiki/fText
--@tparam table options the options for the text formatter to use when running format()
function demonnic.TextFormatter:new(options)
  if options == nil then options = {} end
  if options and type(options) ~= "table" then
    error("demonnic.TextFormatter:new(options): Argument error, table expected, got " .. type(options))
  end
  local me = {}
  me.options = {
    formatType = "c",
    wrap = true,
    width = 80,
    cap = "",
    spacer = " ",
    alignment = "center",
    inside = true,
    mirror = false,
  }
  for option, value in pairs(options) do
    me.options[option] = value
  end
  setmetatable(me, self)
  self.__index = self
  return me
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>tableFormatter</name>
					<packageName></packageName>
					<script>--- Easy formatting for text tables
-- @module demonnic.TableMaker

demonnic.TableMaker = {
  headCharacter = "*",
  footCharacter = "*",
  edgeCharacter = "*",
  rowSeparator = "-",
  separator = "|",
  colorReset = "&lt;reset&gt;",
  formatType = "c",
  printHeaders = true,
  autoEcho = false,
}

function demonnic.TableMaker:checkPosition(position, func)
  if position == nil then position = 0 end
  if type(position) ~= "number" then
    if tonumber(position) then
      position = tonumber(position)
    else
      error(func .. ": Argument error: position expected as number, got " .. type(position))
    end
  end
  return position
end

function demonnic.TableMaker:insert(tbl, pos, item)
  if pos ~= 0 then
    table.insert(tbl, pos, item)
  else
    table.insert(tbl, item)
  end
end

--- Adds a column definition for the table.
--@tparam table options Table of options suitable for a TextFormatter object. See https://github.com/demonnic/fText/wiki/fText
--@tparam number position The position of the column you're adding, counting from the left. If not provided will add it as the last column
function demonnic.TableMaker:addColumn(options, position)
  if options == nil then options = {} end
  if not type(options) == "table" then error("demonnic.TableMaker:addColumn(options, position): Argument error: options expected as table, got " .. type(options)) end
  local options = table.deepcopy(options)
  position = self:checkPosition(position, "demonnic.TableMaker:addColumn(options, position)")
  options.width = options.width or 20
  options.name = options.name or ""
  local formatter = demonnic.TextFormatter:new(options)
  self:insert(self.columns, position, formatter)
end

--- Deletes a column at the given position
--@tparam number position the column you wish to delete
function demonnic.TableMaker:deleteColumn(position)
  if position == nil then error("demonnic.TableMaker:deleteColumn(position): Argument Error: position as number expected, got nil") end
  position = self:checkPosition(position)
  local maxColumn = #self.columns
  if position &gt; maxColumn then error("demonnic.TableMaker:deleteColumn(position): Argument Error: position provided was larger than number of columns in the table. Number of columns: " .. #self.columns) end
  table.remove(self.columns, position)
end

--- Replaces a column at a specific position with the newly provided formatting
--@tparam table options table of options suitable for a TextFormatter object. See https://github.com/demonnic/fText/wiki/fText
--@tparam number position which column you are replacing, counting from the left.
function demonnic.TableMaker:replaceColumn(options, position)
  if position == nil then
    error("demonnic.TableMaker:replaceColumn(options, position): Argument error: position as number expected, got nil")
  end
  position = self:checkPosition(position)
  if type(options) ~= "table" then error("demonnic.TableMaker:replaceColumn(options, position): Argument error: options as table expected, got " .. type(options)) end
  if #self.columns &lt; position then error("demonnic.TableMaker:replaceColumn(options, position): you cannot specify a position higher than the number of columns currently in the TableMaker. You sent:" .. position .. " and there are: " .. #self.columns .. "columns in the TableMaker") end
  options.width = options.width or 20
  options.name = options.name or ""
  local formatter = demonnic.TextFormatter:new(options)
  self.columns[position] = formatter
end

--- Adds a row of output to the table
--@tparam table columnEntries This indexed table contains an entry for each column in the table. Entries in the table must be strings, a table of options for insertPopup or insertLink, or a function which returns one of these things
--@tparam number position position for the row you want to add, counting from the top down. If not provided defaults to the last line in the table.
function demonnic.TableMaker:addRow(columnEntries, position)
  local columnEntriesType = type(columnEntries)
  if columnEntriesType ~= "table" then
    error("demonnic.TableMaker:addRow(columnEntries, position): Argument error, columnEntries expected as table, got " .. columnEntriesType)
  end
  for _,entry in ipairs(columnEntries) do
    local entryCheck = self:checkEntry(entry)
    if entryCheck == 0 then
      if type(entry) == "function" then
        error("demonnic.TableMaker:addRow(columnEntries, position): Argument Error, you provided a function for a columnEntry but it does not return a string. We need a string. It was entry number " .. _ .. "in columnEntries")
      else
        error("demonnic.TableMaker:addRow(columnEntries, position): Argument error, columnEntries items expected as string, got:" .. type(entry))
      end
    end
  end
  position = self:checkPosition(position, "demonnic.TableMaker:addRow(columnEntries, position)")
  self:insert(self.rows, position, columnEntries)
end

--- Deletes the row at the given position
--@tparam number position the row to delete
function demonnic.TableMaker:deleteRow(position)
  if position == nil then error("demonnic.TableMaker:deleteRow(position): Argument Error: position as number expected, got nil") end
  position = self:checkPosition(position, "demonnic.TableMaker:deleteRow(position)")
  local maxRow = #self.rows
  if position &gt; maxRow then error("demonnic.TableMaker:deleteRow(position): Argument Error: position given was &gt; the number of rows we have # of rows is:" .. maxRow) end
  table.remove(self.rows, position)
end

--- Replaces a row of output in the table
--@tparam table columnEntries This indexed table contains an entry for each column in the table. Entries in the table must be strings, a table of options for insertPopup or insertLink, or a function which returns one of these things
--@tparam number position position for the row you want to add, counting from the top down.
function demonnic.TableMaker:replaceRow(columnEntries, position)
  if position == nil then
    error("demonnic.TableMaker:replaceRow(columnEntries, position): ArgumentError: position expected as number, received nil")
  end
  position = self:checkPosition(position, "demonnic.TableMaker:replaceRow(columnEntries, position)")
  if #self.rows &lt; position then
    error("demonnic.TableMaker:replaceRow(columnEntries, position): position cannot be greater than the number of rows already in the tablemaker. You provided: " .. position .. " and there are " .. #self.rows .. "rows in the TableMaker")
  end
  for _,entry in ipairs(columnEntries) do
    local entryCheck = self:checkEntry(entry)
    if entryCheck == 0 then
      if type(entry) == "function" then
        error("demonnic.TableMaker:replaceRow(columnEntries, position): Argument Error: you provided a function for a columnEntry but it does not return a string. We need a string. It was entry number " .. _ .. "in columnEntries")
      else
        error("demonnic.TableMaker:replaceRow(columnEntries, position): Argument error: columnEntries items expected as string, got:" .. type(entry))
      end
    end
  end
  self.rows[position] = columnEntries
end

function demonnic.TableMaker:checkEntry(entry)
  local allowedTypes = {
    "string"
  }
  if self.allowPopups then
    table.insert(allowedTypes, "table")
  end
  local entryType = type(entry)
  if entryType == "function" then
    entryType = type(entry())
  end
  if table.contains(allowedTypes, entryType) then
    return entry
  else
    return 0
  end
end

function demonnic.TableMaker:checkNumber(num)
  if num == nil then num = 0 end
  if not tonumber(num) then num = 0 end
  return tonumber(num)
end

--- Sets a specific cell's display information
--@tparam number row the row number of the cell, counted from the top down
--@tparam number column the column number of the cell, counted from the left
--@param entry What to set the entry to. Must be a string, or a table of options for insertLink/insertPopup if allowPopups is set. Or a function which returns one of these things
function demonnic.TableMaker:setCell(row, column, entry)
  local maxRow = #self.rows
  local maxColumn = #self.columns
  local ae = "demonnic.TableMaker:setCell(row, column, entry): Argument Error:"
  row = self:checkNumber(row)
  if row == 0 then error(ae .. " row must be a number, you provided " .. type(row)) end
  column = self:checkNumber(column)
  if column == 0 then error(ae .. " column must be a number, you provided " .. type(column)) end
  if row &gt; maxRow then error(ae .. " row is higher than the number of rows in the table. Highest row:" .. maxRow) end
  if column &gt; maxColumn then error(ae .. " column is higher than the number of columns in the table. Highest column:" .. maxColumn) end
  local entryType = type(entry)
  entry = self:checkEntry(entry)
  if entry == 0 then
    if type(entry) == "function" then
      error(ae .. " entry was provided as a function, but does not return a string. We need a string in the end")
    else
      error("demonnic.TableMaker:setCell(row, column, entry): Argument Error: entry must be a string, or a function which returns a string. You provided a " .. entryType)
    end
  end
  self.rows[row][column] = entry
end

function demonnic.TableMaker:totalWidth()
  local width = 0
  local numberOfColumns = #self.columns
  local separatorWidth = string.len(self.separator)
  local edgeWidth = string.len(self.edgeCharacter) * 2
  for _,column in ipairs(self.columns) do
    width = width + column.options.width
  end
  separatorWidth = separatorWidth * (numberOfColumns - 1)
  width = width + edgeWidth + separatorWidth
  return width
end

function demonnic.TableMaker:getType()
  local dec = {"d", "decimal", "dec"}
  local hex = {"h", "hexidecimal", "hex"}
  local col = {"c", "color", "colour", "col", "name"}
  if table.contains(dec, self.formatType) then
    return 'd'
  elseif table.contains(hex, self.formatType) then
    return 'h'
  elseif table.contains(col, self.formatType) then
    return 'c'
  else
    return ''
  end
end

function demonnic.TableMaker:echo(message, echoType, ...)
  local fType = self:getType()
  local consoleType = type(self.autoEchoConsole)
  local console = ""
  if echoType == nil then echoType = "" end
  if consoleType == "string" then
    console = self.autoEchoConsole
  else
    console = self.autoEchoConsole.name
  end
  local functionName = string.format("%secho%s", fType, echoType)
  local func = _G[functionName]
  if fType == "" then formatted = false end
  if echoType == "" then
    func(console, message)
  else
    func(console, message, ...)
  end
end

function demonnic.TableMaker:scanRow(rowToScan)
  local row = table.deepcopy(rowToScan)
  local rowEntries = #row
  local numberOfColumns = #self.columns
  local columns = {}
  local linesInRow = 0
  local rowText = ""
  local ec = self.frameColor .. self.edgeCharacter .. self.colorReset
  local sep = self.separatorColor .. self.separator .. self.colorReset

  if rowEntries &lt; numberOfColumns then
    entriesNeeded = numberOfColumns - rowEntries
    for i = 1,entriesNeeded do
      table.insert(row, "")
    end
  end
  for index,formatter in ipairs(self.columns) do
    local str = row[index]
    local column = ""
    if type(str) == "function" then str = str() end
    column = formatter:format(str)
    table.insert(columns, column:split("\n"))
  end
  for _,rowLines in ipairs(columns) do
    if linesInRow &lt; #rowLines then linesInRow = #rowLines end
  end
  for index,rowLines in ipairs(columns) do
    if #rowLines &lt; linesInRow then
      local neededLines = linesInRow - #rowLines
      for i=1,neededLines do
        table.insert(rowLines, self.columns[index]:format(""))
      end
    end
  end
  for i= 1,linesInRow do
    local thisLine = ec
    for index,column in ipairs(columns) do
      if index == 1 then
        thisLine = string.format("%s%s", thisLine, column[i])
      else
        thisLine = string.format("%s%s%s", thisLine, sep, column[i])
      end
    end
    thisLine = string.format("%s%s", thisLine, ec)
    if rowText == "" then
      rowText = thisLine
    else
      rowText = string.format("%s\n%s", rowText, thisLine)
    end
  end
  return rowText
end

function demonnic.TableMaker:echoRow(rowToScan)
  local row = table.deepcopy(rowToScan)
  local rowEntries = #row
  local numberOfColumns = #self.columns
  local columns = {}
  local linesInRow = 0
  local ec = self.frameColor .. self.edgeCharacter .. self.colorReset
  local sep = self.separatorColor .. self.separator .. self.colorReset
  if rowEntries &lt; numberOfColumns then
    local entriesNeeded = numberOfColumns - rowEntries
    for i = 1,entriesNeeded do
      table.insert(row, "")
    end
  end
  for index,formatter in ipairs(self.columns) do
    local str = row[index]
    local column = ""
    if type(str) == "function" then str = str() end
    if type(str) == "table" then
      str = str[1]
    end
    column = formatter:format(str)
    table.insert(columns, column:split("\n"))
  end
  for _,rowLines in ipairs(columns) do
    if linesInRow &lt; #rowLines then linesInRow = #rowLines end
  end
  for index,rowLines in ipairs(columns) do
    if #rowLines &lt; linesInRow then
      local neededLines = linesInRow - #rowLines
      for i=1,neededLines do
        table.insert(rowLines, self.columns[index]:format(""))
      end
    end
  end
  for i= 1,linesInRow do
    self:echo(ec)
    for index,column in ipairs(columns) do
      local message = column[i]
      if index ~= 1 then
        self:echo(sep)
      end
      if type(row[index]) == "string" then
        self:echo(message)
      elseif type(row[index]) == "table" then
        local rowEntry = row[index]
        local echoType = ""
        if type(rowEntry[2]) == "string" then
          echoType = "Link"
        elseif type(rowEntry[2]) == "table" then
          echoType = "Popup"
        end
        self:echo(message, echoType, rowEntry[2], rowEntry[3], rowEntry[4] or true)
      end
    end
    self:echo(ec)
    if i ~= linesInRow then
      self:echo("\n")
    end
  end
end

function demonnic.TableMaker:makeHeader()
  local totalWidth = self:totalWidth()
  local ec = self.frameColor .. self.edgeCharacter .. self.colorReset
  local sep = self.separatorColor .. self.separator .. self.colorReset
  local header = self.frameColor .. string.rep(self.headCharacter, totalWidth) .. self.colorReset
  local columnHeaders = ""
  if self.printHeaders then
    local columnEntries = {}
    for _,v in ipairs(self.columns) do
      table.insert(columnEntries, v:format(v.options.name))
    end
    local divWithNewlines = string.format("\n%s", self:createRowDivider())
    columnHeaders = string.format("\n%s%s%s%s", ec, table.concat(columnEntries, sep), ec, divWithNewlines)
  end
  header = string.format("%s%s", header, columnHeaders)
  return header
end

function demonnic.TableMaker:createRowDivider()
  local columnPieces = {}
  for _,v in ipairs(self.columns) do
    local piece = string.format("%s%s%s", self.separatorColor, string.rep(self.rowSeparator, v.options.width), self.colorReset)
    table.insert(columnPieces, piece)
  end
  local ec = self.frameColor .. self.edgeCharacter .. self.colorReset
  local sep = self.separatorColor .. self.separator .. self.colorReset
  return string.format("%s%s%s", ec, table.concat(columnPieces, sep), ec)
end

--- enables making cells which incorporate insertLink/insertPopup
function demonnic.TableMaker:enablePopups()
  self.autoEcho = true
  self.allowPopups = true
end

--- enables autoEcho so that when assemble is called it echos automatically
function demonnic.TableMaker:enableAutoEcho()
  self.autoEcho = true
end

--- disables autoecho. Cannot be used if allowPopups is set
function demonnic.TableMaker:disableAutoEcho()
  if self.allowPopups then
    error("demonnic.TableMaker:disableAutoEcho(): you cannot disable autoEcho once you have enabled popups.")
  else
    self.autoEcho = false
  end
end

--- Enables automatically clearing the miniconsole we echo to
function demonnic.TableMaker:enableAutoClear()
  self.autoClear = true
end

--- Disables automatically clearing the miniconsole we echo to
function demonnic.TableMaker:disableAutoClear()
  self.autoClear = false
end

--- Set the miniconsole to echo to
--@param console The miniconsole to autoecho to. Set to "main" or do not pass the parameter to autoecho to the main console. Can be a string name of the console, or a Geyser MiniConsole
function demonnic.TableMaker:setAutoEchoConsole(console)
  local funcName = "demonnic.TableMaker:setAutoEchoConsole(console)"
  if console == nil then
    console = "main"
  end
  local consoleType = type(console)
  if consoleType ~= "string" and consoleType ~= "table" then
    error(funcName .. " ArgumentError: console as string or Geyser.MiniConsole expected, got " .. consoleType)
  elseif consoleType == "table" and console.type ~= "miniConsole" then
    error(funcName .. " ArgumentError: console received was a table and may be a Geyser object, but console.type is not miniConsole, it is " .. console.type)
  end
  self.autoEchoConsole = console
end

--- Assemble the table. If autoEcho is enabled/set to true, will automatically echo. Otherwise, returns the formatted string to echo the table
function demonnic.TableMaker:assemble()
  if self.allowPopups and self.autoEcho then
    self:popupAssemble()
  else
    return self:textAssemble()
  end
end

function demonnic.TableMaker:popupAssemble()
  if self.autoClear then
    local console = self.autoEchoConsole
    if console and console ~= "main" then
      if type(console) == "table" then
        console = console.name
      end
      clearWindow(console)
    end
  end
  local divWithNewLines = string.format("\n%s\n", self:createRowDivider())
  local header = self:makeHeader() .. "\n"
  local footer = string.format("\n%s%s%s\n", self.frameColor, string.rep(self.footCharacter, self:totalWidth()), self.colorReset)
  self:echo(header)
  for _,row in ipairs(self.rows) do
    if _ ~= 1 then
      self:echo(divWithNewLines)
    end
    self:echoRow(row)
  end
  self:echo(footer)
end

function demonnic.TableMaker:textAssemble()
  local sheet = ""
  local rows = {}
  for _,row in ipairs(self.rows) do
    table.insert(rows, self:scanRow(row))
  end
  local divWithNewlines = string.format("\n%s\n", self:createRowDivider())
  local footer = string.format("%s%s%s", self.frameColor, string.rep(self.footCharacter, self:totalWidth()), self.colorReset)
  sheet = string.format("%s\n%s\n%s\n", self:makeHeader(), table.concat(rows, divWithNewlines), footer)
  if self.autoEcho then
    local console = self.autoEchoConsole or "main"
    if type(console) == "table" then console = console.name end
    if self.autoClear and console ~= "main" then
      clearWindow(console)
    end
    self:echo(sheet)
  end
  return sheet
end

--- Creates and returns a new TableMaker. See https://github.com/demonnic/fText/wiki/TableMaker for valid entries to the options table.
--@tparam table options table of options for the TableMaker object
function demonnic.TableMaker:new(options)
  local funcName = "emonnic.TableMaker:new(options)"
  local me = {}
  setmetatable(me, self)
  self.__index = self
  if options == nil then options = {} end
  if type(options) ~= "table" then
    error("demonnic.TableMaker:new(options): ArgumentError: options expected as table, got " .. type(options))
  end
  local options = table.deepcopy(options)
  if options.allowPopups == true then
    options.autoEcho = true
  else
    options.allowPopups = false
  end
  local columns = false
  if options.columns then
    if type(options.columns) ~= "table" then error("demonnic.TableMaker:new(options): option error: You provided an options.columns entry of type " .. type(options.columns) .. " and columns must a table with entries suitable for demonnic.TableFormatter:addColumn().") end
    columns = table.deepcopy(options.columns)
    options.columns = nil
  end
  local rows = false
  if options.rows then
    if type(options.rows) ~= "table" then error("demonnic.tableMaker:new(options): option error: You provided an options.rows entry of type " .. type(options.rows) .. " and rows must be a table with entrys suitable for demonnic.TableFormatter:addRow()") end
    rows = table.deepcopy(options.rows)
    options.rows = nil
  end
  for option, value in pairs(options) do
    me[option] = value
  end
  local dec = {"d", "decimal", "dec"}
  local hex = {"h", "hexidecimal", "hex"}
  local col = {"c", "color", "colour", "col", "name"}
  if table.contains(dec, me.formatType) then
    me.frameColor = me.frameColor or "&lt;255,255,255&gt;"
    me.separatorColor = me.separatorColor or me.frameColor
    me.colorReset = "&lt;r&gt;"
  elseif table.contains(hex, me.formatType) then
    me.frameColor = me.frameColor or "#ffffff"
    me.separatorColor = me.separatorColor or me.frameColor
    me.colorReset = "#r"
  elseif table.contains(col, me.formatType) then
    me.frameColor = me.frameColor or "&lt;white&gt;"
    me.separatorColor = me.separatorColor or me.frameColor
    me.colorReset = "&lt;reset&gt;"
  else
    me.frameColor = ""
    me.separatorColor = ""
    me.colorReset = ""
  end
  me.columns = {}
  me.rows = {}
  if columns then
    for _,column in ipairs(columns) do
      me:addColumn(column)
    end
  end
  if rows then
    for _,row in ipairs(rows) do
      me:addRow(row)
    end
  end
  return me
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<Script isActive="yes" isFolder="no">
				<name>Ftext Backwards Compatability</name>
				<packageName></packageName>
				<script>function cfText(str, options)
  return demonnic:cfText(str, options)
end
function dfText(str, options)
  return demonnic:dfText(str, options)
end
function hfText(str, options)
  return demonnic:hfText(str, options)
end
function fText(str, options)
  return demonnic:fText(str, options)
end
function align(str, options)
  return demonnic:align(str, options)
end
function dalign(str, options)
  return demonnic:dalign(str, options)
end
function calign(str, options)
  return demonnic:calign(str, options)
end
function halign(str, options)
  return demonnic:halign(str, options)
end</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>ZoneData</name>
			<packageName>ZoneData</packageName>
			<script></script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>ZoneData</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>ZoneLinks</name>
					<packageName></packageName>
					<script>ZoneLinks = {["Ako Village"] = "https://sites.google.com/site/durisdarkward/home/files/akovillage.jpg",
["Arbre's Forest"] = "https://sites.google.com/site/durisdarkward/home/files/arbresforest.jpg",
["Arcium, the Plagued Kingdom"] = "https://sites.google.com/site/durisdarkward/home/files/arcium.jpg",
["Bandit Camp"] = "https://sites.google.com/site/durisdarkward/home/files/banditcamp.jpg",
["The Bandit Canyons"] = "https://sites.google.com/site/durisdarkward/home/files/banditcanyon.jpg",
["BogenTok"] = "https://sites.google.com/site/durisdarkward/home/files/Bogentok.jpg",
["Mini Zones"] = "https://sites.google.com/site/durisdarkward/home/files/brokenbladetavern.jpg",
["Centaur Villages"] = "https://sites.google.com/site/durisdarkward/home/files/centaurvillages.jpg",
["Charing"] = "https://sites.google.com/site/durisdarkward/home/files/charing.jpg",
["The Cimmerian Nomad Encampment"] = "https://sites.google.com/site/durisdarkward/home/files/cimmeriannomads.jpg",
["Darkfall Forest"] = "https://sites.google.com/site/durisdarkward/home/files/darkfall.jpg",
["Quintaragon Castle"] = "https://sites.google.com/site/durisdarkward/home/files/darkmore.jpg",
["Desolate"] = "https://sites.google.com/site/durisdarkward/home/files/desolate.jpg",
["Du'Maathe Castle"] = "https://sites.google.com/site/durisdarkward/home/files/dumaathe.jpg",
["The Elemental Groves"] = "https://sites.google.com/site/durisdarkward/home/files/elementalgroves.jpg",
["Faerie Realm"] = "https://sites.google.com/site/durisdarkward/home/files/faerierealms.jpg",
["Fishermans Wharf"] = "https://sites.google.com/site/durisdarkward/home/files/fishermanswarf.jpg",
["The Fog Enshrouded Wood"] = "https://sites.google.com/site/durisdarkward/home/files/fogenshroudedwoods.jpg",
["The Forgotten Forest"] = "https://sites.google.com/site/durisdarkward/home/files/forgottenforest.jpg",
["Ashrumite Village"] = "https://sites.google.com/site/durisdarkward/home/files/GnomeHometown.jpg",
["Golden Hall of the Crown"] = "https://sites.google.com/site/durisdarkward/home/files/goldenhalls.jpg",
["Harrow -The Gnome Village"] = "https://sites.google.com/site/durisdarkward/home/files/harrow.jpg",
["The Haunted Woods"] = "https://sites.google.com/site/durisdarkward/home/files/hauntedwoods.jpg",
["The High Moor Forest"] = "https://sites.google.com/site/durisdarkward/home/files/highmoor.jpg",
["Kimordril"] = "https://sites.google.com/site/durisdarkward/home/files/kimordril.jpg",
["Defense of Longhollow"] = "https://sites.google.com/site/durisdarkward/home/files/longhollow.jpg",
["Lylr-Meop"] = "https://sites.google.com/site/durisdarkward/home/files/lylrmeop.jpg",
["Lylr-Meop"] = "https://sites.google.com/site/durisdarkward/home/files/meopham.jpg",
["Southern Coastal Highway"] = "https://sites.google.com/site/durisdarkward/home/files/mir.jpg",
["The Motte and Bailey of Duke Delwyn"] = "https://sites.google.com/site/durisdarkward/home/files/MotteAndBailey.jpg",
["Myrabolus"] = "https://sites.google.com/site/durisdarkward/home/files/myrabolus.jpg",
["Neverwind Valley"] = "https://sites.google.com/site/durisdarkward/home/files/neverwindvalley.jpg",
["Neverwinter Woods"] = "https://sites.google.com/site/durisdarkward/home/files/neverwinter.jpg",
["Newhaven"] = "https://sites.google.com/site/durisdarkward/home/files/newhaven.jpg",
["The Village of New Hope"] = "https://sites.google.com/site/durisdarkward/home/files/newhope.jpg",
["Nizari"] = "https://sites.google.com/site/durisdarkward/home/files/nizari.jpg",
["The Outcasts Tower"] = "https://sites.google.com/site/durisdarkward/home/files/outcasttower.jpg",
["Pits of Cerberus"] = "https://sites.google.com/site/durisdarkward/home/files/pitofcerebus.jpg",
["Rift Valley Jungle"] = "https://sites.google.com/site/durisdarkward/home/files/rift.jpg",
["The Savannah of Broken Trusts"] = "https://sites.google.com/site/durisdarkward/home/files/savannah.jpg",
["Shadowclave"] = "https://sites.google.com/site/durisdarkward/home/files/shadowclave.jpg",
["The Mountain Village of Tentro"] = "https://sites.google.com/site/durisdarkward/home/files/tentro.jpg",
["Tharnadia - City of Humans"] = "https://sites.google.com/site/durisdarkward/home/files/Tharnadia.jpg",
["City of Torrhan "] = "https://sites.google.com/site/durisdarkward/home/files/torhan.jpg",
["The Temple of the Sun"] = "https://sites.google.com/site/durisdarkward/home/files/tos.jpg",
["The Ruins of Turolopolis"] = "https://sites.google.com/site/durisdarkward/home/files/turolopolis.jpg",
["Twin Towers Forest"] = "https://sites.google.com/site/durisdarkward/home/files/twintowers.jpg",
["A Dark and Twisted Wood"] = "https://sites.google.com/site/durisdarkward/home/files/twistedwoods.jpg",
["Ugta"] = "https://sites.google.com/site/durisdarkward/home/files/ugta.jpg",
["Valley of Crushk"] = "https://sites.google.com/site/durisdarkward/home/files/valleyofcrushk.jpg",
["Vella's Bordello"] = "https://sites.google.com/site/durisdarkward/home/files/vellasbordello.jpg",
["Wellvolen"] = "https://sites.google.com/site/durisdarkward/home/files/wemics.jpg",
["Woodseer"] = "https://sites.google.com/site/durisdarkward/home/files/woodseer.jpg",
["Pine Hollow"] = "https://sites.google.com/site/durisdarkward/home/files/Drevarr_Pinehollow.jpg"}</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>TabChat</name>
			<packageName></packageName>
			<script>local myEMCOstylesheet = [[background-color: rgb(0,180,0,255); border-width: 1px; border-style: solid; border-color: khaki; border-radius: 1px;]]
local myEMCOistylesheet = [[background-color: rgb(60,60,60,255); border-width: 1px; border-style: solid; border-color: khaki; border-radius: 1px;]]

GUI.myEMCO = EMCO:new({
  x = "0",
  y = "0",
  width = "100%",
  height = "100%",
  allTab = true,
  allTabName = "All",
  gap = 2,
  consoleColor = "black",
  consoles = {
    "All",
    "RaceWar", 
    "Score",
    "Attrib",
    "Skills",
    "Misc",	  
  },
  activeTabCSS = myEMCOstylesheet,
  inactiveTabCSS = myEMCOistylesheet,
}, GUI.ChatBox1)</script>
			<eventHandlerList />
		</Script>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>Duris_Key_Sets_2021</name>
			<packageName>Duris_Key_Sets_2021</packageName>
			<script></script>
			<command></command>
			<keyCode>0</keyCode>
			<keyModifier>0</keyModifier>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>Duris Key Set</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>16777221</keyCode>
				<keyModifier>536870912</keyModifier>
				<KeyGroup isActive="yes" isFolder="yes">
					<name>FunctionKeys</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>-1</keyCode>
					<keyModifier>-1</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>F8</name>
						<packageName></packageName>
						<script>send("kill "..Target)</script>
						<command></command>
						<keyCode>16777271</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>F9</name>
						<packageName></packageName>
						<script>if myClass == "Necromancer" then
	expandAlias("ct "..Target, false)
end</script>
						<command></command>
						<keyCode>16777272</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>F10</name>
						<packageName></packageName>
						<script>if myClass == "Necromancer" then
	expandAlias("li "..Target, false)
end
</script>
						<command></command>
						<keyCode>16777273</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>F11</name>
						<packageName></packageName>
						<script>if myClass == "Necromancer" then
	expandAlias("ed "..Target, false)
end</script>
						<command></command>
						<keyCode>16777274</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>F12</name>
						<packageName></packageName>
						<script>if myClass == "Necromancer" then
	expandAlias("f "..Target, false)
end

if myClass == "Paladin" then
	send("rescue "..myTank, true)
end

if myClass == "Rogue" then
	FleeBacSet = "True"
	send("flee")
end</script>
						<command></command>
						<keyCode>16777275</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>F1</name>
						<packageName></packageName>
						<script>if myClass == "Necromancer" then
	expandAlias("hu "..Pet_1, false)
	expandAlias("pu "..Pet_1, false)
end</script>
						<command></command>
						<keyCode>16777264</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>F2</name>
						<packageName></packageName>
						<script>if myClass == "Necromancer" then
	expandAlias("hu "..Pet_2, false)
	expandAlias("pu "..Pet_2, false)
end</script>
						<command></command>
						<keyCode>16777265</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>F3</name>
						<packageName></packageName>
						<script>if myClass == "Necromancer" then
	expandAlias("hu "..Pet_3, false)
	expandAlias("pu "..Pet_3, false)
end</script>
						<command></command>
						<keyCode>16777266</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>F4</name>
						<packageName></packageName>
						<script>if myClass == "Necromancer" then
	expandAlias("hu "..Pet_4, false)
	expandAlias("pu "..Pet_4, false)
end</script>
						<command></command>
						<keyCode>16777267</keyCode>
						<keyModifier>0</keyModifier>
					</Key>
				</KeyGroup>
				<KeyGroup isActive="yes" isFolder="yes">
					<name>WalkKeys</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>-1</keyCode>
					<keyModifier>-1</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>North</name>
						<packageName></packageName>
						<script>last_Dir = "north"</script>
						<command>n</command>
						<keyCode>56</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>South</name>
						<packageName></packageName>
						<script>last_Dir = "south"</script>
						<command>s</command>
						<keyCode>50</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>East</name>
						<packageName></packageName>
						<script>last_Dir = "east"</script>
						<command>e</command>
						<keyCode>54</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>West</name>
						<packageName></packageName>
						<script>last_Dir = "west"</script>
						<command>w</command>
						<keyCode>52</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Up</name>
						<packageName></packageName>
						<script>last_Dir = "up"</script>
						<command>u</command>
						<keyCode>57</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Down</name>
						<packageName></packageName>
						<script>last_Dir = "down"</script>
						<command>d</command>
						<keyCode>51</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Look</name>
						<packageName></packageName>
						<script></script>
						<command>l</command>
						<keyCode>53</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Flee</name>
						<packageName></packageName>
						<script></script>
						<command>Flee</command>
						<keyCode>55</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Scan</name>
						<packageName></packageName>
						<script></script>
						<command>scan</command>
						<keyCode>48</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Open North</name>
						<packageName></packageName>
						<script></script>
						<command>open n</command>
						<keyCode>56</keyCode>
						<keyModifier>671088640</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Open South</name>
						<packageName></packageName>
						<script></script>
						<command>open s</command>
						<keyCode>50</keyCode>
						<keyModifier>671088640</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Open East</name>
						<packageName></packageName>
						<script></script>
						<command>open e</command>
						<keyCode>54</keyCode>
						<keyModifier>671088640</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Open West</name>
						<packageName></packageName>
						<script></script>
						<command>open w</command>
						<keyCode>52</keyCode>
						<keyModifier>671088640</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Open Up</name>
						<packageName></packageName>
						<script></script>
						<command>open u</command>
						<keyCode>57</keyCode>
						<keyModifier>671088640</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Open Down</name>
						<packageName></packageName>
						<script></script>
						<command>open d</command>
						<keyCode>51</keyCode>
						<keyModifier>671088640</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Scan1</name>
						<packageName></packageName>
						<script></script>
						<command>scan</command>
						<keyCode>49</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>CloseNorth</name>
						<packageName></packageName>
						<script></script>
						<command>close north</command>
						<keyCode>56</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>CloseSouth</name>
						<packageName></packageName>
						<script></script>
						<command>Close South</command>
						<keyCode>50</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>CloseEast</name>
						<packageName></packageName>
						<script></script>
						<command>Close East</command>
						<keyCode>54</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>CloseWest</name>
						<packageName></packageName>
						<script></script>
						<command>Close West</command>
						<keyCode>52</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>CloseUp</name>
						<packageName></packageName>
						<script></script>
						<command>Close Up</command>
						<keyCode>57</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>CloseDown</name>
						<packageName></packageName>
						<script></script>
						<command>Close Down</command>
						<keyCode>51</keyCode>
						<keyModifier>603979776</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Close Direction</name>
						<packageName></packageName>
						<script>-- Close reverse of last direction
send("close " ..flee_Dir[last_Dir])</script>
						<command></command>
						<keyCode>45</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Open Direction</name>
						<packageName></packageName>
						<script>send("open " ..last_Dir)</script>
						<command></command>
						<keyCode>43</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
				</KeyGroup>
				<KeyGroup isActive="no" isFolder="yes">
					<name>ShipKeys</name>
					<packageName></packageName>
					<script></script>
					<command></command>
					<keyCode>-1</keyCode>
					<keyModifier>-1</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>Order North</name>
						<packageName></packageName>
						<script>send("order heading n")</script>
						<command></command>
						<keyCode>56</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Order South</name>
						<packageName></packageName>
						<script>send("order heading s")</script>
						<command></command>
						<keyCode>50</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Order East</name>
						<packageName></packageName>
						<script>send("order heading e")</script>
						<command></command>
						<keyCode>54</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Order West</name>
						<packageName></packageName>
						<script>send("order heading w")</script>
						<command></command>
						<keyCode>52</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Order NorthEast</name>
						<packageName></packageName>
						<script>send("order heading 45")</script>
						<command></command>
						<keyCode>57</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Order SouthEast</name>
						<packageName></packageName>
						<script>send("order heading 135")</script>
						<command></command>
						<keyCode>51</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Order SouthWest</name>
						<packageName></packageName>
						<script>send("order heading 225")</script>
						<command></command>
						<keyCode>49</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Order NorthWest</name>
						<packageName></packageName>
						<script>send("order heading 315")</script>
						<command></command>
						<keyCode>55</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Look Contact</name>
						<packageName></packageName>
						<script></script>
						<command>Look Contacts</command>
						<keyCode>53</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>Order Speed 20</name>
						<packageName></packageName>
						<script></script>
						<command>order speed 20</command>
						<keyCode>45</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>order speed 100</name>
						<packageName></packageName>
						<script></script>
						<command>order speed 100</command>
						<keyCode>43</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
				</KeyGroup>
				<KeyGroup isActive="no" isFolder="yes">
					<name>DruidFunctionKeys</name>
					<packageName></packageName>
					<script>send("cast 'lightningbolt' "..Target)</script>
					<command></command>
					<keyCode>16777275</keyCode>
					<keyModifier>0</keyModifier>
				</KeyGroup>
			</KeyGroup>
		</KeyGroup>
	</KeyPackage>
	<VariablePackage>
		<HiddenVariables />
	</VariablePackage>
</MudletPackage>
